{"version":3,"sources":["app/js/AppManager.js","app/js/factories.js","app/js/activities.js","app/js/activities/abacus.js","app/js/activities/buy_items.js","app/js/activities/chalkboard.js","app/js/activities/checkbox_options.js","app/js/activities/choose_correct_image.js","app/js/activities/choose_correct_image_secuence.js","app/js/activities/choose_correct_option.js","app/js/activities/choose_items.js","app/js/activities/click_and_listen.js","app/js/activities/click_image_map.js","app/js/activities/click_to_complete_input.js","app/js/activities/click_to_select_position.js","app/js/activities/compare_sample.js","app/js/activities/compare_sounds.js","app/js/activities/complementary.js","app/js/activities/complementary2.js","app/js/activities/complete_input_parts.js","app/js/activities/complete_inputs.js","app/js/activities/complete_inputs_description.js","app/js/activities/complete_inputs_free.js","app/js/activities/complete_inputs_position.js","app/js/activities/complete_inputs_true_false.js","app/js/activities/complete_letters.js","app/js/activities/complete_multitable.js","app/js/activities/complete_table_image_inputs.js","app/js/activities/complete_table_inputs.js","app/js/activities/complete_table_random_inputs.js","app/js/activities/complete_table_with_list.js","app/js/activities/complete_table_with_text.js","app/js/activities/complete_text_boxes.js","app/js/activities/complete_words.js","app/js/activities/complete_words_select.js","app/js/activities/complete_words_wi.js","app/js/activities/count_elements.js","app/js/activities/count_elements2.js","app/js/activities/crossword.js","app/js/activities/crossword_with_letter.js","app/js/activities/differences.js","app/js/activities/drag_drop_mark.js","app/js/activities/drag_drop_multiples.js","app/js/activities/drag_drop_multiples_diff.js","app/js/activities/drag_drop_multiples_positions.js","app/js/activities/drag_drop_pair_text.js","app/js/activities/drag_mark_canvas.js","app/js/activities/drag_to_img.js","app/js/activities/drag_to_mat.js","app/js/activities/drag_to_text.js","app/js/activities/drag_to_texts.js","app/js/activities/drop_boxes.js","app/js/activities/drop_condition.js","app/js/activities/drop_image_sample.js","app/js/activities/drop_out.js","app/js/activities/giraffe.js","app/js/activities/greater_lower_mat.js","app/js/activities/greater_lower_than.js","app/js/activities/group_choice_words.js","app/js/activities/group_classify_table.js","app/js/activities/group_complete_free_conditions.js","app/js/activities/group_complete_images.js","app/js/activities/group_complete_letters.js","app/js/activities/group_complete_sound.js","app/js/activities/group_complete_sounds.js","app/js/activities/group_complete_text.js","app/js/activities/group_complete_text_free.js","app/js/activities/group_complete_words.js","app/js/activities/group_complete_yes_not.js","app/js/activities/group_inputs.js","app/js/activities/group_puzzle_word.js","app/js/activities/group_select_multiples_words.js","app/js/activities/group_select_words.js","app/js/activities/group_table_complete_words.js","app/js/activities/group_table_text_conditions.js","app/js/activities/group_table_text_conditions_options.js","app/js/activities/group_table_text_free.js","app/js/activities/group_table_text_options.js","app/js/activities/image_group_drop.js","app/js/activities/image_map_select.js","app/js/activities/inputs_and_table.js","app/js/activities/joining_lines.js","app/js/activities/letter_soup.js","app/js/activities/mark_drag_canvas.js","app/js/activities/multiple_mark.js","app/js/activities/multiple_selection.js","app/js/activities/numeric_sequences.js","app/js/activities/one_group.js","app/js/activities/one_group_rule.js","app/js/activities/one_group_shape.js","app/js/activities/one_group_toogle.js","app/js/activities/operation_input.js","app/js/activities/pairs.js","app/js/activities/pairs_inputs.js","app/js/activities/pairs_squares.js","app/js/activities/pairs_with_message.js","app/js/activities/puzzle1.js","app/js/activities/puzzle2.js","app/js/activities/puzzle3.js","app/js/activities/puzzle4.js","app/js/activities/puzzle5.js","app/js/activities/puzzle_word.js","app/js/activities/questions_images.js","app/js/activities/radio_questions.js","app/js/activities/radio_questions_images.js","app/js/activities/replace_with_inputs.js","app/js/activities/replace_with_inputs_mat.js","app/js/activities/select_all_correct_image_option.js","app/js/activities/select_checkbox.js","app/js/activities/select_correct_image_option.js","app/js/activities/select_options_img.js","app/js/activities/select_options_positions.js","app/js/activities/select_options_table.js","app/js/activities/select_questions.js","app/js/activities/select_table_image_multiple.js","app/js/activities/select_words.js","app/js/activities/sequences.js","app/js/activities/side_numbers.js","app/js/activities/sound_group.js","app/js/activities/sound_groups.js","app/js/activities/stack_multiple.js","app/js/activities/table_path.js","app/js/activities/table_path_instruction.js","app/js/activities/tangram.js","app/js/activities/ten_thousand_numbers.js","app/js/activities/text_activity.js","app/js/activities/thousand_numbers.js","app/js/activities/thousand_patterns.js","app/js/activities/two_group.js","app/js/activities/write_true_false.js","app/js/animations/animation_base.js","app/js/animations/animation_video.js","app/js/concepts/box_animation_figure.js","app/js/concepts/bubble_description.js","app/js/concepts/button_bubble_description.js","app/js/concepts/change_style_click.js","app/js/concepts/change_style_select.js","app/js/concepts/click_images.js","app/js/concepts/click_transition.js","app/js/concepts/competences.js","app/js/concepts/concepts_table.js","app/js/concepts/correct_word_in_sentence.js","app/js/concepts/hover_show_text.js","app/js/concepts/image_map_description.js","app/js/concepts/image_map_mat.js","app/js/concepts/image_sound.js","app/js/concepts/images_and_text.js","app/js/concepts/images_block_description.js","app/js/concepts/images_block_mat.js","app/js/concepts/images_info.js","app/js/concepts/letter1.js","app/js/concepts/multiple_image_map_description.js","app/js/concepts/multiples_images_and_text.js","app/js/concepts/show_concepts.js","app/js/concepts/show_concepts_character.js","app/js/concepts/show_concepts_characters.js","app/js/concepts/show_concepts_group_examples.js","app/js/concepts/show_concepts_images.js","app/js/concepts/show_concepts_img.js","app/js/concepts/show_concepts_text.js","app/js/concepts/show_description.js","app/js/concepts/show_description_images_sound.js","app/js/concepts/show_hover_words.js","app/js/concepts/show_images_block_description.js","app/js/concepts/show_multiple_hover_phrase.js","app/js/concepts/show_name.js","app/js/concepts/show_parts.js","app/js/concepts/show_text_character.js","app/js/concepts/slideshow_character.js","app/js/concepts/table.js","app/js/concepts/text1.js","app/js/concepts/transclusion.js","app/js/concepts/transclusions.js","app/js/concepts/two_frames_description.js","app/js/concepts/watch.js","app/js/concepts/zoom.js","app/js/directives.js","app/js/guides/01/esp101.js","app/js/guides/01/esp102.js","app/js/guides/01/esp103.js","app/js/guides/01/esp103_.js","app/js/guides/01/esp104.js","app/js/guides/01/esp105.js","app/js/guides/01/esp106.js","app/js/guides/01/esp107.js","app/js/guides/01/mat101.js","app/js/guides/01/mat102.js","app/js/guides/01/mat103.js","app/js/guides/01/mat104.js","app/js/guides/01/mat105.js","app/js/guides/01/mat106.js","app/js/guides/01/mat107.js","app/js/guides/01/nat101.js","app/js/guides/01/nat102.js","app/js/guides/01/nat103.js","app/js/guides/01/nat104.js","app/js/guides/01/nat105.js","app/js/guides/01/nat106.js","app/js/guides/01/nat107.js","app/js/guides/01/soc101.js","app/js/guides/01/soc102.js","app/js/guides/01/soc103.js","app/js/guides/01/soc104.js","app/js/guides/01/soc105.js","app/js/guides/01/soc106.js","app/js/guides/01/soc107.js","app/js/ko_utils.js"],"names":[],"mappingsfhjhGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnvzlvtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACprlHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChxrtrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzrvzznzvxxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnlpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnjzplFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrzzlhrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnnnnvxrvPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzvhrtlvnhrnlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnnzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdrxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxhjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CCzvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CCzlEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACthCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvllroxxnNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnjZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtljxvlztvtSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public/scripts/app.js","sourcesContent":["var AppManager = function () {\n\n  var AppManager = {\n    // Referencia de $routeProvider\n    routeProvider: {},\n\n    // Rutas que ha ingresado el usuario sin procesar. Toma la variable routeBase en configModule\n    routeBase: {},\n\n    // Constantes para el manejo de grupos\n    GROUPS: {\n      BEARS: 1,\n      TIGERS: 2,\n      LIONS: 3\n    },\n\n    // Para producción en repositorios de sharepoint. IMPORTANTE!!!!\n    MENUS: [\n      \"../../Primero/primero.html\",\n      \"../../Segundo/segundo.html\",\n      \"../../Tercero/tercero.html\",\n      \"../../Cuarto/cuarto.html\",\n    ],\n\n    /**\n     * Devuelve un array con las rutas de routeBase\n     * Usado principalmente para obtener la posición actual dentro de las rutas\n     *\n     * @return Array array con las rutas\n     */\n    getPathArray: function () {\n      var arr = [];\n\n      angular.forEach(this.routeBase.routes, function (route) {\n        arr.push(route.name);\n      });\n\n      return arr;\n    },\n\n    /**\n     * Configura el ruteador de la aplicación de modo que puede ser utilizado\n     * posteriormente. La idea es generar un ruteador secuencial fácil de utilizar\n     *\n     * @param app      Object    Módulo de angular al cuál se le quieren ingresar las rutas\n     * @param routeBase    Object    Objeto que posee 2 elementos:\n     *    routes:\n     *      name: nombre de la ruta. Ejemplo: '/ruta-1'\n     *      templateUrl: plantilla de angular\n     *      controller: controlador especificado\n     *\n     *    No obstante, se pueden pasar más elementos y usarlo como se desee\n     */\n    configModule: function (app, routeBase) {\n\n      var self = this,\n        actualRoute = {},\n        nextRoute = {},\n        lastRoute = app.name + \"lr\"; // Nombre de la variable en localStorage para cada una de las lecciones\n\n      // Se almacena la información de las rutas sin procesar\n      self.routeBase = routeBase;\n\n      // Inicialmente, se referencia $routeProvider\n      //\n      // --------------------------------------------------------------------------\n      app.config(function ($routeProvider) {\n        self.routeProvider = $routeProvider;\n      });\n\n      /**\n       * esta función de angular es especial\n       * y nos permite definir gran cantidad de configuraciones de la aplicación.\n       */\n      app.run(function ($rootScope, $location, $route, $window) {\n\n        // Recuperar sesión\n        // --------------------------------------------------------------------------\n        if (localStorage.getItem(lastRoute)) {\n          routeBase.routes.unshift({\n            name: '/recuperar',\n            templateUrl: '../views/common/last_route.html',\n            controller: function ($scope, $location) {\n              $scope.$root.isNextEnabled = true;\n\n              /**\n               * Nos dirige a la última ruta usada por el usuario.\n               */\n              $scope.goToLastVisited = function () {\n                $location.path($scope.$root.routes[localStorage.getItem(lastRoute)].name);\n              };\n\n            },\n            title: 'Recuperar sesión'\n          });\n        }\n\n\n        // Ruta de competencias\n        // --------------------------------------------------------------------------\n        if (routeBase.hasOwnProperty('competences1') || routeBase.hasOwnProperty('competences2')) {\n          routeBase.routes.unshift({\n            name: '/competencias',\n            templateUrl: '../views/common/competences.html',\n            controller: function ($scope) {\n              $scope.competencesSound = routeBase.competencesSound;\n              $scope.competences1 = routeBase.competences1;\n              $scope.competences2 = routeBase.competences2;\n              $scope.competences3 = routeBase.competences3;\n              $scope.$root.isNextEnabled = true;\n            },\n            title: 'Estándares básicos de competencias'\n          });\n        }\n\n\n        // Constructor del ruteador en base a las rutas definidas por el desarrollador\n        // --------------------------------------------------------------------------\n        angular.forEach(routeBase.routes, function (route) {\n          // Si el objeto simplemente tiene la propiedad grupos, entonces se inserta la vista de grupos\n          if (route.hasOwnProperty('groups')) {\n\n            // Se debe actualizar la ruta como con la información misma\n            route.name = '/seleccion-grupos';\n            route.title = 'Selecciona tu grupo';\n\n            // Se añade la ruta al proveedor\n            self.routeProvider.when(route.name, {\n              templateUrl: '../views/common/groups.html',\n              controller: function ($scope) {\n                // Función que define el grupo elegido por el niño, guardándolo en localStorage\n                $scope.setGroup = function (groupId) {\n                  localStorage.setItem('group', groupId);\n                  $rootScope.isNextEnabled = true;\n                  $rootScope.goNext(); // Ir a la siguiente ruta\n                }\n              }\n            });\n\n          } else {\n            // Añadimos normalmente la ruta definida por el desarrollador\n            self.routeProvider.when(route.name, { templateUrl: route.templateUrl, controller: route.controller });\n          }\n        });\n\n\n        // Ruta de evidencias\n        // --------------------------------------------------------------------------\n        if (routeBase.hasOwnProperty('evidences') === true) {\n          self.routeProvider.when('/evidences', {\n            templateUrl: '../views/common/evidences.html',\n            controller: function ($scope) {\n              $scope.description = routeBase.evidences;\n              $scope.evidencesSound = routeBase.evidencesSound;\n              $scope.$root.isNextEnabled = true;\n            }\n          });\n\n          routeBase.routes.push({ name: '/evidences', title: 'Actividad de evidencias académicas' });\n        }\n\n\n        // Ruta de despedida\n        // --------------------------------------------------------------------------\n        self.routeProvider.when('/despedida', {\n          templateUrl: '../views/common/farewell.html',\n          controller: function () { }\n        });\n\n        routeBase.routes.push({ name: '/despedida' });\n\n        // Ruta por defecto\n        // --------------------------------------------------------------------------\n        // Cuando se ponga una ruta diferente a las definidas inicialmente, ir a la primera.\n        self.routeProvider.otherwise({ redirectTo: routeBase.routes[0].name  });\n        $route.reload(); // Recargamos el ruteador, para que así lea las rutas definidas\n\n\n        // ======================================================================================\n        // Router - Funcionalidad global - Toda funcionalidad añadida debe ir AQUÍ\n        // ======================================================================================\n        $rootScope.routes = AppManager.routeBase.routes; // Referencia a las rutas de AppManager para usarlas dentro de angular\n        $rootScope.GROUPS = AppManager.GROUPS; // Referencia a los grupos definidos dentro de la aplicación\n        $rootScope.farewell = routeBase.farewell; // Mensaje de despedida\n        $rootScope.isFarewell = false; // Switch para definir si la próxima ruta debe ser despedida\n        $rootScope.resources = routeBase.resources; // Carpeta de recursos de la lección\n        $rootScope.lessonTitle = ''; // Título de cada lección que se ve arriba\n        $rootScope.lessonsMenu = document.referrer; // vínculo anterior. Usado para ir al menú de lecciones\n        $rootScope.subjectMenu = self.MENUS[ app.name[3] - 1 ]; // Vínculo para volver al menú principal\n\n\n        // $routeChangeStart\n        // --------------------------------------------------------------------------\n        // Esta función corre cada vez que cambia la ruta.\n        $rootScope.$on(\"$routeChangeStart\", function (event, next, current) {\n          $rootScope.pathIndex = self.getPathArray().indexOf($location.path()); // Busca el índice de la ruta dentro de las rutas\n\n          // Guardamos el índice de la actividad más avanzada hasta el momento.\n          if(localStorage.getItem(lastRoute)) {\n            if($rootScope.pathIndex > localStorage.getItem(lastRoute))\n              localStorage.setItem(lastRoute, $rootScope.pathIndex);\n          } else {\n            localStorage.setItem(lastRoute, $rootScope.pathIndex);\n          }\n\n          // Por defecto, esta propiedad esta en falso y permite activar/desactivar el botón de la siguiente ruta\n          $rootScope.isNextEnabled = false;\n\n          // Actualizamos la ruta actual\n          actualRoute = $rootScope.routes[$rootScope.pathIndex];\n\n          // Analizamos la siguiente ruta, con el fin de analizar si el grupo es permitido\n          nextRoute = $rootScope.routes[$rootScope.pathIndex + 1] ? $rootScope.routes[$rootScope.pathIndex + 1] : false;\n\n          // Actualizamos el título de la lección en base a la ruta\n          $rootScope.lessonTitle = actualRoute.hasOwnProperty('title') !== \"undefined\" ? actualRoute.title : \"\";\n\n          // Reiniciamos el valor de farewell\n          $rootScope.isFarewell = false;\n\n          // Grupos de estudiantes\n          // --------------------------------------------------------------------------\n          // Identifica si la siguiente ruta no es permitida para el estudiante, definiendo la despedida.\n          // IMPORTANTE: Esta funcionalidad solo se usó en el grado 1 de primaria incluyente.\n          if (typeof nextRoute.excludedGroups !== \"undefined\") {\n            var actualGroup = localStorage.getItem('group');\n\n            if (nextRoute.excludedGroups.bears) { if (actualGroup == $rootScope.GROUPS.BEARS) $rootScope.isFarewell = true; }\n            if (nextRoute.excludedGroups.tigers) { if (actualGroup == $rootScope.GROUPS.TIGERS) $rootScope.isFarewell = true; }\n            if (nextRoute.excludedGroups.lions) { if (actualGroup == $rootScope.GROUPS.LIONS) $rootScope.isFarewell = true; }\n          }\n        });\n\n\n        /**\n         * Nos dirige a la ruta anterior.\n         */\n        $rootScope.goPrev = function () {\n          // Función que se ejecuta antes de ir a la ultima actividad\n            if (typeof $rootScope.beforeGoLast !== \"undefined\") {\n              if ($rootScope.beforeGoLast()) {\n                return false;\n              }\n            }\n\n          // Solo si el índice es 0, de modo que no nos salgamos del array\n          if ($rootScope.pathIndex !== 0 ) {\n            if ($rootScope.pathIndex === $rootScope.routes.length - 2) {\n              $window.history.back();\n            } else {\n              $location.path($rootScope.routes[$rootScope.pathIndex - 1].name);\n            }\n          }\n        };\n\n\n        /**\n         * Nos dirige a la ruta siguiente.\n         */\n        $rootScope.goNext = function () {\n          // Si la ruta actual es diferente al último elemento y isNextEnabled es verdadero\n          if ($rootScope.pathIndex !== $rootScope.routes.length - 1 && $rootScope.isNextEnabled) {\n\n            // Función que se ejecuta antes de ir a la siguiente actividad\n            if (typeof $rootScope.beforeGoNext !== \"undefined\") {\n              if ($rootScope.beforeGoNext()) {\n                $rootScope.beforeGoNext = undefined; // Limpiamos la función\n                return false;\n              }\n            }\n\n            // Si $rootScope.isFarewell es verdadero, entonces redirigimos a la despedida (última ruta)\n            if ($rootScope.isFarewell) {\n              $location.path($rootScope.routes[$rootScope.routes.length - 2].name);\n            } else {\n              // Sino, rutear normalmente (sencuencia)\n              $location.path($rootScope.routes[$rootScope.pathIndex + 1].name);\n            }\n          }\n        };\n\n\n        /**\n         * Nos dirige a la última ruta usada por el usuario.\n         */\n        $rootScope.goToLastVisited = function () {\n           \n          $location.path($rootScope.routes[localStorage.getItem(lastRoute)].name);\n        };\n\n\n      });\n    }\n  };\n\n  return AppManager;\n\n};\n\n\n\n\n","var factories = angular.module('factories', []);\n\nfactories.factory('shuffleArrayFactory', function () {\n\tthis.run = function(array) {\n\t\tfor (var i = array.length - 1; i > 0; i--) {\n\t\t\tvar j = Math.floor(Math.random() * (i + 1));\n\t\t\tvar temp = array[i];\n\t\t\tarray[i] = array[j];\n\t\t\tarray[j] = temp;\n\t\t}\n\t\treturn array;\n\t};\n\n\treturn this;\n});\n","var activities = angular.module('activities', [\n  // Módulos de angular\n  'ngRoute',\n  'ui.sortable',\n\n  // Otros\n  'directives',\n  'factories',\n\n  // Conceptos\n  'lizLetter1',\n  'lizCompetences',\n  'lizText1',\n  'lizClickImages',\n  'lizImagesAndText',\n  'lizMultiplesImagesAndText',\n  'lizTwoFramesDescription',\n  'lizBoxAnimationFigure',\n  'lizImagesInfo',\n  'lizClickTransition',\n  'lizShowParts',\n  'lizWatch',\n  'lizTable',\n  'lizInputsAndTable',\n  'lizShowConcepts',\n  'lizHoverShowText',\n  'lizShowName',\n  'lizShowConceptsText',\n  'lizChangeStyleSelect',\n  'lizChangeStyleClick',\n  'lizShowConceptsCharacter',\n  'lizShowConceptsCharacters',\n  'lizShowConceptsGroupExamples',\n  'lizShowDescriptionImagesSound', // Maria Giraldo\n  'lizShowTextCharacter',\n  'lizSlideShowCharacter',\n  'lizClickImageMap',\n  'lizZoom',\n  'lizImageMapDescription',\n  'lizImageMapMat',\n  'lizShowdescription',\n  'lizConceptsTable',\n  'lizShowImagesBlockDescription',\n  'lizImagesBlockDescription',\n  'lizImagesBlockMat',\n  'lizShowMultipleHoverPhrase',\n  'lizCorrectWordInSentence',\n\n  // Actividades\n  'lizAnimationBase',\n  'lizChooseItems',\n  'lizPairs',\n  'lizCompleteInputs',\n  'lizSelectOptionsImg',\n  'lizDropCondition',\n  'lizCompleteInputsDescription',\n  'lizOneGroup',\n  'lizOneGroupToogle', //Maria Giraldo\n  'lizOneGroupRule',\n  'lizTwoGroup',\n  'lizRadioQuestions',\n  'lizRadioQuestionsImages',\n  'lizSideNumbers',\n  'lizOneGroupShape',\n  'lizGreaterLowerMat',\n  'lizAbacus',\n  'lizGiraffe',\n  'lizDifferences',\n  'lizLetterSoup',\n  'lizCrossword',\n  'lizCrosswordWithLetter', //Maria Giraldo\n  /*'lizCrosswordWithPuzzle', */\n  'lizSoundGroup',\n  'lizSoundGroups',\n  'lizTransclusion',\n  'lizTransclusions',\n  'lizPairsInputs',\n  'lizClickAndListen',\n  'lizBuyItems',\n  'lizDropOut',\n  'lizSelectWords',\n  'lizImageMapSelect',\n  'lizTangram',\n  'lizTablePath',\n  'lizReplaceWithInputs',\n  'lizReplaceWithInputsMat',\n  'lizTablePathInstruction',\n  'lizCountElements',\n  'lizDropBoxes',\n  'lizDragMarkCanvas',\n  'lizCountElements',\n  'lizCountElements2',\n  'lizCompareSample',\n  'lizGreaterLowerThan',\n  'lizCompleteLetters',\n  'lizChalkboard',\n  'lizDragToText',\n  'lizDragToTexts', \n  'lizDragToImg',\n  'lizDragToMat',\n  'lizImageGroupDrop',\n  'lizCompleteWords',\n  'lizGroupCompleteWords',\n  'lizGroupCompleteLetters',\n  'lizGroupCompleteImages',\n  'lizGroupClassifyTable',\n  'lizGroupSelectWords',\n  'lizClickToSelectPosition',\n  'lizClickToCompleteInput',\n  'lizCompleteInputsPosition',\n  'lizGroupCompleteSound',\n  'lizGroupCompleteText',\n  'lizGroupTableTextFree',\n  'lizGroupTableTextConditions',\n  'lizGroupTableTextConditionsOptions',\n  'lizGroupTableTextOptions',\n  'lizGroupCompleteTextFree',\n  'lizGroupCompleteFreeConditions',\n  'lizGroupCompleteYesNot',\n  'lizGroupCompleteSounds',// No utilizar solo realizando una prueba gregory\n  'lizCompleteWordsWi',\n  'lizCompleteInputsFree',\n  'lizComplementary',\n  'lizNumericSequences',\n  'lizDragDropMultiples',\n  'lizDragDropMultiplesPositions',\n  'lizOperationInput',\n  'lizDropImageSample',\n  'lizThousandNumbers',\n  'lizTenThousandNumbers',\n  'lizThousandPatterns',\n  'lizStackMultiple',\n  'lizSequences',\n  'lizGroupInputs',\n  'lizButtonBubbleDescription',\n  'lizPuzzleWord',\n  'lizCompareSounds',\n  'lizMultipleSelection',\n  'lizDragDropMark',\n  'lizMultipleMark',\n  'lizMultipleImageMapDescription',\n  'lizPuzzle1',\n  'lizPuzzle2',\n  'lizPuzzle3',\n  'lizPuzzle4',\n  'lizPuzzle5',\n  'lizPairsSquares',\n  'lizShowConceptsImages',\n  'lizShowConceptsImg',\n  'lizCompleteTableInputs',\n  'lizCompleteTableImageInputs',\n  'lizCompleteInputsTrueFalse',\n  'lizCompleteTableWithList',\n  'lizBubbleDescription',\n  'lizCompleteTableWithText',\n  'lizChooseCorrectOption',\n  'lizClickAndListen',\n  'lizImageSound',\n  'lizWriteTrueFalse',\n  'lizCompleteInputParts',\n  'lizCompleteTextBoxes',\n  'lizCompleteWordsSelect',\n  'lizSelectCheckbox',\n  'lizDragDropMultiplesDiff',\n  'lizComplementary2',\n  \"lizTextActivity\",\n  'lizPairsWithMessage',\n  'lizSelectQuestions',\n  'lizSelectOptionsPositions',\n  'lizChooseCorrectImage',\n  'lizSelectTableImageMultiple',\n  'lizSelectCorrectImageOption',\n  'lizSelectAllCorrectImageOption',\n  'lizShowHoverWords',\n  'lizJoiningLines',\n  'lizGroupSelectMultiplesWords',\n  'lizCompleteMultitable',\n  'lizSelectOptionsTable',\n  'lizCompleteTableRandomInputs',\n  'lizCheckboxOptions',\n  'lizGroupTableCompleteWords',\n  'lizGroupChoiceWords',\n  'lizDragDropPairText',\n  'lizGroupPuzzleWord',\n  'lizQuestionsImages', //Maria Giraldo\n  'lizChooseCorrectImageSecuence', //Maria Giraldo\n\n  // Animations\n  'lizAnimationVideo'\n\n\n]);\n","var lizAbacus = angular.module('lizAbacus', ['factories']);\n\nlizAbacus.directive('abacus', function  (shuffleArrayFactory) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tbaseDescription: '@',\n\t\t\tbaseAudio: '@',\n\t\t\tinputDescription: '@',\n\t\t\tinputAudio: '@',\n\t\t\tformDescription: '@',\n\t\t\tformAudio: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/abacus.html',\n\t\tlink: function (scope, element, attrs) {\n\t\t\tvar opt = scope.options, // alias de options\n\t\t\t\tcolumnTemp = {}, // Variable temporal para las columnas\n\t\t\t\twrongAnswers = 0, // Número de respuestas incorrectas. Necesarias para activar failure\n\t\t\t\tminRightAnswers = opt.minRightAnswers;\n\n\t\t\t// Modos\n\t\t\tscope.FORM_MODE = 1,\n\t\t\tscope.INPUT_MODE = 2;\n\t\t\tscope.formChances = opt.chances; // Chances for FORM_MODE\n\t\t\tscope.inputChances = opt.chances; // Chances for INPUT_MODE\n\n\t\t\t// Calificaciones\n\t\t\tscope.rightAnswer = false;\n\t\t\tscope.wrongAnswer = false;\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\n\t\t\tscope.description = scope.baseDescription; // Damos a description el valor base\n\t\t\tscope.mode = 0; // Modo seleccionado\n\t\t\tscope.userNumber = ''; // número ingresado por el usuario\n\t\t\tscope.abacusNumber = 0; // número a formar por el ábaco\n\t\t\tscope.audioMode = ''; // Audio a reproducir\n\n\t\t\tscope.$watch('mode', function (mode) {\n\t\t\t\tif(mode === 0) scope.audioMode = 'base';\n\t\t\t\tif(mode === 1) scope.audioMode = 'form';\n\t\t\t\tif(mode === 2) scope.audioMode = 'input';\n\t\t\t});\n\n\t\t\tscope.columns = []; // Array de columnas\n\t\t\tvar columnNames = ['Uni', 'Dec', 'Cen', 'UMil', 'DMil'];\n\n\t\t\t// Constructor de columns\n\t\t\tfor(var i=0; i < opt.numCols; i++){\n\t\t\t\tcolumnTemp = {\n\t\t\t\t\tname: columnNames[i], // Nombre de la columna\n\t\t\t\t\tballText: Math.pow(10, i), // texto en la bola\n\t\t\t\t\trings: [] // Array para los aros en cada columna\n\t\t\t\t};\n\t\t\t\tscope.columns.unshift(columnTemp); \n\t\t\t}\n\n\t\t\t// ===================================================\n\t\t\t// Interfaz\n\t\t\t// ===================================================\n\t\t\t/**\n\t\t\t * Selecciona el modo de trabajo\n\t\t\t */\n\t\t\tscope.selectMode = function (mode) {\n\t\t\t\tscope.mode = mode;\n\t\t\t\twrongAnswers = 0; // Reinicia las preguntas incorrectas\n\n\t\t\t\t// Cambia la descripción según el modo\n\t\t\t\tif(scope.mode === scope.FORM_MODE) scope.description = scope.formDescription;\n\t\t\t\tif(scope.mode === scope.INPUT_MODE) scope.description = scope.inputDescription; \n\n\t\t\t\t// Corre el modo\n\t\t\t\tscope.run();\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Función principal. Verifica la actividad según el modo\n\t\t\t */\n\t\t\tscope.verify = function () {\n\t\t\t\t// FORM_MODE\n\t\t\t\tif(scope.mode === scope.FORM_MODE) {\n\t\t\t\t\t// recuperamos el número desde las columnas del ábaco\n\t\t\t\t\tvar num = '';\n\t\t\t\t\tscope.columns.forEach(function (col) { num += col.rings.length; });\n\n\t\t\t\t\tif(parseInt(num) === scope.abacusNumber){\n\t\t\t\t\t\t// Respuesta Correcta\n\t\t\t\t\t\tscope.rightAnswer = scope.abacusNumber;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Respuesta Incorrecta\n\t\t\t\t\t\tscope.wrongAnswer = scope.abacusNumber;\n\t\t\t\t\t\twrongAnswers++;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.formChances--; // Reducimos las posibilidades\n\t\t\t\t\tif(scope.formChances === 0) scope.mode = 0;\n\t\t\t\t}\n\n\t\t\t\t// INPUT_MODE\n\t\t\t\tif(scope.mode === scope.INPUT_MODE) {\n\t\t\t\t\tif(parseInt(scope.userNumber) === scope.abacusNumber){\n\t\t\t\t\t\t// Respuesta Correcta\n\t\t\t\t\t\tscope.rightAnswer = scope.abacusNumber;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Respuesta Incorrecta\n\t\t\t\t\t\tscope.wrongAnswer = scope.abacusNumber;\n\t\t\t\t\t\twrongAnswers++;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.inputChances--; // Reducimos las posibilidades\n\t\t\t\t\tif(scope.inputChances === 0) scope.mode = 0;\n\t\t\t\t}\n\n\t\t\t\t// genera el próximo intento\n\t\t\t\tscope.run();\n\n\t\t\t\t// Vuelve a intentarlo\n\t\t\t\tif(wrongAnswers === opt.wrongAnswers) scope.failure = true;\n\n\t\t\t\t// Fin de la actividad satisfactorio\n\t\t\t\tif(scope.inputChances === 0 && scope.formChances === 0){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\tscope.success = true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Inicia cada actividad según el modo\n\t\t\t */\n\t\t\tscope.run = function () {\n\t\t\t\tscope.abacusNumber = scope.generateNumber(opt.numCols); // genera el número\n\n\t\t\t\tif(scope.mode === scope.FORM_MODE) {\n\t\t\t\t\t// reinicia los anillos\n\t\t\t\t\tscope.columns.forEach(function (col) { col.rings.length = 0; });\n\t\t\t\t}\n\n\t\t\t\tif(scope.mode === scope.INPUT_MODE) {\n\t\t\t\t\tscope.userNumber = ''; // Reinicia el input\n\n\t\t\t\t\t// Dividimos el número en digitos. Luego, llenamos cada array de anillos\n\t\t\t\t\t// con el número de elementos seleccionado\n\t\t\t\t\tvar temp = scope.abacusNumber.toString();\n\n\t\t\t\t\tfor (var i=0; i < temp.length; i++) {\n\t\t\t\t\t\tscope.columns[i].rings.length = 0; // Vacía el array de anillos\n\t\t\t\t\t\tfor(var j=0; j < temp[i]; j++){\n\t\t\t\t\t\t\tscope.columns[i].rings.push(j);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Añade un anillo a la columna\n\t\t\t */\n\t\t\tscope.addRing = function (col) {\n\t\t\t\tif(col.rings.length < 9) col.rings.push(Math.random() * 10000);\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Remueve un anillo de la columna\n\t\t\t */\n\t\t\tscope.removeRing = function (col) {\n\t\t\t\tif(col.rings.length && scope.mode === scope.FORM_MODE) col.rings.pop();\n\t\t\t};\n\n\t\t\t// ===================================================\n\t\t\t// Útiles\n\t\t\t// ===================================================\n\t\t\t/**\n\t\t\t * Genera números aleatorios, en base a una cantidad determinada de dígitos\n\t\t\t */\n\t\t\tscope.generateNumber = function (digits) {\n\t\t\t\tvar min = Math.pow(10, digits - 1);\n\t\t\t\tvar max = (min * 9);\n\n\t\t\t\treturn Math.floor(Math.random() * max) + min;\n\t\t\t};\n\n\t\t\t// ===================================================\n\t\t\t// Solo Estilos\n\t\t\t// ===================================================\n\t\t\t/**\n\t\t\t * Devuelve los estilos de las columnas\n\t\t\t */\n\t\t\tscope.getColStyles = function () {\n\t\t\t\tvar styles = '';\n\t\t\t\tstyles += \"width: \" + (100 / scope.columns.length) + \"%;\";\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos de los aros o bolas que van en el abaco\n\t\t\t */\n\t\t\tscope.getBallStyles = function (index) {\n\t\t\t\tvar styles = '',\n\t\t\t\t\tballHeight = element.find('.abcol-ball').outerHeight(); // altura de los aros\n\n\t\t\t\tstyles += \"bottom: \" + (ballHeight * index) + \"px;\";\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t}\n\t}; \n});\n","var lizBuyItems = angular.module('lizBuyItems', []);\n\n// Knockout Pairs Factory\nlizBuyItems.factory('buyItemsActivity', function ($rootScope) {\n\n\tvar buyItemsActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tbuyItemsActivity.create = function (options) {\n\t\treturn new buyItemsActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t */\n\tbuyItemsActivity._ViewModel = function (opt) {\n\t\tvar self = this,\n\t\t\trightAnswers = 0, // Contador\n\t\t\ttotal = 0, // Suma total de los productos\n\t\t\tchances = opt.chances; // Posibilidades de equivocarse\n\n\t\tself.products = ko.observableArray(opt.products); // productos\n\t\tself.showTotal = ko.observable(false); // activa el cuadro de texto de total\n\t\tself.total = ko.observable(''); // cuadro de texto con el total\n\t\tself.money = ko.observableArray(opt.money); // productos\n\n\t\t// Monedas\n\t\tself.coins = ko.observableArray([\n\t\t\t{\n\t\t\t\tsrc: 'coin_50',\n\t\t\t\talt: \"moneda de 50 pesos\",\n\t\t\t\ttitle: \"Banco de la Republica [Fotografía] (2013). Obtenido de http://www.banrep.gov.co/es/monedas/2140\",\n\t\t\t\tvalue: 50\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'coin_100',\n\t\t\t\talt: \"moneda de 100 pesos\",\n\t\t\t\ttitle: \"Banco de la Republica [Fotografía] (2013). Obtenido de http://www.banrep.gov.co/es/node/32360\",\n\t\t\t\tvalue: 100\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'coin_200',\n\t\t\t\talt: \"moneda de 200 pesos\",\n\t\t\t\ttitle: \"Banco de la Republica [Fotografía] (2013). Obtenido de http://www.banrep.gov.co/es/node/32361\",\n\t\t\t\tvalue: 200\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'coin_500',\n\t\t\t\talt: \"moneda de 500 pesos\",\n\t\t\t\ttitle: \"Banco de la Republica [Fotografía] (2013). Obtenido de http://www.banrep.gov.co/es/node/32363\",\n\t\t\t\tvalue: 500\n\t\t\t},\n\t\t]);\n\n\t\t// Billetes\n\t\tself.bills = ko.observableArray([\n\t\t\t{\n\t\t\t\tsrc: \"bill_1000\",\n\t\t\t\talt: \"billete de 1000 pesos\",\n\t\t\t\ttitle: \"Banco de la Republica [Fotografía] (2013). Obtenido de: http://www.banrep.gov.co/es/contenidos/page/billete-1000-pesos\",\n\t\t\t\tvalue: 1000\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"bill_2000\",\n\t\t\t\talt: \"billete de 2000 pesos\",\n\t\t\t\ttitle: \"Banco de la Republica [Fotografía] (2013). Obtenido de: http://www.banrep.gov.co/es/contenidos/page/billete-2000-pesos\",\n\t\t\t\tvalue: 2000\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"bill_5000\",\n\t\t\t\talt: \"billete de 5000 pesos\",\n\t\t\t\ttitle: \"Banco de la Republica [Fotografía] (2013). Obtenido de: http://www.banrep.gov.co/es/contenidos/page/billete-5000-pesos\",\n\t\t\t\tvalue: 5000\n\t\t\t}\n\t\t]);\n\n\t\tif (opt.money){\n\n\t\t\tself.bills = self.money;\n\t\t\tself.coins = false\n\t\t}\n\n\t\t// Añadimos a cada uno de los productos un observableArray para ir guardando los productos y \n\t\t// una propiedad computed\n\t\tko.utils.arrayForEach(self.products(), function(product){\n\t\t\ttotal += product.price;\n\n\t\t\tproduct.priceSum = ko.observableArray();\n\t\t\tproduct.priceSum.max = product.price; // Precio máximo\n\n\t\t\tproduct.priceSum.counter = ko.computed({\n\t\t\t\tread: function() {\n\t\t\t\t\tvar total = 0;\n\n\t\t\t\t\tthis.priceSum().forEach(function(item){\n\t\t\t\t\t\ttotal += item.value;\n\t\t\t\t\t});\n\n\t\t\t\t\treturn total;\n\t\t\t\t},\n\t\t\t\towner: product\n\t\t\t});\n\t\t});\n\n\t\tself.audio = ko.observable(opt.audio); // audio\n\t\tself.resources = $rootScope.resources; // Carpeta de recursos desde angular\n\n\t\tself.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\t\tself.failure = ko.observable(false);\n\t\tself.success = ko.observable(false);\n\n\t\t/**\n\t\t * Reproduce el audio de la instrucción.\n\t\t */\n\t\tself.playAudio = function () {\n\t\t\t$('#audio-instruction')[0].play();\n\t\t};\n\n\t\t/**\n\t\t * Obtiene los estilos de los productos.\n\t\t */\n\t\tself.getProductStyles = function () {\n\t\t\tvar styles = '';\n\t\t\tstyles += 'width: ' + (100 / self.products().length) + '%;';\n\n\t\t\treturn styles;\n\t\t};\n\n\n\t\t/**\n\t\t * Verifica los elementos cada vez que se sueltan.\n\t\t */\n\t\tself.verifyAnswer = function (arg) {\n\t\t\tvar parent = arg.targetParent,\n\t\t\t\titem = arg.item;\n\n\t\t\tif(parent.max < parent.counter() + item.value) {\n\t\t\t\t// Respuesta incorrecta\n\t\t\t\targ.cancelDrop = true;\n\t\t\t\tself.wrongAnswer(Math.random());\n\t\t\t\tchances--;\n\t\t\t} \n\n\t\t\t// Si es igual, suma la respuesta correcta\n\t\t\tif(parent.max === parent.counter() + item.value) {\n\t\t\t\tself.rightAnswer(Math.random());\n\t\t\t\trightAnswers++;\n\t\t\t}\n\n\t\t\t// Muestra el cuadro de texto para el total\n\t\t\tif(rightAnswers === self.products().length) {\n\t\t\t\tself.showTotal(true);\n\t\t\t}\n\n\t\t\tif(chances === 0) {\n\t\t\t\t// termina la actividad con fracaso\n\t\t\t\tself.failure(true);\n\t\t\t}\n\t\t};\n\n\n\t\t/**\n\t\t * Verifica el total del cuadro.\n\t\t */\n\t\tself.verifyTotal = function () {\n\t\t\tif(parseInt(self.total()) === total) {\n\t\t\t\t$rootScope.isNextEnabled = true; // activa la siguiente actividad\n\t\t\t\tself.success(true);\n\t\t\t} else {\n\t\t\t\tself.failure(true);\n\t\t\t}\n\t\t};\n\n\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con buyItemsActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\tbuyItemsActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn buyItemsActivity;\n\n});\n\nlizBuyItems.directive('buyItems', function  (buyItemsActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\tinstruction: '@',\n\t\t\taudio: '@',\n\t\t\tcustomClass: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/buy_items.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\t// Añadimos el audio a options\n\t\t\tscope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n\n\t\t\t// Corremos la aplicación\n\t\t\tvar vm = buyItemsActivity.create(scope.options);\n\t\t\tbuyItemsActivity.run(vm);\n\t\t}\n\t}; \n});\n","var lizChalkboard = angular.module('lizChalkboard', []);\n\nlizChalkboard.directive('chalkboard', function  () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\taudio: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/chalkboard.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\trightAnswers = 0, // Preguntas correctas\n\t\t\t\tquestions = opt.questions, // Preguntas por modo\n\t\t\t\tcompletedRanges = 0, // Número completado de rangos\n\t\t\t\tminRightAnswers = opt.minRightAnswers, // Preguntas mínimas para pasar\n\t\t\t\tchances = opt.chances;\n\n\t\t\t// Constantes para las operaciones\n\t\t\tvar oprs = {\n\t\t\t\taddition: {\n\t\t\t\t\tsign: '+'\n\t\t\t\t},\n\t\t\t\tsubtraction: {\n\t\t\t\t\tsign: '-'\n\t\t\t\t},\n\t\t\t\tmultiplication: {\n\t\t\t\t\tsign: 'x'\n\t\t\t\t},\n\t\t\t\tdivision: {\n\t\t\t\t\tsign: '/'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tscope.ranges = opt.ranges; // Rangos u opciones de dificultad\n\t\t\tscope.selectedOpr = oprs[opt.operation]; // Operación seleccionada al inicio\n\t\t\tscope.selectedRange = false; // Rango a seleccionar\n\n\t\t\t// Números y total\n\t\t\tscope.number1 = 0;\n\t\t\tscope.number2 = 0;\n\t\t\tscope.total = 0;\n\n\t\t\t// Calificaciones \n\t\t\tscope.rightAnswer = false;\n\t\t\tscope.wrongAnswer = false;\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\n\t\t\t// Input\n\t\t\tscope._total = '';\n\n\t\t\t// Cada vez que cambia el rango, se genera la nueva operación\n\t\t\tscope.$watch('selectedRange', function (val) {\n\t\t\t\tif(val){\n\t\t\t\t\tscope.generateOperation();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Verifica el campo de texto con el número total\n\t\t\t */\n\t\t\tscope.verify = function () {\n\t\t\t\tif(scope._total === '') return; \n\n\t\t\t\t// Si no es un número, borramos el último caractér\n\t\t\t\tif(!scope._total.match(/^\\d+$/)){\n\t\t\t\t\tscope._total = scope._total.slice(0, -1);\n\t\t\t\t\treturn;\n\t\t\t\t}\t\t\n\n\t\t\t\t// Si se ha llenado el input con los dígitos necesarios\n\t\t\t\tif(scope._total.length === scope.total.toString().length){\n\t\t\t\t\tif(parseInt(scope._total) === scope.total) {\n\t\t\t\t\t\t// Respuesta Correcta\n\t\t\t\t\t\tscope.rightAnswer = Math.random(); // Disparador de respuesta\n\n\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\tchances = opt.chances;\n\t\t\t\t\t\tscope._total = ''; // Reinicia el input\n\t\t\t\t\t\tscope.generateOperation(); // Genera la siguiente operación\n\t\t\t\t\t\tquestions--; // reducimos las preguntas\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Respuesta Incorrecta\n\t\t\t\t\t\tscope.wrongAnswer = Math.random(); // Disparador de respuesta\n\t\t\t\t\t\tscope._total = ''; // Reinicia el input\n\n\t\t\t\t\t\tchances--; // Reduce las posibilidades\n\n\t\t\t\t\t\t// Si se acaban las oportunidades\n\t\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\t\tscope.generateOperation(); // Genera la siguiente operación\n\t\t\t\t\t\t\tchances = opt.chances;\n\t\t\t\t\t\t\tquestions--; // reducimos las preguntas\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Si no hay más preguntas\n\t\t\t\tif(questions === 0){\n\t\t\t\t\tquestions = opt.questions; // Reiniciamos las preguntas\n\t\t\t\t\tcompletedRanges++; // Aumeta el número de rangos completados\n\n\t\t\t\t\tscope.selectedRange.completed = true; // Se añade esta propiedad para deshabilitar\n\t\t\t\t\tscope.selectedRange = false; // Reinicia\n\t\t\t\t}\n\n\t\t\t\t// Fin del juego\n\t\t\t\tif(scope.ranges.length === completedRanges){\n\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Genera el siguiente número\n\t\t\t */\n\t\t\tscope.generateOperation = function () {\n\n\t\t\t\tvar min = scope.selectedRange.range[0];\n\t\t\t\tvar max = scope.selectedRange.range[1];\n\n\n\t\t\t\t// Suma\n\t\t\t\tif(opt.operation === \"addition\"){\n\t\t\t\t\tscope.number1 = Math.floor( Math.random() * (max - min) + min\t);\n\t\t\t\t\tscope.number2 = Math.floor( Math.random() * (max - min) + min\t);\n\n\t\t\t\t\tscope.total = scope.number1 + scope.number2;\n\t\t\t\t}\n\n\t\t\t\t// Resta\n\t\t\t\tif(opt.operation === \"subtraction\"){\n\t\t\t\t\t// Nos aseguramos que el primero número siempre sea mayor al segundo\n\t\t\t\t\tdo{\n\t\t\t\t\t\tscope.number1 = Math.floor( Math.random() * (max - min) + min\t);\n\t\t\t\t\t\tscope.number2 = Math.floor( Math.random() * (max - min) + min\t);\n\t\t\t\t\t} while(scope.number1 < scope.number2);\n\n\t\t\t\t\tscope.total = scope.number1 - scope.number2;\n\t\t\t\t}\n\n\t\t\t\t// Multiplicación\n\t\t\t\tif(opt.operation === \"multiplication\"){\n\t\t\t\t\t// Para la multiplicación, hay que usar 2 rangos distintos\n\t\t\t\t\tvar r = scope.selectedRange.range; // Alias\n\n\t\t\t\t\t// Se toman los primeros dos elementos de range\n\t\t\t\t\tscope.number1 = Math.floor( Math.random() * (r[1] - r[0]) + r[0]\t);\n\n\t\t\t\t\t// Se toman los últimos dos elementos de range\n\t\t\t\t\tscope.number2 = Math.floor( Math.random() * (r[2] - r[3]) + r[3]\t);\n\n\t\t\t\t\tscope.total = scope.number1 * scope.number2;\n\t\t\t\t}\n\n\t\t\t\t// Division\n\t\t\t\tif(opt.operation === \"division\"){\n\t\t\t\t\t// Nos aseguramos que el segundo número no sea 0, y que se pueda dividir\n\t\t\t\t\t// sin decimales\n\t\t\t\t\tdo{\n\t\t\t\t\t\tscope.number1 = Math.floor( Math.random() * (max - min) + min\t);\n\t\t\t\t\t\tscope.number2 = Math.floor( Math.random() * (max - min) + min\t);\n\t\t\t\t\t} while(scope.number1 < scope.number2 || scope.number1 % scope.number2 !== 0 || scope.number1 / scope.number2 === 1);\n\n\t\t\t\t\tscope.total = scope.number1 / scope.number2;\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tscope.disableInput = function (range) {\n\t\t\t\treturn scope.selectedRange || range.completed;\n\t\t\t};\n\n\n\t\t}\n\t}; \n});\n","var lizCheckboxOptions = angular.module('lizCheckboxOptions', ['factories']);\n\nlizCheckboxOptions.directive('checkboxOptions', function  (shuffleArrayFactory) {\n  return {\n    restrict: 'E',\n    scope: {\n      options: '=',\n      audio: '@',\n      description: '@'\n    },\n    templateUrl: '../views/activities/checkbox_options.html',\n    link: function (scope, element, attrs) {\n      var opt = scope.options,\n        rightAnswers = 0;\n\n      // variables básicas de la acividad de angular\n      scope.rightAnswer = false;\n      scope.wrongAnswer = false;\n      scope.success = false;\n      scope.failure = false;\n      scope.hasModalImage = (opt.hasModalImage) ? true : false;\n      scope.hasNoQuestions = (opt.hasNoQuestions) ? true : false;\n      scope.chancesPerItem = (opt.chancesPerItem) ? opt.chancesPerItem : 2;\n      scope.minRightAnwers = opt.minRightAnwers;\n      scope.globalNumAnswers = 0;\n      scope.randomItems = (!scope.options.randomItems) ? false:true;\n\n      if (scope.hasModalImage) {\n        scope.modalSrc = opt.modalSrc;\n        scope.modalAlt = opt.modalAlt;\n        scope.modalBtnText = opt.modalBtnText;\n      }\n\n      // Imagen principal\n      scope.src = opt.src;\n      scope.alt = opt.alt;\n\n      // Preguntas\n      scope.questions = opt.questions;\n        angular.forEach(scope.questions, function (question, key) {\n          question.numAnswers = opt.numAnswers;\n          question.chances = scope.chancesPerItem - 1;\n          scope.globalNumAnswers += opt.numAnswers;\n        });\n\n      // añadimos el número de posibilidades\n      scope.questions.forEach(function (q) {\n        q.chances = scope.chancesPerItem;\n        if (scope.randomItems) {\n          shuffleArrayFactory.run(q.answers);\n        }\n      });\n\n      /**\n       * Verifica la respuesta.\n       */\n       var counter = 0;\n      scope.verify = function (item, answer) {\n        if(answer.answer) {\n          scope.rightAnswer = Math.random();\n          answer.wrong = false;\n          answer.right = true;\n          rightAnswers += 1;\n          counter++;\n          answer.completed = true;\n          item.chances--;\n          if (0 === item.chances) {\n            item.completed = true;\n          }\n        } else {\n          answer.wrong = true;\n          answer.selectedAnswer = false;\n          scope.wrongAnswer = Math.random(); \n          item.chances -= 1;\n          counter++;\n          if(item.chances === 0) {item.completed = true;}\n        }\n\n        // Contamos los elementos terminados\n        //var completedItems = scope.questions.filter(function (q) {\n        //  return q.completed;\n        //}).length;\n\n        if(counter === scope.globalNumAnswers) {\n          // solo pasa la actividad si todas las respuestas son correctas\n          if(rightAnswers === scope.globalNumAnswers || rightAnswers >= scope.minRightAnwers) {\n            scope.$root.isNextEnabled = true;\n            scope.success = true;\n          } else {\n            scope.failure = true;\n          }\n        }\n      };\n    }\n  };\n});\n","/**\r\n * Pertime escoger entre varias imagenes una correcta haciendo click.\r\n */\r\n var lizChooseCorrectImage = angular.module('lizChooseCorrectImage', []);\r\n\r\n lizChooseCorrectImage.directive('chooseCorrectImage', function(){\r\n \t// Runs during compile\r\n \treturn {\r\n \t\t// name: '',\r\n \t\t// priority: 1,\r\n \t\t// terminal: true,\r\n \t\tscope: {\r\n \t\t\toptions: \"=\",\r\n \t\t\ttitle: \"@\",\r\n      \t\tdescription: '@',\r\n      \t\tinstruction: '@',\r\n      \t\taudio: '@'\r\n \t\t}, // {} = isolate, true = child, false/undefined = no change\r\n \t\t// controller: function($$scope, $element, $attrs, $transclude) {},\r\n \t\t// require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements\r\n \t\trestrict: 'E', // E = Element, A = Attribute, C = Class, M = Comment\r\n \t\t// template: '',\r\n \t\ttemplateUrl: '../views/activities/choose_correct_image.html',\r\n \t\t// replace: true,\r\n \t\t// transclude: true,\r\n \t\t// compile: function(tElement, tAttrs, function transclude(function($scope, cloneLinkingFn){ return function linking($scope, elm, attrs){}})),\r\n \t\tlink: function($scope, $sce) {\r\n\r\n \t\t\t$scope.items = $scope.options.items;\r\n \t\t\t// $scope.customClass = $scope.options.customClass;\r\n \t\t\t$scope.complete = false; // Cuando termina la actividad\r\n      \t\t// $scope.itemsPerRow = $scope.options.itemsPerRow;\r\n      \t\t$scope.chances = $scope.options.chances-1;\r\n      \t\t$scope.counter = 0;\r\n\r\n      \t\t$scope.$watch('complete', function (complete) {\r\n\t\t        if (complete) {\r\n\t\t          \tif ($scope.counter === 0) {\r\n\t\t          \t\t// éxito\r\n\t\t\t\t\t\t$scope.success = true;\r\n\r\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\r\n\t\t\t\t\t\t$scope.$root.isNextEnabled = true;\r\n\t\t          \t} else {\r\n\t\t          \t\t// fracaso\r\n\t\t\t\t\t\t$scope.failure = true;\r\n\t\t          \t}\r\n\t\t        }\r\n\t      \t});\r\n\r\n\t      \t/**\r\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\r\n\t\t\t */\r\n\t\t\t$scope.getStyles = function () {\r\n\t\t\t\tvar styles = \"\";\r\n\r\n\t\t\t\tif($scope.itemsPerRow){\r\n\t\t\t\t\tstyles += \"width: \" + (100 / $scope.itemsPerRow) + \"%;\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyles += \"width: \" + (100 / $scope.items.length) + \"%;\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn styles;\r\n\t\t\t};\r\n\r\n\r\n\t      \t$scope.verify = function (item) {\r\n\t      \t\tconsole.log(item);\r\n\t      \t\tif (true === item.correct) {\r\n\t      \t\t\t$(\"#right-answer\").fadeIn(300).delay(400).fadeOut(300);\r\n\t      \t\t\t$scope.complete = true;\r\n\t      \t\t} else {\r\n\t      \t\t\tif($scope.chances === 0){\r\n                    \t$scope.complete = true;\r\n                    } else {\r\n                    \tchances--;\r\n                    }\r\n                    $scope.counter++;\r\n                    $(\"#wrong-answer\").fadeIn(300).delay(400).fadeOut(300);\r\n\t      \t\t}\r\n\t      \t};\r\n \t\t}\r\n \t};\r\n });","/**\r\n * Pertime escoger entre varias imagenes una correcta haciendo click.\r\n */\r\n var lizChooseCorrectImageSecuence = angular.module('lizChooseCorrectImageSecuence', []);\r\n\r\nlizChooseCorrectImageSecuence.directive('chooseCorrectImageSecuence', function(){\r\n \t// Runs during compile\r\n \treturn {\r\n \t\t// name: '',\r\n \t\t// priority: 1,\r\n \t\t// terminal: true,\r\n \t\tscope: {\r\n \t\t\toptions: \"=\",\r\n \t\t\ttitle: \"@\",\r\n      \t\tdescription: '@',\r\n      \t\tinstruction: '@',\r\n      \t\taudio: '@'\r\n \t\t}, // {} = isolate, true = child, false/undefined = no change\r\n \t\t// controller: function($$scope, $element, $attrs, $transclude) {},\r\n \t\t// require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements\r\n \t\trestrict: 'E', // E = Element, A = Attribute, C = Class, M = Comment\r\n \t\t// template: '',\r\n \t\ttemplateUrl: '../views/activities/choose_correct_image_secuence.html',\r\n \t\t// replace: true,\r\n \t\t// transclude: true,\r\n \t\t// compile: function(tElement, tAttrs, function transclude(function($scope, cloneLinkingFn){ return function linking($scope, elm, attrs){}})),\r\n \t\tlink: function($scope, $sce) {\r\n\r\n \t\t\t$scope.items = $scope.options.items;\r\n \t\t\t// $scope.customClass = $scope.options.customClass;\r\n \t\t\t$scope.complete = false; // Cuando termina la actividad\r\n      \t\t// $scope.itemsPerRow = $scope.options.itemsPerRow;\r\n      \t\t$scope.chances = $scope.options.chances-1;\r\n      \t\t$scope.counter = 0;\r\n            $scope.indexI = 0;\r\n\r\n      \t\t$scope.$watch('complete', function (complete) {\r\n\t\t        if (complete) {\r\n\t\t          \tif ($scope.counter === 0) {\r\n\t\t          \t\t// éxito\r\n\t\t\t\t\t\t$scope.success = true;\r\n\r\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\r\n\t\t\t\t\t\t$scope.$root.isNextEnabled = true;\r\n\t\t          \t} else {\r\n\t\t          \t\t// fracaso\r\n\t\t\t\t\t\t$scope.failure = true;\r\n\t\t          \t}\r\n\t\t        }\r\n\t      \t});\r\n\r\n\t      \t/**\r\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\r\n\t\t\t */\r\n\t\t\t$scope.getStyles = function () {\r\n\t\t\t\tvar styles = \"\";\r\n\r\n\t\t\t\t/*if($scope.itemsPerRow){\r\n\t\t\t\t\tstyles += \"width: \" + (100 / $scope.itemsPerRow) + \"%;\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//styles += \"width: \" + (100 / $scope.items.length) + \"%;\";\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\treturn styles;\r\n\t\t\t};\r\n\r\n\r\n\t      \t$scope.verify = function (item) {\r\n\r\n                $scope.chances--;\r\n\r\n                // Si la imagen seleccionada es la que sigue en el orden\r\n                if (item.img === $scope.options.answers[$scope.indexI].img){\r\n                    $scope.options.answers[$scope.indexI].imgDefault = $scope.options.answers[$scope.indexI].img;\r\n                    $scope.options.answers[$scope.indexI].completed = true;\r\n                    $(\"#right-answer\").fadeIn(300).delay(400).fadeOut(300);\r\n                    $scope.indexI++;\r\n                }\r\n                else{\r\n                    $(\"#wrong-answer\").fadeIn(300).delay(400).fadeOut(300);\r\n                    $scope.counter++;\r\n                }\r\n\r\n                console.log(\"verirfy\");\r\n\r\n\r\n                // Si ha cumplido con todas, se termina\r\n                var completedItems =  $scope.options.answers.filter(function (q) {\r\n                    return q.completed;\r\n                }).length;\r\n\r\n                if (completedItems == $scope.options.answers.length){\r\n                    $scope.complete = true;\r\n                    scope.$root.isNextEnabled = true;\r\n                }\r\n\r\n                if($scope.chances === 0){\r\n                    $scope.complete = true;\r\n                }\r\n\r\n\r\n                //$scope.options.answers[$scope.indexI].imgDefault = $scope.options.answers[$scope.indexI].img;\r\n\r\n\r\n\t      \t\t/*if (true === item.correct) {\r\n\t      \t\t\t$(\"#right-answer\").fadeIn(300).delay(400).fadeOut(300);\r\n\t      \t\t\t$scope.complete = true;\r\n\t      \t\t} else {\r\n\t      \t\t\tif($scope.chances === 0){\r\n                    \t$scope.complete = true;\r\n                    } else {\r\n                    \tchances--;\r\n                    }\r\n                    $scope.counter++;\r\n                    $(\"#wrong-answer\").fadeIn(300).delay(400).fadeOut(300);\r\n\t      \t\t}*/\r\n\t      \t};\r\n \t\t}\r\n \t};\r\n });","/**\r\n * La actividad permite escoger una opción entre tres\r\n * y verificar si es correcta de acuerdo a una condición.\r\n */\r\nvar lizChooseCorrectOption = angular.module('lizChooseCorrectOption', []);\r\n\r\nlizChooseCorrectOption.directive('chooseCorrectOption', function () {\r\n    'use strict';\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: '../views/activities/choose_correct_option.html',\r\n        scope: {\r\n            options: '=',\r\n            instruction: '@',\r\n            title: '@',\r\n            description: '@',\r\n            audio: '@'\r\n        },\r\n        link: function (scope, iElement, iAttrs) {\r\n            scope.rightAnswers = 0;\r\n            scope.complete = false; // Cuando termina la actividad\r\n            scope.block = false;\r\n            scope.success = false;\r\n            scope.failure = false;\r\n\r\n            // watch if the activity is finished\r\n            scope.$watch('complete', function (complete) {\r\n                if (complete) {\r\n                    if (scope.rightAnswers >= scope.options.minRightAnswers) {\r\n                        // éxito\r\n                        scope.success = true;\r\n\r\n                        // Activamos la siguiente actividad o ruta\r\n                        scope.$root.isNextEnabled = true;\r\n                    } else {\r\n                        // fracaso\r\n                        scope.failure = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            scope.makeId = function (id) {\r\n                var newId = id.replace(\" \", \"_\");\r\n                var text = newId + \"_\";\r\n                var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n                for (var i = 0; i < 5; i++) {\r\n                    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\t\t\t\t}\r\n\r\n                return text;\r\n            };\r\n\r\n            scope.items = scope.options.data;\r\n            \r\n            angular.forEach(scope.options.aOptions, function (value, key) {\r\n            \tvalue.optId = scope.makeId(value.name);\r\n            });\r\n\r\n            scope.aOptions = scope.options.aOptions;\r\n\r\n            // Si la descripción o el título están, entonces la instrucción va al fondo\r\n            scope.isBottom = scope.title || scope.description;\r\n\r\n            var counter = 0, chances = scope.options.chancesPerItem - 1;\r\n\r\n            scope.verify = function (option, item, id) {\r\n                if ((option === null) || (option === '')) { return; }\r\n\r\n                // Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\r\n                if (option.toLowerCase() === item.answer.toLowerCase()) {\r\n                    scope.rightAnswers++;\r\n                    item.wrong = false;\r\n                    item.right = true;\r\n                    item.block = true; // marcamos el item como completo, para desactivar el input\r\n                    counter++;\r\n                } else {\r\n\r\n                    item.wrong ? chances = scope.options.chancesPerItem - 2 : chances = scope.options.chancesPerItem - 1;\r\n\r\n                    item.wrong = true;\r\n\r\n\r\n                    if (chances === 0) {\r\n                        item.block = true;\r\n                        counter++;\r\n                        chances = scope.options.chancesPerItem - 1;\r\n                    } else {\r\n                        chances--;\r\n                        $(\"#\" + id).button('reset');\r\n                    }\r\n                }\r\n\r\n                if (counter === scope.options.data.length) {\r\n\r\n                    scope.complete = true;\r\n\r\n                }\r\n\r\n                scope.$apply();\r\n            };\r\n\r\n            \r\n        }\r\n    };\r\n});","/**\n * La actividad permite seleccionar varios elementos dando click.\n */\nvar lizChooseItems = angular.module('lizChooseItems', []);\n\nlizChooseItems.directive('chooseItems', function(){\n\treturn  {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/activities/choose_items.html',\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\toptions: \"=\",\n\t\t\tdescription: \"@\",\n\t\t\taudio: \"@\"\n\t\t},\n\t\tlink: function(scope, element, attrs){\n\n\t\t\t// Variables de éxito - fracaso\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\n\t\t\tscope.chances = scope.options.chances ? scope.options.chances : scope.options.items.lenght; // Posibilidades de realizar la actividad\n\t\t\tscope.rightAnswers = 0; // contador de respuestas buenas\n\t\t\tscope.minRightAnswers = scope.options.minRightAnswers; // número mínimo de respuestas\n\t\t\tscope.itemsfloat = scope.options.itemsfloat ? scope.options.itemsfloat : false;\n\t\t\tscope.activateAfter = scope.options.activateAfter ? scope.options.activateAfter : false;\n\n\t\t\tconsole.log(scope.itemsfloat);\n\n\t\t\t// Disparadores para las preguntas buenas y malas\n\t\t\tscope.rightAnswer = false;\n\t\t\tscope.wrongAnswer = false;\n\n\t\t\tscope.verify = function (item) {\n\t\t\t\t// para impedir que se repitan letras\n\t\t\t\tif(item._completed) return;\n\n\t\t\t\titem._completed = true;\n\n\t\t\t\tif (item.answer) {\n\t\t\t\t\t// respuesta buena\n\t\t\t\t\tscope.rightAnswer = item;\n\t\t\t\t\tscope.rightAnswers++;\n\t\t\t\t} else {\n\t\t\t\t\t// Respuesta incorrecta\n\t\t\t\t\tscope.wrongAnswer = item;\n\t\t\t\t}\n\n\t\t\t\tscope.chances--;\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(scope.chances === 0) {\n\t\t\t\t\tif (scope.rightAnswers >= scope.minRightAnswers) {\n\t\t\t\t\t\tscope.success = true;\n\n\t\t\t\t\t\t// Activamos la siguiente\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// si activateAfter esta definido \n\t\t\t\tif(scope.activateAfter){\n\t\t\t\t\tif(scope.rightAnswers === scope.activateAfter){\n\t\t\t\t\t\t// Activamos la siguiente\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\t\n\t\t}\n\t};\n});\n\n","var lizClickAndListen = angular.module('lizClickAndListen', []);\r\n\r\nlizClickAndListen.directive('clickAndListen', function  () {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\tscope: {\r\n\t\t\toptions: '=',\r\n\t\t\taudio: '@',\r\n\t\t\tdescription: '@'\r\n\t\t},\r\n\t\ttemplateUrl: '../views/activities/click_and_listen.html',\r\n\t\tlink: function postLink(scope, element, attrs) {\r\n\t\t\tvar opt = scope.options;\r\n\r\n\t\t\t// Elementos de la actividad\r\n\t\t\tscope.headings = opt.headings;\r\n\t\t\tscope.items = opt.items;\r\n\r\n\t\t\t// calificación\r\n\t\t\tscope.success = false;\r\n\t\t\tscope.failure = false;\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Añade la propiedad de completado y verifica el fin de la actividad\r\n\t\t\t */\r\n\t\t\tscope.verify = function (item) {\r\n\t\t\t\t// si esta completo, entonces sale automáticamente\r\n\t\t\t\tif(item.completed) return;\r\n\r\n\t\t\t\titem.completed = true;\r\n\r\n\t\t\t\tvar completed = scope.items.filter(function(item){ return item.completed; }).length;\r\n\r\n\t\t\t\t// fin de la actividad\r\n\t\t\t\tif(completed === scope.items.length) {\r\n\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t\tscope.success = true;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\r\n\t\t}\r\n\t}; \r\n});\r\n","var lizClickImageMap = angular.module('lizClickImageMap', []);\n\nlizClickImageMap.directive('clickImageMap', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: \"=\",\n\t\t\ttitle: '@',\n\t\t\tinstruction: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/click_image_map.html',\n\t\tlink: function (scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\tcountCompleted = 0;\n\n\t\t\t// Recuperamos cada valor de las variables\n\t\t\tscope.canvas = scope.$root.resources + '/' + opt.canvas + '.png'; // imagen a mapear\n\t\t\tscope.canvasAlt = opt.canvasAlt; // Texto alternativo de la imagen\n\t\t\tscope.targets = opt.targets; // mapas donde se da click para el sonido\n\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\n\t\t\tscope.isBottom = scope.title || scope.description;\n\n\t\t\t/**\n\t\t\t * Revisa si el elemento ya fue seleccionado\n\t\t\t */\n\t\t\tscope.markCompleted = function (target) {\n\t\t\t\t// Marcamos el elemento seleccionado con un valor booleano\n\t\t\t\tif(! target.hasOwnProperty('_isCompleted')){\n\t\t\t\t\ttarget._isCompleted = true;\n\t\t\t\t}\n\n\t\t\t\t// Contamos los completos\n\t\t\t\tcountCompleted = scope.targets.filter(function(target){\n\t\t\t\t\treturn target._isCompleted;\n\t\t\t\t}).length;\n\n\t\t\t\t// revisamos si ya se completaron todos los objetivos\n\t\t\t\tif(countCompleted === scope.targets.length){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos de cada target\n\t\t\t */\n\t\t\tscope.getTargetStyles = function (target) {\n\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tstyles += \"width: \" + target.w + \"%;\";\n\t\t\t\tstyles += \"height: \" + target.h + \"%;\";\n\t\t\t\tstyles += \"top: \" + target.t + \"%;\";\n\t\t\t\tstyles += \"left: \" + target.l + \"%;\";\n\n\t\t\t\treturn styles;\n\t\t\t\t\n\t\t\t};\n\n\n\t\t}\n\t}; \n});\n","var lizClickToCompleteInput = angular.module('lizClickToCompleteInput', []);\n\nlizClickToCompleteInput.directive('clickToCompleteInput', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/click_to_complete_input.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@'\n\t\t\t\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.canvas = scope.options.canvas; // La imagen principal\n\t\t\tscope.titlecanvas = scope.options.titlecanvas; // title de La imagen principal\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\tcompletedItems = 0;\n\n\t\t\t/**\n\t\t\t * Definimos nuestra función beforeGoNext para que muestre el cuadro de felicitaciones\n\t\t\t */\n\t\t\tscope.$root.beforeGoNext = function () {\n\t\t\t\tscope.success = true;\n\t\t\t\treturn true; \n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getTargetsStyles = function (item) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += 'width: ' + item.w + 'px;';\n\t\t\t\tstyles += 'height: ' + item.h + 'px;';\n\t\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\t\tstyles += 'left: ' + item.l + '%;';\n\n\t\t\t\t/*// estilos personalizados\n\t\t\t\tif(opt.hasOwnProperty('customStyles')) styles += opt.customStyles;*/\n\n\t\t\t\treturn styles;\n\t\t\t};\n\t\t\t/**\n\t\t\t * Para obtener los estilos las calificaciones de los targets \n\t\t\t */\n\t\t\tscope.getTargetsStyles2 = function (item) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += 'width: ' + item.w + 'px;';\n\t\t\t\tstyles += 'height: ' + item.h + 'px;';\n\t\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\t\tstyles += 'left: ' + item.l + '%;';\n\t\t\t\tstyles += 'background-size: ' + item.w + 'px;' + item.w + 'px;';\n\t\t\t\t/*// estilos personalizados\n\t\t\t\tif(opt.hasOwnProperty('customStyles')) styles += opt.customStyles;*/\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t\t\n\n\t\t\t/**\n\t\t\t * Marca los elementos y verifica el final\n\t\t\t */\n\t\t\tscope.verify = function (item) {\n\t\t\t\t\t\t\t\t\n\t\t\t\tif(/*item.completed ||*/ item.input === \"\") return;\n\n\t\t\t\tif( ((item.answer[0] === 'free') && (item.input.length >= item.length)) || ( item.answer.indexOf(item.input) > -1 )  ){\n\t\t\t\t\titem.completed = true;\n\t\t\t\t\titem.wrong = false;\n\t\t\t\t\titem.right = true;\n\t\t\t\t\t\n\t\t\t\t}else{\n\n\t\t\t\t\titem.right = false;\n\t\t\t\t\titem.wrong = true;\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\tvar countCompleted = scope.items.filter(function(item){\n\t\t\t\t\treturn item.completed;\n\t\t\t\t}).length;\n\t\t\t\t\n\t\t\t\tif(countCompleted === chances) {\n\t\t\t\t\tscope.$root.isNextEnabled = true; // Activa la flecha de siguiente\n\t\t\t\t}\n\t\t\t};\n\n\t\t}\n\n    }; \n});\n\nlizClickToCompleteInput.directive('popclick', function($timeout, $compile){\n\treturn {\n\t    restrict: 'A',\n\t\t\tscope: {\n\t\t\t\titem: '=popoverItem',\n\t\t\t\tpopoverText: '@',\n\t\t\t\tpopoverPlacement: '@'\n\t\t\t},\n\t    link : function (scope, element, attrs) {\n\t\t\t\tvar disable = false,\n\t\t\t\t\tisHidden = true,\n\t\t\t\t\tdata = ''; // template del input\n\n\t\t\t\tdata = '<input type=\"text\" class=\"popover-input\" ng-model=\"item.input\" ng-blur=\"verifyInput()\" placeholder=\"Escribe aqui\">';\n\t\t\t\tscope.item.input = ''; // Añade el modelo para el input\n\n\t\t\t\telement.bind('click', function (e) {\n\t\t\t\t\tif(disable) return; // Solo se anima la primera vez\n\n\t\t\t\t\t$(element).popover({\n\t\t\t\t\t\tanimation: true,\n\t\t\t\t\t\tplacement: scope.popoverPlacement,\n\t\t\t\t\t\ttrigger: 'manual',\n\t\t\t\t\t\tcontent: $compile(data)(scope),\n\t\t\t\t\t\thtml : true\n\t\t\t\t\t\t/*content: scope.popoverText*/\n\t\t\t\t\t\t//container: 'body'\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif(isHidden){\n\t\t\t\t\t\t$(element).popover('show');\n\t\t\t\t\t\tisHidden = false;\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$(element).popover('destroy');\n\t\t\t\t\t\tisHidden = true;\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t\tscope.verifyInput = function () {\n\n\t\t\t\t\tscope.$parent.verify(scope.item);\n\t\t\t\t};\n\n    \t}\n\t};\n});\n\n\n","var lizClickToSelectPosition = angular.module('lizClickToSelectPosition', []);\n\nlizClickToSelectPosition.directive('clickToSelectPosition', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/click_to_select_position.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@'\n\t\t\t\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.canvas = scope.options.canvas; // La imagen principal\n\t\t\tscope.titlecanvas = scope.options.titlecanvas; // title de La imagen principal\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.answer2 = scope.items.answer2;\n\t\t\tscope.selectedItem = false; // elemento seleccionado\n\t\t\tscope.selectedItem2 = false; // elemento seleccionado\n\t\t\tscope.selectedItemAux = false; // elemento seleccionado\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\tcompletedItems = 0;\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getTargetsStyles = function (item) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += 'width: ' + item.w + 'px;';\n\t\t\t\tstyles += 'height: ' + item.h + 'px;';\n\t\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\t\tstyles += 'left: ' + item.l + '%;';\n\n\t\t\t\t/*// estilos personalizados\n\t\t\t\tif(opt.hasOwnProperty('customStyles')) styles += opt.customStyles;*/\n\n\t\t\t\treturn styles;\n\t\t\t};\n\t\t\t/**\n\t\t\t * Para obtener los estilos las calificaciones de los targets \n\t\t\t */\n\t\t\tscope.getTargetsStyles2 = function (item) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += 'width: ' + item.w + 'px;';\n\t\t\t\tstyles += 'height: ' + item.h + 'px;';\n\t\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\t\tstyles += 'left: ' + item.l + '%;';\n\t\t\t\tstyles += 'background-size: ' + item.w + 'px;' + item.w + 'px;';\n\t\t\t\t/*// estilos personalizados\n\t\t\t\tif(opt.hasOwnProperty('customStyles')) styles += opt.customStyles;*/\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t\t\n\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\t\t\tif(item.hasOwnProperty('isCompleted') || scope.selectedItem != false ) return;\n\t\t\t\titem.isCompleted = [];\n\t\t\t\tscope.selectedItemAux.select = [];\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\n\t\t\t\tscope.selectedItem.select = [];\n\t\t\t\t\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Selecciona el objetivo indicado\n\t\t\t */\n\t\t\tscope.selectItem2 = function (item) {\n\t\t\tif(scope.selectedItem === false ) return;\n\n\t\t\t\tscope.selectedItemAux = item; // seleccionamos el objeto\n\n\t\t\t\tif (scope.selectedItem.text === scope.selectedItemAux.text){\n\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\tscope.selectedItem = false; // borramos el elemento seleccionado\t\t\n\t\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\t\tcompletedItems++;\n\t\t\t\t\t\trightAnswers++\n\t\t\t\t\t\tscope.selectedItem2.target.wrong = false;\n\t\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t}else{\n\t\t\t\t\t\n\t\t\t\t\titem.target = [];\n\t\t\t\t\tscope.selectedItem.wrong = true;\n\t\t\t\t\tscope.selectedItemAux.target.wrong = true;\n\n\t\t\t\t\tif(scope.selectedItem.select === true){\n\t\t\t\t\t\t\n\t\t\t\t\t\t/*if(!scope.selectedItem.hasOwnProperty('isCompleted')){*/\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcompletedItems++;\n\t\t\t\t\t\t\tscope.selectedItem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\t\t\tscope.selectedItem = false; // elemento seleccionado\n\t\t\t\t\t\t\tscope.selectedItemAux.target.wrong = false;\n\t\t\t\t\t\t\tscope.selectedItem2.target.wrong = false;\n\n\t\t\t\t\t\t/*}*/\n\t\t\t\t\t}else{\n\t\t\t\t\t\tscope.selectedItem.word = [];\n\t\t\t\t\t\tscope.selectedItem.word.wrong = true;\n\t\t\t\t\t\tscope.selectedItem.select = true;\n\t\t\t\t\t\tscope.selectedItem2 = item;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === chances){\n\n\t\t\t\t\tif (rightAnswers >= minRightAnswers){\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t};\t\n\n\t\t\tscope.random = function(){\n    \t\t\treturn 0.5 - Math.random();\n\t\t\t};\t\n\n\t\t}\n\n\t\t\n\n\n    }; \n});\n\n\n\n","var lizCompareSample = angular.module('lizCompareSample', ['factories']);\n\nlizCompareSample.directive('compareSample', function  (shuffleArrayFactory) {\n    return {\n        restrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@'\n\t\t},\n        templateUrl: '../views/activities/compare_sample.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\tscope.groups = shuffleArrayFactory.run(scope.options.groups); // Filas\n\t\t\tscope.chances = scope.options.hasOwnProperty('chances') ? scope.options.chances : scope.groups.length;\n\t\t\tscope.minRightAnswers = scope.options.hasOwnProperty('minRightAnswers') ? scope.options.minRightAnswers : scope.groups.length;\n\t\t\tscope.rightAnswers = 0; // respuestas correctas\n\n\t\t\t// variables que activan la pantalla de felicitaciones/vuelve a intentarlo\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\n\t\t\tangular.forEach(scope.groups, function (group) {\n\t\t\t\tgroup.items = shuffleArrayFactory.run(group.items);\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Obtiene los estilos de los items\n\t\t\t */\n\t\t\tscope.getItemStyles = function (items) {\n\t\t\t\treturn \"width: \" + (100 / items.length) + \"%;\";\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Verifica si la respuesta es correcta/incorrecta\n\t\t\t */\n\t\t\tscope.verify = function (item, group) {\n\t\t\t\t\n\t\t\t\t// Verificamos que el grupo no haya sido completado aún\n\t\t\t\tif(group.hasOwnProperty('_completed')) return;\n\n\t\t\t\tgroup._completed = true; //se define el grupo como terminado\n\n\t\t\t\tif(item.hasOwnProperty('answer')){\n\t\t\t\t\t// Respuesta Correcta\n\t\t\t\t\titem.isRight = true;\n\t\t\t\t\tscope.rightAnswers++;\n\t\t\t\t} else {\n\t\t\t\t\t// Respuesta Incorrecta\n\t\t\t\t\titem.isWrong = true;\n\t\t\t\t}\n\n\t\t\t\tscope.chances--;\n\n\t\t\t\t// Término de la actividad\n\t\t\t\tif (scope.chances === 0) {\n\t\t\t\t\tif(scope.rightAnswers >= scope.minRightAnswers){\n\t\t\t\t\t\t// éxito\n\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el botón de siguiente\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Fracaso\n\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}; \n});\n","var lizCompareSounds = angular.module('lizCompareSounds', ['factories']);\n\nlizCompareSounds.directive('compareSounds', function  (shuffleArrayFactory) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\taudio: '@',\n\t\t\thideImages: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/compare_sounds.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\tvar items = scope.options.items;\n\n\t\t\t// La diversión empieza aquí!!!\n\t\t\tscope.items = shuffleArrayFactory.run(items.slice(0));\n\t\t\tscope.audios = items.slice(0).filter(function(item){ return !item.hasOwnProperty('noSound'); });\n\t\t\tscope.selectedItem = false; // Elemento que se selecciona al dar click\n\t\t\tscope.chances = typeof scope.options.chances !== \"undefined\" ? scope.options.chances : scope.options.items.length;\n\t\t\tscope.rightAnswers = 0; // Contador de preguntas correctas\n\n\t\t\t// Recorremos los elementos para definir propiedades por defecto\n\t\t\tscope.items.forEach(function(item){\n\t\t\t\tif(! item.hasOwnProperty('type')) item.type = 'png';\n\t\t\t\tif(! item.hasOwnProperty('audio')) item.audio = item.resource;\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Selecciona el item que se le pasa como parámetro. En este caso, se trata del \n\t\t\t * sonido seleccionado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\t\t\t\tif(item.isRight || item.isWrong) return;\n\t\t\t\tscope.selectedItem = item;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Compara el item seleccionado con el usuario con selectedItem\n\t\t\t */\n\t\t\tscope.compareItems = function (item) {\n\t\t\t\t// Si no se ha selecionado ningún item, se no se hace nada\n\t\t\t\tif (!scope.selectedItem) return;\n\n\t\t\t\tif(scope.selectedItem === item){\n\t\t\t\t\t// Respuesta correcta: Son iguales\n\t\t\t\t\tscope.selectedItem.isRight = true;\n\t\t\t\t\tscope.rightAnswers++;\n\n\t\t\t\t} else {\n\t\t\t\t\t// Respuesta incorrecta\n\t\t\t\t\tscope.selectedItem.isWrong = true;\n\t\t\t\t}\n\n\t\t\t\t// Reducimos las posibilidades y devolvemos a selectedItem a su estado inicial\n\t\t\t\tscope.chances--;\n\t\t\t\tscope.selectedItem = false;\n\n\t\t\tconsole.log(scope.chances);\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(scope.chances === 0){\n\t\t\t\t\tif(scope.rightAnswers >= scope.options.minRightAnswers){\n\t\t\t\t\t\tscope.success = true;\t\n\t\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos la siguiente actividad\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t}\n\t}; \n});\n","var lizComplementary = angular.module('lizComplementary', []);\n\nlizComplementary.directive('complementary', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/complementary.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\t\n\t\t\tlink = scope.options.link\n\t\t\tlink2 = scope.options.link2\n\t\t\tlink3 = scope.options.link3\n\t\t\tlink4 = scope.options.link4\n\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\t\n\t\t\tvar visitedlink = false;\n\t\t\tvar visitedlink2 = scope.options.link2 ? false : true;\n\t\t\tvar visitedlink3 = scope.options.link3 ? false : true;\n\t\t\tvar visitedlink4 = scope.options.link4 ? false : true;\n\n\t\t\tscope.verify = function (item) {\n\t\t\t\t\n\t\t\t\tif(item === link) {visitedlink = true}\n\t\t\t\tif(item === link2){visitedlink2 = true};\n\t\t\t\tif(item === link3){visitedlink3 = true};\n\t\t\t\tif(item === link4){visitedlink4 = true};\n\n\t\t\t\tif ((visitedlink === true) && (visitedlink2 === true) && (visitedlink3 === true) && (visitedlink4 === true)){\n\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\tscope.success = true;\n\t\t\t\t}\n\n\t\t\t}; // verify()\n\n\n\t\t\t\n\n\t\t}\n\n\n    }; \n});\n\n","var lizComplementary2 = angular.module('lizComplementary2', []);\n\nlizComplementary2.directive('complementary2', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/complementary2.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tmainimg: \"@\",\n\t\t\tmainalt: \"@\"\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\t\n\t\t\tscope.caseLinks = scope.options.caseLinks;\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\n\t\t\tangular.forEach(scope.caseLinks, function (value, key) {\n\t\t\t\tvalue.visited = false;\n\t\t\t});\n\t\t\t\n\t\t\tvar counter = 0;\n\t\t\tscope.verify = function (item) {\n\t\t\t\t\n\t\t\t\titem.visited = true;\n\n\t\t\t\tcounter++;\n\n\t\t\t\tif (scope.caseLinks.length === counter) {\n\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\tscope.success = true;\n\t\t\t\t}\n\n\t\t\t}; // verify()\n\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos de cada elemento\n\t\t\t */\n\t\t\tscope.getStyles = function (item) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += \"top: \" + item.t + \"%;\";\n\t\t\t\tstyles += \"left: \" + item.l + \"%;\";\n\t\t\t\tstyles += \"width: \" + item.w + \"px;\";\n\t\t\t\tstyles += \"height: \" + item.h + \"px;\";\n\t\t\t\t\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t}\n\n\n    }; \n});\n\n","/**\r\n * La actividad permite completar inputs dentro de un \"canvas\".\r\n */\r\nvar lizCompleteInputParts = angular.module('lizCompleteInputParts', []);\r\n\r\nlizCompleteInputParts.directive('completeInputParts', function () {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n        templateUrl: '../views/activities/complete_input_parts.html',\r\n        scope: {\r\n            options: '=',\r\n            instruction: '@',\r\n            title: '@',\r\n            description: '@',\r\n            audio: '@'\r\n        },\r\n\t\tlink: function (scope, iElement, iAttrs) {\r\n\t\t\tscope.canvasBlocks = scope.options.canvasBlocks;\r\n\r\n\t\t\tscope.itemsLength = 0;\r\n\t\t\tscope.rightAnswers = 0;\r\n\t\t\tscope.complete = false; // Cuando termina la actividad\r\n\t\t\tscope.block = false;\r\n\t\t\tscope.success = false;\r\n\t\t\tscope.failure = false;\r\n\r\n\t\t\tangular.forEach(scope.canvasBlocks, function (value, key) {\r\n\t\t\t\tscope.itemsLength += value.items.length;\r\n\t\t\t})\r\n\r\n\t\t\t// watch if the activity is finished\r\n\t\t\tscope.$watch('complete', function(complete) {\r\n\t\t\t\tif (complete) {\r\n\t\t\t\t\tif (scope.rightAnswers >= scope.itemsLength ) {\r\n\t\t\t\t\t\t// éxito\r\n\t\t\t\t\t\tscope.success = true;\r\n\r\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\r\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// fracaso\r\n\t\t\t\t\t\tscope.failure = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t});\r\n\r\n\t\t\tvar counter = 0;\r\n\t\t\tvar chances = scope.options.chancesPerItem-1;\r\n\r\n\t\t\t// si la opcion default esta completa el item\r\n\t\t    scope.canvasBlocks.forEach(function (q) {\r\n\t\t      q.items.forEach(function (i) {\r\n\r\n\t\t\t       \tif(i.default){\r\n\t\t\t       \t\tscope.rightAnswers++;\r\n\t\t\t       \t\ti.right = true;\r\n\t\t\t       \t\ti.block = true;\r\n\t\t\t       \t\ti.input = i.answer;\r\n\t\t\t       \t\tcounter++;\t\t\t       \t\t\r\n\t\t\t       \t}\r\n\t\t\t      \r\n\t\t       });\r\n\t\t    });\r\n\r\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\r\n\t\t\tscope.isBottom = scope.title || scope.description;\r\n\r\n\t\t\tscope.verify = function (item) {\r\n\t\t\t\tif (null == item.input || \"\" === item.input) { return; }\r\n\r\n\t\t\t\tif (item.input.toLowerCase() === item.answer.toLowerCase()) {\r\n\t\t\t\t\tscope.rightAnswers++;\r\n\t\t\t\t\titem.wrong = false;\r\n\t\t\t\t\titem.right = true;\r\n\t\t\t\t\titem.block = true; // marcamos el item como completo, para desactivar el input\r\n\t\t\t\t\tcounter++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\titem.wrong ? chances=scope.options.chancesPerItem-2: chances=scope.options.chancesPerItem-1;\r\n\r\n                \titem.wrong = true;\r\n                \t\r\n\r\n                    \tif(chances === 0){\r\n                    \titem.block = true;\r\n                    \titem.input = item.answer;\r\n                    \tcounter++;\r\n                    \tchances=scope.options.chancesPerItem-1;\r\n                    \t}else{chances--;item.input=\"\";}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(counter === scope.itemsLength){\r\n                    \r\n                    scope.complete = true;\r\n                \t\r\n                }\r\n\r\n                scope.$apply();\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Devuelve los estilos de cada elemento\r\n\t\t\t */\r\n\t\t\tscope.getStyles = function (item) {\r\n\t\t\t\tvar styles = '';\r\n\r\n\t\t\t\tstyles += \"top: \" + item.t + \"%;\";\r\n\t\t\t\tstyles += \"left: \" + item.l + \"%;\";\r\n\r\n\t\t\t\titem.w ? styles += \"width: \" + item.w + \"%;\" : '' ;\t\r\n\r\n\t\t\t\treturn styles;\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n});","/**\n * La actividad permite completar palabras en inputs\n */\nvar lizCompleteInputs = angular.module('lizCompleteInputs', []);\n\nlizCompleteInputs.directive('completeInputs', function(){\n\treturn  {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/activities/complete_inputs.html',\n\t\tscope: {\n\t\t\tinputs: \"=\",\n\t\t\tdescription: '@'\n\t\t},\n\t\tlink: function(scope, element, attrs){\n\t\t\t// Inputs procesados\n\t\t\tscope.words = [];\n\n\t\t\t// Procesamos cada elemento del array entrante\n\t\t\tangular.forEach(scope.inputs, function (input) {\n\t\t\t\tscope.words.push({ word: input, right: false, wrong: false });\n\t\t\t});\n\n\t\t\tscope.rightAnswers = 0; // número de respuestas correctas\n\t\t\tscope.complete = false; // Cuando termina la actividad\n\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\n\t\t\t// watch if the activity is finished\n\t\t\tscope.$watch('complete', function(complete) {\n\t\t\t\tif (complete) {\n\t\t\t\t\tif (scope.rightAnswers >= 3) {\n\t\t\t\t\t\t// éxito\n\t\t\t\t\t\tscope.success = true;\n\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// fracaso\n\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t};\n});\n\nlizCompleteInputs.directive('compare', function () {\n    return {\n        scope: {\n            compare: '=compare',\n            counter: '=counter',\n            complete: '=complete'\n        },\n        link: function (scope, element, attrs) {\n            element.bind('keyup', function () {\n                if (element.val().length == scope.compare.word.length) {\n                    // Good answer -> increase good answers\n                    if (element.val() === scope.compare.word) {\n                        scope.compare.right = true;\n                    } else {\n                        scope.compare.wrong = true;\n                    }\n\n                    scope.counter++;\n\n                    element.attr('disabled', 'disabled');\n                    var inputs = element.closest('form').find(':input:visible');\n\n                    if(scope.counter === inputs.length){\n                    \t\n                        scope.complete = true;\n                    \t\n                    }\n\n                    inputs.eq(inputs.index(element) + 1).focus();\n\n                    scope.$apply();\n                }\n            });\n        }\n    }\n});\n\n","/**\n * La actividad permite completar palabras en inputs\n */\nvar lizCompleteInputsDescription = angular.module('lizCompleteInputsDescription', []);\n\nlizCompleteInputsDescription.directive('completeInputsDescription', function ($sce) {\n  return {\n    restrict: 'E',\n    templateUrl: '../views/activities/complete_inputs_description.html',\n    scope: {\n      options: \"=\",\n      title: '@',\n      correctAnswer: '@',\n      description: '@',\n      instruction: '@',\n      titleBlock: '@',\n      audio: '@',\n      tableTextTitle: '@',\n      inputTextTitle: '@'\n    },\n    link: function (scope, element, attrs) {\n      var opt = scope.options;\n\n      // Inputs procesados\n      scope.words = [];\n\n      // Procesamos cada elemento del array entrante\n      angular.forEach(scope.inputs, function (input) {\n        scope.words.push({ word: input, right: false, wrong: false });\n      });\n\n      scope.feedback = opt.hasOwnProperty('feedback') ? opt.feedback : false;\n\n      scope.extension = opt.extension ? opt.extension : '.png';\n      scope.complete = false; // Cuando termina la actividad\n      scope.hideDescription = scope.options.hideDescription;\n      scope.descriptionTop = scope.options.descriptionTop;\n      scope.itemsPerRow = scope.options.itemsPerRow;\n      scope.block = false;\n\n      scope.rightAnswers = 0; // número de respuestas correctas\n      scope.success = false;\n      scope.failure = false;\n\n      // watch if the activity is finished\n      scope.$watch('complete', function (complete) {\n        if (complete) {\n\n          if (scope.rightAnswers >= minRightAnswers) {\n            // éxito\n            scope.success = true;\n\n            // Activamos la siguiente actividad o ruta\n            scope.$root.isNextEnabled = true;\n          } else {\n            // fracaso\n            scope.failure = true;\n          }\n        }\n      });\n\n      // Permite el uso de html\n      scope.sanitize = function (item) {\n        return $sce.trustAsHtml(item);\n      };\n\n      // ordena el array de forma aleatoria usando el algoritmo de Fisher-Yates\n      self.shuffleArray = function (array) {\n        for (var i = array.length - 1; i > 0; i--) {\n          var j = Math.floor(Math.random() * (i + 1));\n          var temp = array[i];\n          array[i] = array[j];\n          array[j] = temp;\n        }\n        return array;\n      };\n\n      scope.items = scope.options.data,\n        minRightAnswers = scope.options.minRightAnswers,\n        randomItems = scope.options.randomItems ? true : false,\n        scope.description_data = scope.options.data.slice(0);   // Clonamos el array para empezar a trabajar\n\n      if (randomItems) {\n        data = self.shuffleArray(scope.items);\n      }\n\n      // Si la descripción o el título están, entonces la instrucción va al fondo\n      scope.isBottom = scope.title || scope.description;\n\n\n      /**\n       * Para obtener los estilos de los elementos, específicamente el ancho\n       */\n      scope.getStyles = function () {\n        var styles = \"\";\n\n        if (scope.itemsPerRow) {\n          styles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n        } else {\n          styles += \"width: \" + (100 / (scope.options.data.length + 2)) + \"%;\";\n          styles += \"margin-left: \" + (100 / (scope.options.data.length * 4)) + \"%;\";\n        }\n\n        return styles;\n      };\n\n      /**\n       * Función de Jeison\n       */\n      var counter = 0,\n        chances = scope.options.chancesPerItem - 1;\n\n      /**\n       * Verifica los inputs y da fin a la actividad.\n       * @param input\n       */\n      scope.verify = function (input) {\n        // aquí se hace lo que quiera con el input\n        // Good answer -> increase good answers\n        if ( ((input.correctAnswer.toLowerCase() === input.input.toLowerCase()) && (input.input != \"\" )) || input.correctAnswer.toLowerCase() === 'free') {\n          input.wrong = false;\n          input.right = true;\n          input.block = true;\n          scope.rightAnswers++;\n\n          counter++;\n        }\n\n        if ((input.correctAnswer.toLowerCase() != input.input.toLowerCase()) && ((input.input != null ) && (input.input != \"\" ) && (input.correctAnswer.toLowerCase() != \"free\" ))) {\n          input.wrong ? chances = scope.options.chancesPerItem - 2 : chances = scope.options.chancesPerItem - 1;\n          input.wrong = true;\n\n          if (chances === 0) {\n            input.block = true;\n            counter++;\n            chances = scope.options.chancesPerItem - 1;\n          } else {\n            chances--;\n            input.input = \"\";\n          }\n        }\n\n        if (counter === scope.options.data.length) {\n          // Solamente activa la flecha, permitiendo al estudiante ver la realimentación\n          scope.$root.isNextEnabled = true;\n\n          if(scope.feedback) {\n            scope.showFeedback = true;\n          } else {\n            scope.complete = true;\n          }\n        }\n      };\n\n      // If feedback is activated, show the feedback\n      if(scope.feedback) {\n        scope.$root.beforeGoNext = function () {\n          if (scope.rightAnswers >= minRightAnswers) {\n            scope.success = true;\n            return true;\n          } else {\n            scope.failure = true;\n            return false;\n          }\n        };\n      }\n\n    }\n  };\n});\n\n","var lizCompleteInputsFree = angular.module('lizCompleteInputsFree', []);\n\nlizCompleteInputsFree.directive('completeInputsFree', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/complete_inputs_free.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.pattern = scope.items[0].pattern;\n\t\t\tscope.words = [];\n\t\t\tminRightAnswers = scope.options.minRightAnswers //MAria Giraldo -> Se utiliza para validar la cantidad de letras en la caja de texto\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.items[0].pattern.length * 1, // el doble, ya que es izquierda y derecha\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-right: \" + (10 / scope.itemsPerRow) + \"%!important;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\t\n\n\t\t\t/**\n\t\t\t * Definimos nuestra función beforeGoNext para que muestre el cuadro de felicitaciones\n\t\t\t */\n\t\t\tscope.$root.beforeGoNext = function () {\n\t\t\t\tscope.success = true;\n\t\t\t\treturn true; \n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\t var chancesPerItem = 1\n\n\t\t\tscope.verify = function (item) {\n\n\t\t\t\tif(item.input === '') return; \n\n\t\t\t\t\n\t\t\t\t//if (item.input.length >= 15){ //COmentado por Maria Giraldo, para poner numero de letras dinámico\n\n                /*\n                * Maria Giraldo\n                * Validación temporal para no afectar el numero estatico de 15 letras\n                * if (minRightAnswers !== 30) minRightAnswers = 15; (*)\n                * -- La validación dinámica del numero de letras, aplica al 100% si se elimina esta validación (*).\n                * Por el momento funciona para 30 caracteres\n                * */\n                if (minRightAnswers !== 30) minRightAnswers = 15;\n\n                if (item.input.length >= minRightAnswers){\n\n                    scope.$root.isNextEnabled = true;\n\n                }\n\n\t\t\t\t\t/*// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} */\n\t\t\t\t\t\n\t\t\t}; // verify()\n\n\n\n\t\t}\n\n\n    }; \n});\n\n","var lizCompleteInputsPosition = angular.module('lizCompleteInputsPosition', []);\n\nlizCompleteInputsPosition.directive('completeInputsPosition', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/complete_inputs_position.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@'\n\t\t\t\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.canvas = scope.options.canvas; // La imagen principal\n\t\t\tscope.canvasalt = scope.options.canvasalt;\n\t\t\tscope.imgStyle = scope.options.imgStyle; // estilos de La imagen principal\n\t\t\tscope.examples = scope.options.examples;\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.answer2 = scope.items.answer2;\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\tchancesPerItem = scope.options.chancesPerItem ? scope.options.chancesPerItem : 1\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\tcompletedItems = 0;\n\n\t\t\t// Recorremos todos los items\n\t\t\t      scope.items.forEach(function (item) {\n\t\t\t        \n\t\t      \t\tif (item.default){\n\n\t\t      \t\t\titem.complete = [];\n\n\t\t      \t\t\titem.complete.push({\n\t\t\t\t\t\t  complete: true,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t});\n\n\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\tchances--;\n\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\titem.input = item.pattern ;\n\n\t\t      \t\t}\n\n\t\t\t      });\n\t\t\t/**\n\n\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getTargetsStyles = function (item) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += 'width: ' + item.w + 'px;';\n\t\t\t\tstyles += 'height: ' + item.h + 'px;';\n\t\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\t\tstyles += 'left: ' + item.l + '%;';\n\n\t\t\t\t/*// estilos personalizados\n\t\t\t\tif(opt.hasOwnProperty('customStyles')) styles += opt.customStyles;*/\n\n\t\t\t\treturn styles;\n\t\t\t};\n\t\t\t/**\n\t\t\t * Para obtener los estilos las calificaciones de los targets \n\t\t\t */\n\t\t\tscope.getTargetsStyles2 = function (item) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += 'width: ' + item.w + 'px;';\n\t\t\t\tstyles += 'height: ' + item.h + 'px;';\n\t\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\t\tstyles += 'left: ' + item.l + '%;';\n\t\t\t\tstyles += 'background-size: ' + item.w + 'px;' + item.w + 'px;';\n\t\t\t\t/*// estilos personalizados\n\t\t\t\tif(opt.hasOwnProperty('customStyles')) styles += opt.customStyles;*/\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t\t\n\n\t\t\t\n\n\t\t\tscope.verify = function (item) {\n\n\t\t\t\tif((item.input === '' ) || ! item.hasOwnProperty('input')) return;\n\n\t\t\t\t\titem.complete = [];\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t\tif( item.pattern.indexOf(item.input) > -1  || item.pattern[0] === \"free\" ){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\titem.complete.push({\n\t\t\t\t\t\t\t\t\t  complete: true,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t} \n\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\t\t\n\n\n\t\t\t\t// Si se han completado todos\n\t\t\t\t\t\n\t\t\t\tif (item.complete.length >= 1) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\t\tchances--;\n\t\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\t\t\n\t\t\t\t\t} \n\t\t\t\t\telse {\n\t\t\t\t\t\t\titem.wrong ? chancesPerItem = scope.options.chancesPerItem ? scope.options.chancesPerItem - 1 : chancesPerItem = 1 : chancesPerItem = scope.options.chancesPerItem ? scope.options.chancesPerItem : chancesPerItem = 1 ;\n\t\t\t\t\t\t\tchancesPerItem--\t\n\t\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\t\tif(chancesPerItem === 0){\n\t\t                    \titem.completed = true;\n\t\t                    \titem.input = item.pattern;\n\t\t                    \tchances--;\n\t\t                    \tchancesPerItem = scope.options.chancesPerItem ? scope.options.chancesPerItem : 1\n\t\t                    \t}\n\t\t                    \telse{item.input=\"\";}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \t\t\t\t\t\n\t\t\t}; // verify()\n\n\t\t\t\t\n\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\n\t\t}\n\n\t\t\n\n\n    }; \n});\n\n\n\n","/**\r\n * La actividad permite completar inputs con falso \"F\" o verdadero \"V\".\r\n */\r\nvar lizCompleteInputsTrueFalse = angular.module('lizCompleteInputsTrueFalse', []);\r\n\r\nlizCompleteInputsTrueFalse.directive('completeInputsTrueFalse', function () {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\ttemplateUrl: '../views/activities/complete_inputs_true_false.html',\r\n \t\tscope: {\r\n \t\t\toptions: '=',\r\n \t\t\tinstruction: '@',\r\n \t\t\ttitle: '@',\r\n \t\t\tdescription: '@',\r\n \t\t\taudio: '@'\r\n \t\t},\r\n\t\tlink: function (scope, iElement, iAttrs) {\r\n\t\t\t// Inputs procesados\r\n\t\t\tscope.words = [];\r\n\r\n\t\t\t// Procesamos cada elemento del array entrante\r\n\t\t\tangular.forEach(scope.inputs, function (input) {\r\n\t\t\t\tscope.words.push({ word: input, right: false, wrong: false });\r\n\t\t\t});\r\n\r\n\t\t\tscope.rightAnswers = 0;\r\n\t\t\tscope.complete = false; // Cuando termina la actividad\r\n\t\t\tscope.block = false;\r\n\t\t\tscope.success = false;\r\n\t\t\tscope.failure = false;\r\n\r\n\t\t\t// watch if the activity is finished\r\n\t\t\tscope.$watch('complete', function(complete) {\r\n\t\t\t\tif (complete) {\r\n\t\t\t\t\tif (scope.rightAnswers >= scope.options.data.length || scope.rightAnswers >= scope.options.minRightAnswers) {\r\n\t\t\t\t\t\t// éxito\r\n\t\t\t\t\t\tscope.success = true;\r\n\r\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\r\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// fracaso\r\n\t\t\t\t\t\tscope.failure = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t});\r\n\r\n\t\t\tscope.items = scope.options.data;\r\n\t\t\tif (scope.options.aOptions) {\r\n\t\t\t\tscope.aOptions = scope.options.aOptions;\r\n\t\t\t}\r\n\r\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\r\n\t\t\tscope.isBottom = scope.title || scope.description;\r\n\r\n\t\t\tvar counter = 0\r\n\t\t\tvar chances = scope.options.chancesPerItem-1\r\n\r\n\t\t\tscope.verify = function (item) {\r\n\t\t\t\tif ((item.input == null ) || (item.input == \"\" )) return;\r\n\r\n\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\r\n\t\t\t\tif(item.input.toLowerCase() === item.answer.toLowerCase()){\r\n\t\t\t\t\tscope.rightAnswers++;\r\n\t\t\t\t\titem.wrong = false;\r\n\t\t\t\t\titem.right = true;\r\n\t\t\t\t\titem.block = true; // marcamos el item como completo, para desactivar el input\r\n\t\t\t\t\tcounter++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\titem.wrong ? chances=scope.options.chancesPerItem-2: chances=scope.options.chancesPerItem-1;\r\n\r\n                \titem.wrong = true;\r\n                \t\r\n\r\n                    \tif(chances === 0){\r\n                    \titem.block = true;\r\n                    \titem.input = item.answer;\r\n                    \tcounter++;\r\n                    \tchances=scope.options.chancesPerItem-1;\r\n                    \t}else{chances--;item.input=\"\";}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(counter === scope.options.data.length){\r\n                    \t\r\n                    scope.complete = true;\r\n                \t\r\n                }\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n});","var lizCompleteLetters = angular.module('lizCompleteLetters', []);\n\nlizCompleteLetters.factory('completeLettersActivity', function ($rootScope) {\n\n  var completeLettersActivity = {};\n\n  /**\n   * Crea el ViewModel. Aquí es donde ocurre la magia. SUPER IMPORTANTE.\n   */\n  completeLettersActivity.create = function (options) {\n    var processedData = [];\n\n    angular.forEach(options.items, function (item) {\n      processedData.push(new Item(item.resource, item.name, item.pattern));\n    });\n\n    options.items = processedData;\n\n    return new completeLettersActivity._ViewModel(options);\n  };\n\n\n  // Clase necesaria para convertir cada letra en un input\n  var Letter = function (letter, isInput) {\n    this.letter = letter;\n    this.input = isInput;\n    this.value = ko.observable(''); // used for the user input\n    this.lastValue = ko.observable();\n    this.chances =  1\n  };\n\n  // Cada elemento de items que se ingrese debe ser convertido para generar los objetos Letter\n  var Item = function (resource, name, positions) {\n    var self = this;\n\n    self.resource = resource;\n    self.name = [];\n\n    // Constructor\n    // Recorre el array comparando las posiciones y configurando los inputs\n    $.each(name.split(''), function (key, value) {\n      if ($.inArray(key, positions) !== -1) {\n        self.name.push(new Letter(value, true));\n      } else {\n        self.name.push(new Letter(value, false));\n      }\n    });\n    console.log(self.name)\n  };\n\n  /**\n   * Genera el ViewModel de las parejas con sus funcionalidades\n   *\n   * Recibe un objeto con las siguientes propiedades\n   *\n   * @param {object}    options            Opciones a utilizar.\n   * @param {object}    options.items        Elementos con las letras a completar\n   * @param {object}    options.chances        Oportunidades para realizar la actividad\n   * @param {object}    options.minRightAnswers    Número mínimo de respuestas buenas\n   * @param {object}    options.resources      directorio de recursos\n   */\n  completeLettersActivity._ViewModel = function (options) {\n    // Inicialización de variables\n    var self = this;\n\n    self.items = ko.observableArray(options.items);\n    self.chances = ko.observable(options.chances ? options.chances : options.items.length);\n    self.rightAnswers = ko.observable(0);\n    self.minRightAnswers = options.minRightAnswers;\n    self.resources = options.resources;\n    self.itemsPerRow = typeof options.itemsPerRow !== \"undefined\" ? options.itemsPerRow : 4;\n    self.chancesPerItem = typeof options.chancesPerItem !== \"undefined\" ? options.chancesPerItem : 1;\n\n    // audio\n    self.audio = ko.observable(options.audio);\n\n    // Si está buena, va al siguiente input\n    self.verifyAnswer = function (item, e) {\n      var input = e.currentTarget;\n\n      if (item.value() !== '') {\n        if (item.value() == item.letter) {\n          // Es correcto\n          self.rightAnswers(self.rightAnswers() + 1);\n          self.chances(self.chances() - 1);\n          input.disabled = 'disabled'; // desabilita el input\n\n          // Va al siguiente input. Necesario que todo esté dentro de un elemento FORM\n          var inputs = $(input).closest('form').find(':input:visible');\n          inputs.eq(inputs.index(input) + 1).focus(); // Esta es la función de salto al siguiente input\n        } else {\n          // Incorrecto\n          item.chances++\n          if(item.chances > self.chancesPerItem){\n            item.lastValue(item.value());\n            self.chances(self.chances() - 1);\n            console.log(item);\n            item.value = item.letter;\n            input.disabled = 'disabled'; // desabilita el input\n            // Va al siguiente input. Necesario que todo esté dentro de un elemento FORM\n            var inputs = $(input).closest('form').find(':input:visible');\n            inputs.eq(inputs.index(input) + 1).focus(); // Esta es la función de salto al siguiente input\n          }\n        }\n\n        \n      }\n    };\n\n    /**\n     * Reproduce el audio de la instrucción.\n     */\n    self.playAudio = function () {\n      $('#audio-instruction')[0].play();\n    };\n\n    // Limpia el input después de teclear\n    self.clearInput = function (item, e) {\n      if (item.value() !== '' && item.value() != item.letter) {\n        item.value(String.fromCharCode(e.charCode)); // set the pressed key\n      }\n\n      return true;\n    };\n\n    // Define el éxito de la actividad\n    self.success = ko.computed(function () {\n      // Activamos la siguiente\n      if (self.chances() === 0 && self.rightAnswers() >= self.minRightAnswers) {\n        $rootScope.isNextEnabled = true;\n      }\n\n      return self.chances() === 0 && self.rightAnswers() >= self.minRightAnswers;\n    });\n\n    // Define el fracaso de la actividad\n    self.failure = ko.computed(function () {\n      return self.chances() === 0 && self.rightAnswers() < self.minRightAnswers;\n    });\n  };\n\n\n  /**\n   * Inicializa la instancia del ViewModel creado con pairsActivity.create\n   *\n   * @param {object} instance Intancia del VM de knockout\n   */\n  completeLettersActivity.run = function (instance) {\n    ko.cleanNode($('#main-container')[0]);\n    ko.applyBindings(instance, $('#main-container')[0]);\n  };\n\n  return completeLettersActivity;\n});\n\n\nlizCompleteLetters.directive('completeLetters', function (completeLettersActivity) {\n  return {\n    restrict: 'E',\n    templateUrl: '../views/activities/complete_letters.html',\n    scope: {\n      options: '=',\n      description: '@',\n      letter: '@',\n      audio: '@'\n    },\n    link: function postLink(scope, element, attrs) {\n      // Corremos la aplicación\n      // Añadimos el audio a options\n      scope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n      scope.options.resources = scope.$root.resources;\n      completeLettersActivity.run(completeLettersActivity.create(scope.options));\n    }\n  };\n});\n\n","var lizCompleteMultitable = angular.module('lizCompleteMultitable', []);\n\nlizCompleteMultitable.directive('completeMultitable', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/complete_multitable.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\ttitleBlock: '@',\n\t\t\tblockText: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.groups = scope.options.groups;\n\t\t\tscope.items = [];\n\t\t\tscope.list = scope.options.list;\n\t\t\tscope.words = [];\n\t\t\tscope.wordIn = false;\n\t\t\tscope.count = false;\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.itemsStyle = scope.options.itemsStyle;\n\t\t\tscope.groupsStyle = scope.options.groupsStyle;\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\n\n\t\t\t// Recorremos todos los grupos y sus items\n\t\t\t      scope.groups.forEach(function (group) {\n\t\t\t        group.items.forEach(function (item) {\n\t\t\t          // agregamos cada item a el array de items\n\t\t\t          scope.items.push({\n\t\t\t\t\t\t\titem: item,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t  });\n\n\t\t\t        });\n\t\t\t      });\n\n\n\t\t\tvar items = scope.items;\n\n\t\t   // Constructor de palabras\n\t\t   for(var j=0; j < items.length; j++){\n\n\t\t\t   \tvar string = items[j].item.text;\n\t\t\t\tvar words = string.split(\" \");\n\n\t\t\t\tscope.items[j].item.words = [];\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfor(var i=0; i < words.length; i++){\n\n\t\t\t\t\t\t\tscope.items[j].item.words.push({\n\t\t\t\t\t\t\t\t  isInput: true,\n\t\t\t\t\t\t\t      input: '',\n\t\t\t\t\t\t\t      word: (words[i]),\n\t\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\tconsole.log(scope.items[j].item.words);\n\t\t\t}\n\n\n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\t\n\t\t\tscope.verify = function (item,word,pattern,items) {\n\t\t\t\tvar chancesPerItem = 1\n\t\t\t\tif(word.wrong === true){chancesPerItem = 0}\n\t\t\t\t\n\t\t\t\t\t// Recorremos el grupo y sus items\n\t\t\t        pattern.forEach(function (wordx) {\n\t\t\t        \t\n\t\t\t        \tif(item === wordx.input && item != ''){\n\t\t\t        \t\tscope.count ++\n\t\t          \t\t}\t\t\t\t      \n\t\t\t\t\t  \n\t\t\t        });\t\t\t     \n\n\t\t\t      \tif(scope.count >= 2){\n\t          \t\t\tscope.wordIn = true\n\t          \t\t\tscope.count = 0\n\t          \t\t}else{scope.wordIn = false;scope.count = 0}\n\n\t\t\t\tif(item === '' || scope.wordIn === true) return; \n\t\t\t\t\n\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\n\t\t\t\tfor(var i=0; i < pattern.length; i++){\n\t\t\t\t\tif( item.indexOf(pattern[i].word) > -1 ){\n\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\tchances--;\n\t\t\t\t\t\tword.wrong = false;\n\t\t\t\t\t\tword.right = true;\n\t\t\t\t\t\tword.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\tbreak\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(items.hasOwnProperty('answer2')){\n\t\t\t\t\t\t\tif(item === items.answer2){\n\t\t\t\t\t\t\t\tchances--;\n\t\t\t\t\t\t\t\tword.wrong = false;\n\t\t\t\t\t\t\t\tword.right = true;\n\t\t\t\t\t\t\t\tword.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t       \tword.right = false;\n\t\t\t\t\t\t\t\t\tword.wrong = true;\n\t                    \t\t}\n\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tword.right = false;\n\t\t\t\t\t\t\tword.wrong = true;\n                    \t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(word.wrong === true && chancesPerItem === 0){\n\t\t\t\t\t\tword.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\tchancesPerItem = 1\n\t\t\t\t\t\tchances--;\n\t\t\t\t\t\titem =\"\";\n\t\t\t\t\t}else{chancesPerItem = 0 ;}\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t}; // verify()\n\n\n\n\t\t}\n\n\n    }; \n});\n\n","/**\r\n * La actividad permite completar inputs en un table de acuerdo a \r\n * las imagenes que se hubican en la primera columna.\r\n */\r\nvar lizCompleteTableImageInputs = angular.module('lizCompleteTableImageInputs', []);\r\n\r\n lizCompleteTableImageInputs.directive('completeTableImageInputs', function () {\r\n \treturn {\r\n \t\trestrict: 'E',\r\n \t\ttemplateUrl: '../views/activities/complete_table_image_inputs.html',\r\n \t\tscope: {\r\n \t\t\toptions: '=',\r\n \t\t\tinstruction: '@',\r\n \t\t\ttitle: '@',\r\n \t\t\tdescription: '@',\r\n \t\t\taudio: '@',\r\n \t\t\tmainimg: '@',\r\n \t\t\talt: '@'\r\n \t\t},\r\n \t\tlink: function (scope, iElement, iAttrs) {\r\n \t\t\t// Inputs procesados\r\n\t\t\tscope.words = [];\r\n\r\n\t\t\t// Procesamos cada elemento del array entrante\r\n\t\t\tangular.forEach(scope.inputs, function (input) {\r\n\t\t\t\tscope.words.push({ word: input, right: false, wrong: false });\r\n\t\t\t});\r\n\r\n\t\t\tscope.textImageTitle = scope.options.textImageTitle;\r\n\t\t\tscope.textInput1Title = scope.options.textInput1Title;\r\n\t\t\tscope.textInput2Title = scope.options.textInput2Title;\r\n\t\t\tscope.rightAnswers = 0;\r\n\t\t\tscope.complete = false; // Cuando termina la actividad\r\n\t\t\tscope.block = false;\r\n\t\t\tscope.success = false;\r\n\t\t\tscope.failure = false;\r\n\r\n\t\t\t// watch if the activity is finished\r\n\t\t\tscope.$watch('complete', function(complete) {\r\n\t\t\t\tif (complete) {\r\n\t\t\t\t\tif (scope.rightAnswers >= scope.options.minRightAnswers) {\r\n\t\t\t\t\t\t// éxito\r\n\t\t\t\t\t\tscope.success = true;\r\n\r\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\r\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// fracaso\r\n\t\t\t\t\t\tscope.failure = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t});\r\n\r\n\t\t\tscope.items = scope.options.data;\r\n\r\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\r\n\t\t\tscope.isBottom = scope.title || scope.description;\r\n\r\n\t\t\tvar counter = 0;\r\n\t\t\tvar chances = scope.options.chancesPerItem-1;\r\n\r\n\t\t\tscope.verify = function (obj) {\r\n\t\t\t\tif ((obj.input == null ) || (obj.input == \"\" )) return;\r\n\r\n\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\r\n\t\t\t\tif(obj.input.toLowerCase() === obj.tableText.toLowerCase()){\r\n\t\t\t\t\tscope.rightAnswers++;\r\n\t\t\t\t\tobj.wrong = false;\r\n\t\t\t\t\tobj.right = true;\r\n\t\t\t\t\tobj.completed = true; // marcamos el item como completo, para desactivar el input\r\n\t\t\t\t\tcounter++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tobj.wrong ? chances=scope.options.chancesPerItem-2: chances=scope.options.chancesPerItem-1;\r\n\r\n                \tobj.wrong = true;\r\n                \t\r\n\r\n                    \tif(chances === 0){\r\n                    \tobj.block = true;\r\n                    \tcounter++;\r\n                    \tchances=scope.options.chancesPerItem-1;\r\n                    \t}else{chances--;obj.input=\"\";}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(counter === (scope.options.data.length * 2)){\r\n                    \t\r\n                    scope.complete = true;\r\n                \t\r\n                }\r\n                \r\n                scope.$apply();\r\n\t\t\t}\r\n \t\t}\r\n \t};\r\n });","/**\r\n * La actividad permite completar inputs en un table de acuerdo a \r\n * unas condiciones.\r\n */\r\n\r\nvar lizCompleteTableInputs = angular.module('lizCompleteTableInputs', []);\r\n\r\nlizCompleteTableInputs.directive('completeTableInputs', function () {\r\n \treturn {\r\n \t\trestrict: 'E',\r\n \t\ttemplateUrl: '../views/activities/complete_table_inputs.html',\r\n \t\tscope: {\r\n \t\t\toptions: '=',\r\n \t\t\tinstruction: '@',\r\n \t\t\taudio: '@'\r\n \t\t},\r\n \t\tlink: function (scope, iElement, iAttrs) {\r\n \t\t\tconsole.log(iAttrs);\r\n\t\t\t// Inputs procesados\r\n\t\t\tscope.words = [];\r\n\r\n\t\t\t// Procesamos cada elemento del array entrante\r\n\t\t\tangular.forEach(scope.inputs, function (input) {\r\n\t\t\t\tscope.words.push({ word: input, right: false, wrong: false });\r\n\t\t\t});\r\n\r\n\t\t\tscope.tableTextTitle = scope.options.tableTextTitle;\r\n\t\t\tscope.inputTextTitle = scope.options.inputTextTitle;\r\n\t\t\tscope.rightAnswers = 0;\r\n\t\t\tscope.complete = false; // Cuando termina la actividad\r\n\t\t\tscope.block = false;\r\n\t\t\tscope.success = false;\r\n\t\t\tscope.failure = false;\r\n\r\n\t\t\t// watch if the activity is finished\r\n\t\t\tscope.$watch('complete', function(complete) {\r\n\t\t\t\tif (complete) {\r\n\t\t\t\t\tif (scope.rightAnswers >= scope.options.data.length) {\r\n\t\t\t\t\t\t// éxito\r\n\t\t\t\t\t\tscope.success = true;\r\n\r\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\r\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// fracaso\r\n\t\t\t\t\t\tscope.failure = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t});\r\n\r\n\t\t\tscope.items = scope.options.data;\r\n\r\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\r\n\t\t\tscope.isBottom = scope.title || scope.description;\r\n\r\n\t\t\tvar counter = 0\r\n\t\t\tvar chances = scope.options.chancesPerItem-1\r\n\r\n\t\t\tscope.verify = function (input) {\r\n\t\t\t\t// aquí se hace lo que quiera con el input\r\n\t\t\t\tvar letters = /^[A-Za-z]+$/;\r\n\r\n\t\t\t\tif((input.input.match(letters) !== null) && (input.input !=\"\" )) {\r\n                    \t\r\n                \tinput.wrong = false;\r\n                    input.right = true;\r\n                    input.block = true;\r\n                    scope.rightAnswers++;\r\n                    counter++;\r\n                                                                   \r\n                }\r\n\r\n                if((input.input.match(letters) === null) && ((input.input != null ) && (input.input != \"\" ))) {\r\n\t                    \t\r\n\t                    \t\r\n                    \tinput.wrong ? chances=scope.options.chancesPerItem-2: chances=scope.options.chancesPerItem-1;\r\n\r\n                    \tinput.wrong = true;\r\n                    \t\r\n\r\n\t                    \tif(chances === 0){\r\n\t                    \tinput.block = true;\r\n\t                    \tcounter++;\r\n\t                    \tchances=scope.options.chancesPerItem-1;\r\n\t                    \t}else{chances--;input.input=\"\";}\r\n            \t}\r\n\r\n            \tif(counter === scope.options.data.length){\r\n                    \t\r\n                    scope.complete = true;\r\n                \t\r\n                }\r\n                \r\n\t\t\t}\r\n \t\t}\r\n \t};\r\n});","/**\r\n * La actividad permite completar inputs en hubicaciones aleatorias \r\n * en un table.\r\n */\r\nvar lizCompleteTableRandomInputs = angular.module('lizCompleteTableRandomInputs', []);\r\n\r\n lizCompleteTableRandomInputs.directive('completeTableRandomInputs', function ($sce) {\r\n \treturn {\r\n \t\trestrict: 'E',\r\n \t\ttemplateUrl: '../views/activities/complete_table_random_inputs.html',\r\n \t\tscope: {\r\n \t\t\toptions: '=',\r\n \t\t\tinstruction: '@',\r\n \t\t\ttitle: '@',\r\n \t\t\tdescription: '@',\r\n \t\t\taudio: '@'\r\n \t\t},\r\n \t\tlink: function (scope, element, iAttrs) {\r\n\r\n\t\t\tscope.sanitize = function (item) {\r\n\t\t\t\treturn $sce.trustAsHtml(item);\r\n\t\t\t};\r\n\r\n\t\t\t// ordena el array de forma aleatoria usando el algoritmo de Fisher-Yates\r\n\t\t\tscope.shuffleArray = function(array) {\r\n\t\t\t\tfor (var i = array.length - 1; i > 0; i--) {\r\n\t\t\t\t\tvar j = Math.floor(Math.random() * (i + 1));\r\n\t\t\t\t\tvar temp = array[i];\r\n\t\t\t\t\tarray[i] = array[j];\r\n\t\t\t\t\tarray[j] = temp;\r\n\t\t\t\t}\r\n\t\t\t\treturn array;\r\n\t\t\t};\r\n\r\n\t\t\tscope.items = scope.options.items;\r\n\t\t\tscope.titles = scope.options.titles;\r\n\t\t\tscope.rightAnswers = 0;\r\n\t\t\tscope.complete = false; // Cuando termina la actividad\r\n\t\t\tscope.block = false;\r\n\t\t\tscope.minRightAnswers = scope.options.minRightAnswers;\r\n\t\t\tscope.success = false;\r\n\t\t\tscope.failure = false;\r\n\t\t\tscope.numInputs = 0;\r\n\r\n\t\t\tangular.forEach(scope.items, function (item, key) {\r\n\t\t\t\tangular.forEach(item.objs, function (obj, k) {\r\n\t\t\t\t\tif (obj.isInput) {\r\n\t\t\t\t\t\tobj.chances = scope.options.chancesPerItem - 1;\r\n\t\t\t\t\t\tobj.right = false;\r\n\t\t\t\t\t\tobj.wrong = false;\r\n\t\t\t\t\t\tscope.numInputs++;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// watch if the activity is finished\r\n\t\t\tscope.$watch('complete', function(complete) {\r\n\t\t\t\tif (complete) {\r\n\t\t\t\t\tif (scope.rightAnswers >= scope.minRightAnswers) {\r\n\t\t\t\t\t\t// éxito\r\n\t\t\t\t\t\tscope.success = true;\r\n\r\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\r\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// fracaso\r\n\t\t\t\t\t\tscope.failure = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t});\r\n\r\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\r\n\t\t\tscope.isBottom = scope.title || scope.description;\r\n\r\n\t\t\tvar counter = 0;\r\n\r\n\t\t\tscope.verify = function (obj) {\r\n\t\t\t\tif (\"\" === obj.input || null === obj.input) { return; }\r\n\t\t\t\t\r\n\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\r\n\t\t\t\tif(obj.input.toLowerCase() === obj.answer.toLowerCase()){\r\n\t\t\t\t\tscope.rightAnswers++;\r\n\t\t\t\t\tobj.wrong = false;\r\n\t\t\t\t\tobj.right = true;\r\n\t\t\t\t\tobj.block = true; // marcamos el item como completo, para desactivar el input\r\n\t\t\t\t\tcounter++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// item.wrong ? chances=scope.options.chancesPerItem-2: chances=scope.options.chancesPerItem-1;\r\n\r\n                \tobj.wrong = true;\r\n\r\n                    \tif(obj.chances === 0){\r\n                    \tobj.block = true;\r\n                    \tobj.input = obj.answer;\r\n                    \tcounter++;\r\n                    \tobj.chances=scope.options.chancesPerItem-1;\r\n                    \t}else{obj.chances--;obj.input=\"\";}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(counter === scope.numInputs){\r\n                    \t\r\n                    scope.complete = true;\r\n                \t\r\n                }\r\n\t\t\t}\r\n \t\t}\r\n \t};\r\n });","/**\r\n * La actividad permite completar inputs en un table de acuerdo a \r\n * una lista lateral.\r\n */\r\nvar lizCompleteTableWithList = angular.module('lizCompleteTableWithList', []);\r\n\r\n lizCompleteTableWithList.directive('completeTableWithList', function ($sce) {\r\n \treturn {\r\n \t\trestrict: 'E',\r\n \t\ttemplateUrl: '../views/activities/complete_table_with_list.html',\r\n \t\tscope: {\r\n \t\t\toptions: '=',\r\n \t\t\tinstruction: '@',\r\n \t\t\ttitle: '@',\r\n \t\t\tdescription: '@',\r\n \t\t\taudio: '@'\r\n \t\t},\r\n \t\tlink: function (scope, element, iAttrs) {\r\n \t\t\t// Inputs procesados\r\n\t\t\tscope.words = [];\r\n\r\n\t\t\t// Procesamos cada elemento del array entrante\r\n\t\t\tangular.forEach(scope.inputs, function (input) {\r\n\t\t\t\tscope.words.push({ word: input, right: false, wrong: false });\r\n\t\t\t});\r\n\r\n\t\t\tscope.sanitize = function (item) {\r\n\t\t\t\treturn $sce.trustAsHtml(item);\r\n\t\t\t};\r\n\r\n\t\t\tscope.number = 7;\r\n\t\t\tscope.getNumber = function(num) {\r\n\t\t\t    return new Array(num);   \r\n\t\t\t};\r\n\r\n\t\t\t// ordena el array de forma aleatoria usando el algoritmo de Fisher-Yates\r\n\t\t\tscope.shuffleArray = function(array) {\r\n\t\t\t\tfor (var i = array.length - 1; i > 0; i--) {\r\n\t\t\t\t\tvar j = Math.floor(Math.random() * (i + 1));\r\n\t\t\t\t\tvar temp = array[i];\r\n\t\t\t\t\tarray[i] = array[j];\r\n\t\t\t\t\tarray[j] = temp;\r\n\t\t\t\t}\r\n\t\t\t\treturn array;\r\n\t\t\t};\r\n\r\n\t\t\tscope.textInput1Title = scope.options.textInput1Title;\r\n\t\t\tscope.textInput2Title = scope.options.textInput2Title;\r\n\t\t\tscope.textInput3Title = scope.options.textInput3Title;\r\n\t\t\tscope.rightAnswers = 0;\r\n\t\t\tscope.complete = false; // Cuando termina la actividad\r\n\t\t\tscope.block = false;\r\n\t\t\tscope.minRightAnswers = scope.options.minRightAnswers\r\n\t\t\tscope.success = false;\r\n\t\t\tscope.failure = false;\r\n\t\t\tscope.inputs =  scope.options.data;\r\n\t\t\tscope.randomItems = (scope.options.randomItems) ? true : false;\r\n\t\t\tconsole.log(scope.randomItems);\r\n\r\n\t\t\tscope.items = [];\r\n\t\t\tangular.forEach(scope.inputs.inputs1, function (value) {\r\n\t\t\t\tscope.items.push({listValue: value.listValue});\r\n\t\t\t});\r\n\r\n\t\t\tif (scope.inputs.hasOwnProperty(\"inputs2\")) {\r\n\t\t\t\t$.merge(scope.items, scope.inputs.inputs2);\r\n\t\t\t}\r\n\r\n\t\t\tif (scope.inputs.hasOwnProperty(\"inputs3\")) {\r\n\t\t\t\t$.merge(scope.items, scope.inputs.inputs3);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (scope.randomItems) {\r\n\t\t\t\tscope.items = scope.shuffleArray(scope.items);\r\n\t\t\t}\r\n\r\n\t\t\t// watch if the activity is finished\r\n\t\t\tscope.$watch('complete', function(complete) {\r\n\t\t\t\tif (complete) {\r\n\t\t\t\t\tif (scope.rightAnswers >= scope.minRightAnswers) {\r\n\t\t\t\t\t\t// éxito\r\n\t\t\t\t\t\tscope.success = true;\r\n\r\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\r\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// fracaso\r\n\t\t\t\t\t\tscope.failure = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t});\r\n\r\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\r\n\t\t\tscope.isBottom = scope.title || scope.description;\r\n\r\n\t\t\tvar counter = 0\r\n\t\t\tvar chances = scope.options.chancesPerItem-1\r\n\r\n\t\t\tscope.verify = function (item, inputs, num) {\r\n\t\t\t\tscope.actualValue = item.input;\r\n\t\t\t\tif ((scope.actualValue == null ) || (scope.actualValue === \"\" )) return;\r\n\t\t\t\tscope.exist = false;\r\n\r\n\t\t\t\tangular.forEach(inputs, function (value, key) {\r\n\t\t\t\t\tif (angular.equals(angular.lowercase(value.listValue), angular.lowercase(scope.actualValue))) {\r\n\t\t\t\t\t\tscope.exist = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\r\n\t\t\t\tif(scope.exist){\r\n\t\t\t\t\tscope.rightAnswers++;\r\n\t\t\t\t\titem.wrong = false;\r\n\t\t\t\t\titem.right = true;\r\n\t\t\t\t\titem.block = true; // marcamos el item como completo, para desactivar el input\r\n\t\t\t\t\tcounter++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\titem.wrong ? chances=scope.options.chancesPerItem-2: chances=scope.options.chancesPerItem-1;\r\n\r\n                \titem.wrong = true;\r\n\r\n                    \tif(chances === 0){\r\n                    \t\tangular.forEach(scope.inputs, function (obj, key) {\r\n\t\t\t\t\t\t\t\tangular.forEach(obj, function (o, k) {\r\n\t\t\t\t\t\t\t\t\tif (o.listValue.toLowerCase() === item.input.toLowerCase()) {\r\n\t\t\t\t\t\t\t\t\t\tvar n = obj.indexOf(o);\r\n\t\t\t\t\t\t\t\t\t\tobj.splice(n, 1);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < scope.items.length; i++) {\r\n\t\t\t\t\t\t\t\tif (scope.items[i].listValue.toLowerCase() === item.input.toLowerCase()) {\r\n\t\t\t\t\t\t\t\t\tscope.items[i].listValue = \"<span style='color:#F00'>\" + item.input +\"</span>\";\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n                    \titem.block = true;\r\n                    \tcounter++;\r\n                    \tchances=scope.options.chancesPerItem-1;\r\n                    \t}else{chances--;item.input=\"\";}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(counter === scope.items.length){\r\n                    \t\r\n                    scope.complete = true;\r\n                \t\r\n                }\r\n\t\t\t}\r\n \t\t}\r\n \t};\r\n });","/**\r\n * La actividad permite completar inputs en un table de acuerdo a \r\n * el texto que se hubican en la primera columna.\r\n */\r\nvar lizCompleteTableWithText = angular.module('lizCompleteTableWithText', []);\r\n\r\n lizCompleteTableWithText.directive('completeTableWithText', function () {\r\n \treturn {\r\n \t\trestrict: 'E',\r\n \t\ttemplateUrl: '../views/activities/complete_table_with_text.html',\r\n \t\tscope: {\r\n \t\t\toptions: '=',\r\n \t\t\tinstruction: '@',\r\n \t\t\ttitle: '@',\r\n \t\t\tdescription: '@',\r\n \t\t\taudio: '@'\r\n \t\t},\r\n \t\tlink: function (scope, iElement, iAttrs) {\r\n \t\t\t// Inputs procesados\r\n\t\t\tscope.words = [];\r\n\r\n\t\t\t// Procesamos cada elemento del array entrante\r\n\t\t\tangular.forEach(scope.inputs, function (input) {\r\n\t\t\t\tscope.words.push({ word: input, right: false, wrong: false });\r\n\t\t\t});\r\n\r\n\t\t\tscope.getNumber = function(num) {\r\n\t\t\t    return new Array(num);   \r\n\t\t\t};\r\n\r\n\t\t\tscope.textMainTitle = scope.options.textMainTitle;\r\n\t\t\tscope.textInput1Title = scope.options.textInput1Title;\r\n\t\t\tscope.textInput2Title = scope.options.textInput2Title;\r\n\t\t\tscope.textInput3Title = scope.options.textInput3Title;\r\n\t\t\tscope.isPrefix = scope.options.isPrefix || false;\r\n\t\t\tscope.hasOptions = scope.options.hasOptions || false;\r\n\t\t\tscope.noTitle = scope.options.noTitle || false;\r\n\t\t\tscope.rightAnswers = 0;\r\n\t\t\tscope.complete = false; // Cuando termina la actividad\r\n\t\t\tscope.block = false;\r\n\t\t\tscope.success = false;\r\n\t\t\tscope.failure = false;\r\n\r\n\t\t\tif (scope.hasOptions) {\r\n\t\t\t\tscope.opts = scope.options.opts;\r\n\t\t\t}\r\n\r\n\t\t\t// watch if the activity is finished\r\n\t\t\tscope.$watch('complete', function(complete) {\r\n\t\t\t\tif (complete) {\r\n\t\t\t\t\tif (scope.rightAnswers >= scope.options.minRightAnswers) {\r\n\t\t\t\t\t\t// éxito\r\n\t\t\t\t\t\tscope.success = true;\r\n\r\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\r\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// fracaso\r\n\t\t\t\t\t\tscope.failure = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t});\r\n\r\n\t\t\tscope.items = scope.options.data;\r\n\r\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\r\n\t\t\tscope.isBottom = scope.title || scope.description;\r\n\r\n\t\t\tvar counter = 0\r\n\t\t\tvar chances = scope.options.chancesPerItem-1\r\n\r\n\t\t\tscope.verify = function (item, items, type) {\r\n\t\t\t\tif ((item.input == null ) || (item.input == \"\" )) return;\r\n\t\t\t\tscope.exist = false;\r\n\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tif (item.input.toLowerCase() === items[0].option.toLowerCase()) {\r\n\t\t\t\t\t\t\t\tscope.exist = true;\r\n\t\t\t\t\t\t\t} else if (chances === 0) {\r\n\t\t\t\t\t\t\t\titem.input = items[0].option;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tvar match = 0;\r\n\t\t\t\t\t\t\tvar itemArray = item.input.split(\", \");\r\n\t\t\t\t\t\t\tconsole.log(itemArray);\r\n\t\t\t\t\t\t\tangular.forEach(itemArray, function (i, k) {\r\n\t\t\t\t\t\t\t\tangular.forEach(items, function (value, key) {\r\n\t\t\t\t\t\t\t\t\tif (angular.equals(angular.lowercase(value.option), angular.lowercase(i))) {\r\n\t\t\t\t\t\t\t\t\t\tmatch++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (items.length === match) {\r\n\t\t\t\t\t\t\t\tscope.exist = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 3 :\r\n\t\t\t\t\t\t\tangular.forEach(items, function (value, key) {\r\n\t\t\t\t\t\t\t\tif (angular.equals(angular.lowercase(value.option), angular.lowercase(item.input))) {\r\n\t\t\t\t\t\t\t\t\tscope.exist = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\r\n\t\t\t\tif(scope.exist){\r\n\t\t\t\t\tscope.rightAnswers++;\r\n\t\t\t\t\titem.wrong = false;\r\n\t\t\t\t\titem.right = true;\r\n\t\t\t\t\titem.block = true; // marcamos el item como completo, para desactivar el input\r\n\t\t\t\t\tcounter++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\titem.wrong ? chances=scope.options.chancesPerItem-2: chances=scope.options.chancesPerItem-1;\r\n\r\n                \titem.wrong = true;\r\n                \t\r\n\r\n                    \tif(chances === 0){\r\n                    \titem.block = true;\r\n                    \tcounter++;\r\n                    \tchances=scope.options.chancesPerItem-1;\r\n                    \t}else{chances--;item.input=\"\";}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(counter === (scope.options.numOptions)){\r\n\r\n                    // 08 08 2014 - Maria Giraldo, Se cambia  scope.complete = false; por  scope.complete = true;para activar la actividad completa al ingresar todas las opciones\r\n                    scope.complete = true;\r\n                    //scope.complete = false;\r\n                \t\r\n                }\r\n\t\t\t}\r\n \t\t}\r\n \t};\r\n });","/**\r\n * La actividad permite responder a varias preguntas en cuadros de texto. \r\n */\r\n\r\nvar lizCompleteTextBoxes = angular.module('lizCompleteTextBoxes', []);\r\n\r\nlizCompleteTextBoxes.directive('completeTextBoxes', function($sce){\r\n\t// Runs during compile\r\n\treturn {\r\n\t\t// name: '',\r\n\t\t// priority: 1,\r\n\t\t// terminal: true,\r\n\t\tscope: {\r\n\t\t\toptions: '=',\r\n \t\t\tinstruction: '@',\r\n \t\t\ttitle: '@',\r\n \t\t\tdescription: '@',\r\n \t\t\tsrc: '@',\r\n \t\t\talt: '@',\r\n \t\t\taudio: '@'\r\n\t\t}, // {} = isolate, true = child, false/undefined = no change\r\n\t\t// controller: function($scope, $element, $attrs, $transclude) {},\r\n\t\t// require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements\r\n\t\trestrict: 'E', // E = Element, A = Attribute, C = Class, M = Comment\r\n\t\t// template: '',\r\n\t\ttemplateUrl: '../views/activities/complete_text_boxes.html',\r\n\t\t// replace: true,\r\n\t\t// transclude: true,\r\n\t\t// compile: function(tElement, tAttrs, function transclude(function(scope, cloneLinkingFn){ return function linking(scope, elm, attrs){}})),\r\n\t\tlink: function(scope, iElm, iAttrs, controller) {\r\n\t\t\t\r\n\t\t\tscope.rightAnswers = 0;\r\n\t\t\tscope.complete = false; // Cuando termina la actividad\r\n\t\t\tscope.block = false;\r\n\t\t\tscope.success = false;\r\n\t\t\tscope.failure = false;\r\n\t\t\tscope.minChars = (scope.options.minChars) ? scope.options.minChars : 5;\r\n\t\t\tscope.hasImage = (scope.options.hasImage) ? true : false;\r\n\r\n\t\t\tscope.items = scope.options.items;\r\n\r\n\t\t\t// watch if the activity is finished\r\n\t\t\tscope.$watch('complete', function(complete) {\r\n\t\t\t\tif (complete) {\r\n\t\t\t\t\tif (scope.rightAnswers >= scope.options.minRightAnswers || scope.rightAnswers >= scope.items.length) {\r\n\t\t\t\t\t\t// éxito\r\n\t\t\t\t\t\tscope.success = true;\r\n\r\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\r\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// fracaso\r\n\t\t\t\t\t\tscope.failure = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t});\r\n\r\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\r\n\t\t\tscope.isBottom = scope.title || scope.description;\r\n\r\n\t\t\tvar counter = 0;\r\n\t\t\tvar chances = scope.options.chancesPerItem-1;\r\n\r\n\t\t\t// Para usar el html en angular\r\n\t\t\tscope.sanitize = function (item) {\r\n\t\t\t\treturn $sce.trustAsHtml(item);\r\n\t\t\t}\r\n\r\n\t\t\tscope.compareArray = function (arrayA, arrayB) {\r\n\t\t\t\tif (arrayA.length != arrayB.length) { return false; }\r\n\t\t        // sort modifies original array\r\n\t\t        // (which are passed by reference to our method!)\r\n\t\t        // so clone the arrays before sorting\r\n\t\t        var a = jQuery.extend(true, [], arrayA);\r\n\t\t        var b = jQuery.extend(true, [], arrayB);\r\n\t\t        a.sort(); \r\n\t\t        b.sort();\r\n\t\t        for (var i = 0, l = a.length; i < l; i++) {\r\n\t\t            if (a[i] !== b[i]) { \r\n\t\t                return false;\r\n\t\t            }\r\n\t\t        }\r\n\t\t        return true;\r\n\t\t\t};\r\n\r\n\t\t\tscope.verify = function (item) {\r\n\t\t\t\tif ((item.input == null ) || (item.input === \"\" )) return;\r\n\r\n\t\t\t\tvar done = false;\r\n\t\t\t\t\r\n\t\t\t\tif (item.hasAnswers) {\r\n\t\t\t\t\tvar string = item.input.toLowerCase();\r\n\t\t\t\t\tfor (var i = 0; i < item.answers.length; i++) {\r\n\t\t\t\t\t\tif (string.indexOf(item.answers[i].toLowerCase()) === -1)  {\r\n\t\t\t\t\t\t\tdone = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdone = true;\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar letters = /^[A-Za-z\\s]+$/;\r\n\t\t\t\t\tdone = (item.input.match(letters) && item.input.length >= scope.minChars) ? true : false;\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (done) {\r\n\t\t\t\t\tscope.rightAnswers++;\r\n\t\t\t\t\titem.wrong = false;\r\n\t\t\t\t\titem.right = true;\r\n\t\t\t\t\titem.block = true; // marcamos el item como completo, para desactivar el input\r\n\t\t\t\t\tcounter++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\titem.wrong ? chances=scope.options.chancesPerItem-2: chances=scope.options.chancesPerItem-1;\r\n\r\n                \titem.wrong = true;\r\n                \t\r\n\r\n                    \tif(chances === 0){\r\n                    \titem.block = true;\r\n                    \tcounter++;\r\n                    \tchances=scope.options.chancesPerItem-1;\r\n                    \t}else{chances--;item.input=\"\";}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(counter === scope.items.length){\r\n                    \t\r\n                    scope.complete = true;\r\n                \t\r\n                }\r\n                \r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n});","var lizCompleteWords = angular.module('lizCompleteWords', []);\n\nlizCompleteWords.directive('completeWords', function () {\n  return {\n    restrict: 'E',\n    templateUrl: '../views/activities/complete_words.html',\n    scope: {\n      options: '=',\n      description: '@',\n      audio: '@'\n    },\n    link: function (scope, element, attrs) {\n      var opt = scope.options,\n        minRightAnswers = opt.minRightAnswers,\n        rightAnswers = 0, // Contador de preguntas buenas\n        chances = 0; // el doble, ya que es izquierda y derecha\n\n      // Corremos la aplicación\n      scope.items = opt.items;\n      scope.itemsPerRow = opt.itemsPerRow;\n      scope.pattern = scope.items[0].pattern;\n      scope.words = [];\n      scope.success = false;\n      scope.failure = false;\n      scope.block = false;\n      scope.samples = opt.samples; // ejemplos para llenar los cuadros\n\n      chances = scope.items[0].pattern.length * 1; // el doble, ya que es izquierda y derecha\n\n      /**\n       * Devuelve los estilos del texto.\n       */\n      scope.getTextStyles = function () {\n        var styles = \"\";\n\n        if(! scope.items[0].resource) {\n          styles = \"margin-left: 0; width: 100%;\";\n        }\n\n        return styles;\n      };\n\n      /**\n       * Para obtener los estilos de los elementos, específicamente el ancho\n       */\n      scope.getStyles = function () {\n        var styles = \"\";\n\n        if (scope.itemsPerRow) {\n          styles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n          styles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n          styles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n          styles += \"margin-right: \" + (10 / scope.itemsPerRow) + \"%!important;\";\n        } else {\n          styles += \"width: \" + (100 / scope.items.length) + \"%;\";\n          styles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n          styles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n        }\n\n        return styles;\n      };\n\n      var string = scope.items[0].text;\n      var words = string.split(\" \");\n\n      // Constructor de palabras\n      for (var i = 0; i < words.length; i++) {\n\n        if (scope.pattern.indexOf(i) > -1) {\n          scope.words.push({\n            isInput: true,\n            input: '',\n            word: (words[i])\n          });\n        }  else {\n          scope.words.push({\n            isInput: false,\n            word: (words[i])\n          });\n        }\n\n      }\n\n      /**\n       * Verifica si el input cumple con las condiciones del número\n       */\n      var chancesPerItem = 1;\n\n      scope.verify = function (item) {\n        if (item.input === '') return;\n\n        // Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\n        if (item.input === item.word || ((scope.items[0].hasOwnProperty('answer2')) && (item.input === scope.items[0].answer2))) {\n          rightAnswers++;\n          chances--;\n          item.wrong = false;\n          item.right = true;\n          item.completed = true; // marcamos el item como completo, para desactivar el input\n        } else {\n\n          item.wrong ? chancesPerItem = 0 : chancesPerItem = 1;\n          item.wrong = true;\n\n          if (chancesPerItem === 0) {\n            item.completed = true;\n            chances--;\n            chancesPerItem = 1;\n          } else {\n            item.input = \"\";\n          }\n        }\n\n        // fin de la actividad\n        if (chances === 0) {\n          if (rightAnswers >= minRightAnswers) {\n            scope.$root.isNextEnabled = true;\n            scope.success = true;\n          } else {\n            scope.failure = true;\n          }\n        }\n\n      }; // verify()\n    }\n  };\n});\n\n","/**\r\n * La actividad permite completar palabras de uno o varios textos.\r\n * por medio de selects.\r\n */\r\n\r\nvar lizCompleteWordsSelect = /**\r\n * lizCompleteWordsSelect Module\r\n */\r\n  angular.module('lizCompleteWordsSelect', []);\r\n\r\nlizCompleteWordsSelect.directive('completeWordsSelect', function ($log) {\r\n  // Runs during compile\r\n  return {\r\n    // name: '',\r\n    // priority: 1,\r\n    // terminal: true,\r\n    scope: {\r\n      options: '=',\r\n      instruction: '@',\r\n      title: '@',\r\n      description: '@',\r\n      audio: '@'\r\n    }, // {} = isolate, true = child, false/undefined = no change\r\n    // controller: function($scope, $element, $attrs, $transclude) {},\r\n    // require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements\r\n    restrict: 'E', // E = Element, A = Attribute, C = Class, M = Comment\r\n    // template: '',\r\n    templateUrl: '../views/activities/complete_words_select.html',\r\n    // replace: true,\r\n    // transclude: true,\r\n    // compile: function(tElement, tAttrs, function transclude(function(scope, cloneLinkingFn){ return function linking(scope, elm, attrs){}})),\r\n    link: function (scope, iElm, iAttrs, controller) {\r\n      scope.items = scope.options.items;\r\n      scope.itemsPerRow = scope.options.itemsPerRow;\r\n      var minRightAnswers = scope.options.minRightAnswers,\r\n        chances = scope.options.chancesPerItem - 1;\r\n      scope.inputsCounter = 0;\r\n      scope.rightAnswers = 0;\r\n      scope.complete = false;\r\n      scope.success = false;\r\n      scope.failure = false;\r\n      scope.block = false;\r\n\r\n      // watch if the activity is finished\r\n      scope.$watch('complete', function (complete) {\r\n        if (complete) {\r\n          if (scope.rightAnswers >= minRightAnswers) {\r\n            // success\r\n            scope.success = true;\r\n\r\n            // Turn on next route\r\n            scope.$root.isNextEnabled = true;\r\n          } else {\r\n            // failure\r\n            scope.failure = true;\r\n          }\r\n        }\r\n      });\r\n\r\n      angular.forEach(scope.items, function (item, key) {\r\n\r\n        angular.forEach(item.answers, function (value, key) {\r\n          item.text = item.text.replace(value.answer, \"inputhere\");\r\n        });\r\n\r\n        item.words = [];\r\n\r\n        var words = item.text.split(\" \");\r\n\r\n        // Constructor de palabras\r\n        for (var i = 0; i < words.length; i++) {\r\n          if (item.pattern.indexOf(i) > -1) {\r\n            scope.inputsCounter++;\r\n            item.words.push({\r\n              isInput: true,\r\n              input: '',\r\n              word: item.answers[i].answer,\r\n              index: i,\r\n              options: item.answers[i].options\r\n            });\r\n          } else {\r\n            item.words.push({\r\n              isInput: false,\r\n              word: (words[i])\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      var counter = 0;\r\n      scope.verify = function (item) {\r\n        $log.log(item);\r\n        if (item.input === '') return;\r\n\r\n        // Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\r\n        if (item.input.toLowerCase() === item.word.toLowerCase()) {\r\n          scope.rightAnswers++;\r\n          item.wrong = false;\r\n          item.right = true;\r\n          item.completed = true; // marcamos el item como completo, para desactivar el input\r\n          counter++;\r\n        } else {\r\n          item.wrong ? chances = scope.options.chancesPerItem - 2 : chances = scope.options.chancesPerItem - 1;\r\n\r\n          item.wrong = true;\r\n\r\n          if (chances === 0) {\r\n            item.completed = true;\r\n            counter++;\r\n            chances = scope.options.chancesPerItem - 1;\r\n            item.input = item.word;\r\n          } else {\r\n            chances--;\r\n            item.input = \"\";\r\n          }\r\n        }\r\n\r\n        if (counter === scope.inputsCounter) {\r\n          scope.complete = true;\r\n        }\r\n\r\n      };\r\n    }\r\n  };\r\n});","var lizCompleteWordsWi = angular.module('lizCompleteWordsWi', []);\n\nlizCompleteWordsWi.directive('completeWordsWi', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/complete_words_wi.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.pattern = scope.items[0].pattern;\n\t\t\tscope.words = [];\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.items[0].pattern.length * 1, // el doble, ya que es izquierda y derecha\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-right: \" + (10 / scope.itemsPerRow) + \"%!important;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\tvar string = scope.items[0].text;\n\t\t\tvar words = string.split(\" \");\n\t\t\t\n\n\t\t\t\t   console.log(words);\n\t\t\t\t   /*console.log(scope.pattern);*/\n\n\t\t   // Constructor de palabras\n\t\t\tfor(var i=0; i < words.length; i++){\n\n\t\t\t\tif( scope.pattern.indexOf(i) > -1 ){\n\t\t\t\t\tscope.words.push({\n\t\t\t\t\t\t\t  isInput: true,\n\t\t\t\t\t\t      input: (words[i]).substring(0,1),\n\t\t\t\t\t\t      word: (words[i])\n\t\t\t\t\t});\n\n\t\t\t\t} \n\n\t\t\t\telse{\n\t\t\t\t\tscope.words.push({\n\t\t\t\t\t\t\t isInput: false,\n\t\t\t\t\t\t     word: (words[i])\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\t var chancesPerItem = 1\n\n\t\t\tscope.verify = function (item) {\n\t\t\t\tif(item.input === '') return; \n\n\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\n\t\t\t\t\tif(item.input === item.word){\n\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\tchances--;\n\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\titem.wrong ? chancesPerItem = 0: chancesPerItem = 1;\n\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(chancesPerItem === 0){\n\t\t                    \titem.completed = true;\n\t\t                    \tchances--;\n\t\t                    \tchancesPerItem = 1;\n\t\t                    \t}else{item.input=\"\";}\n\t\t\t\t\t}\n\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t}; // verify()\n\n\n\n\t\t}\n\n\n    }; \n});\n\n","var lizCountElements = angular.module('lizCountElements', []);\n\n// Knockout Pairs Factory\nlizCountElements.factory('countElementsActivity', function ($rootScope, shuffleArrayFactory) {\n\n\tvar countElementsActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tcountElementsActivity.create = function (options) {\n\t\treturn new countElementsActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\toptions\t\t\t\t\t\tOpciones a utilizar.\n\t *\n\t * @param {integer}\t\toptions.chances\t\t\t\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\toptions.minRightAnswers\t\t\tNúmero mínimo de respuestas correctas\n\t * @param {function}\toptions.successCallback\t\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\toptions.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\tcountElementsActivity._ViewModel = function (options) {\n\t\tvar self = this;\n\n\t\tvar minRightAnswers = options.minRightAnswers ? options.minRightAnswers : options.items.length,\n\t\t\tchances = options.chances ? options.chances : options.items.length;\n\n\t\t// antes que nada, generamos el Id para cada uno de los elementos\n\t\toptions.items.forEach(function(item){\n\t\t\titem._id = (Math.random() + 1).toString(36).substring(7);\n\t\t});\n\n\t\tself.targets = ko.observableArray(options.items.slice(0)); // Clonamos el array\n\t\tself.numbers = ko.observableArray(shuffleArrayFactory.run(options.items)); // Elementos desordenados\n\n\t\tself.targets().forEach(function(target){\n\t\t\t// Debemos agregar una propiedad a cada target para manejar el sortable\n\t\t\ttarget._sortable = ko.observableArray();\n\t\t\ttarget._sortable._id = target._id; // Para compararlo usando knockoutSortable\n\n\t\t\t// Fuera de eso, agregaremos un array con un tamaño igual a número, para así multiplicar las imágenes\n\t\t\ttarget._multiplier = [];\n\n\t\t\tfor(var i = 0; i < target.number; i++){\n\t\t\t\ttarget._multiplier.push(i + 1);\n\t\t\t}\n\n\t\t});\n\n\t\t// Carpeta de recursos desde angular\n\t\tself.resources = $rootScope.resources;\n\n\t\tself.maximumElements = 1; // IMPORTANTE: Requerido para que los sortables no acepten más de un elemento\n\t\tself.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\t\tself.failure = ko.observable(false);\n\t\tself.success = ko.observable(false);\n\n\t\t// Define si el target esta lleno utilizando self.maximumElements\n\t\tself.isContainerFull = function (parent) {\n\t\t\treturn parent().length < self.maximumElements;\n\t\t};\n\n\t\t// Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\n\t\tself.verifyAnswer = function (arg) {\n\t\t\tvar item = arg.item,\n\t\t\t\tparent = arg.targetParent;\n\n\t\t\tif(arg.sourceParent === parent) return;\n\n\t\t\tif(item._id === parent._id){\n\t\t\t\t// Respuesta Correcta\n\t\t\t\tself.rightAnswer(item);\n\t\t\t\tself.rightAnswers++;\n\t\t\t} else {\n\t\t\t\t// Respuesta Incorrecta\n\t\t\t\tself.wrongAnswer(item);\n\t\t\t\targ.cancelDrop = true;\n\t\t\t}\n\n\t\t\tchances--;\n\n\t\t\tif(chances === 0){\n\t\t\t\tif (self.rightAnswers >= minRightAnswers) {\n\n\t\t\t\t\tself.success(true); // Trigger de éxito\n\t\t\t\t\t$rootScope.isNextEnabled = true; // Activamos el siguiente\n\n\t\t\t\t\t// Se llama la función de éxito, definida por el desarrollador\n\t\t\t\t\tif (typeof options.successCallback !== \"undefined\") options.successCallback();\n\n\t\t\t\t} else {\n\t\t\t\t\t// Trigger de fracaso\n\t\t\t\t\tself.failure(true);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} \n\t\t};\n\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con countElementsActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\tcountElementsActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn countElementsActivity;\n\n});\n\n\nlizCountElements.directive('countElements', function  (countElementsActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/count_elements.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tcountElementsActivity.run(countElementsActivity.create(scope.options));\n\t\t}\n\t}; \n});\n","var lizCountElements2 = angular.module('lizCountElements2', ['factories']);\n\nlizCountElements2.directive('countElements2', function  (shuffleArrayFactory) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\thideImages: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/count_elements2.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\tvar opt = scope.options;\n\n\t\t\t// La diversión empieza aquí!!!\n\t\t\tscope.items = opt.items;\n\t\t\tscope.rightAnswers = 0; // Contador de preguntas correctas\n\n\t\t\t/**\n\t\t\t * Función que corre que cuando cambia el valor de un input\n\t\t\t */\n\t\t\tscope.verifyInput = function (item) {\n\n\t\t\t\t// Si no es un número, borramos el input\n\t\t\t\tif(isNaN(parseInt(item.input))){\n\t\t\t\t\titem.input = '';\n\t\t\t\t}\n\n\t\t\t\t// Recorremos todos los elementos. Si se han llenado los inputs mínimos requeridos, activamos el botón de siguiente\n\t\t\t\tvar count = 0;\n\n\t\t\t\tcount = scope.items.filter(function(item){\n\t\t\t\t\treturn item.hasOwnProperty('input') && item.input !== '';\n\t\t\t\t}).length;\n\n\t\t\t\tif(count >= opt.minRightAnswers){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t} else {\n\t\t\t\t\tscope.$root.isNextEnabled = false;\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tscope.$root.beforeGoNext = function () {\n\t\t\t\tscope.success = true; // Mostramos la vista de felicitación\n\t\t\t\treturn true; // nos permite pasar a la siguiente actividad\n\t\t\t};\n\n\t\t}\n\t}; \n});\n\n","var lizCrossword = angular.module('lizCrossword', []);\r\n\r\nlizCrossword.directive('crossword', function () {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\tscope: {\r\n\t\t\toptions: '=',\r\n\t\t\taudio:'@',\r\n\t\t\tdescription: '@'\r\n\t\t},\r\n\t\ttemplateUrl: '../views/activities/crossword.html',\r\n\t\tlink: function (scope, element, attrs) {\r\n\t\t\tvar opt = scope.options; // Alias de opciones\r\n\r\n\t\t\t// Número de columnas y filas en la tabla\r\n\t\t\tvar cols = 0,\r\n\t\t\t\trows = 0,\r\n\t\t\t\tstart = 0, // punto inicial usado en words.foreach\r\n\t\t\t\tend = 0, // punto final usado en words.foreach\r\n\t\t\t\tfiltered = null; // Filtrado de palabras\r\n\r\n\t\t\tscope.table = []; // Tabla de trabajo\r\n\t\t\tscope.words = opt.words; // Tomamos las palabras desde el controlador\r\n\t\t\tscope.selectedWord = false; // palabra seleccionada actualmente\r\n\t\t\tscope.selectedCell = false; // palabra seleccionada actualmente\r\n\t\t\tscope.prevParent = false; // padre anterior. Usado para las palabras cruzadas en el salto de celda\r\n\r\n\t\t\t// calificaciones\r\n\t\t\tscope.success = false;\r\n\t\t\tscope.failure = false;\r\n\r\n\t\t\t// ===================================================\r\n\t\t\t// CONSTRUCCIÓN DE PALABRAS\r\n\t\t\t// ===================================================\r\n\t\t\t// Recorremos las palabras para obtener la configuración.\r\n\t\t\t// Inicialmente, se busca el tamaño del crucigrama\r\n\t\t\tscope.words.forEach(function (word) {\r\n\r\n\t\t\t\t// Convertimos las palabras a mayúsculas\r\n\t\t\t\tword.word = word.word.toUpperCase();\r\n\r\n\t\t\t\t// columnas\r\n\t\t\t\tif(word.pos[0][0] > cols) cols = word.pos[0][0];\r\n\t\t\t\tif(word.pos[1][0] > cols) cols = word.pos[1][0];\r\n\r\n\t\t\t\t// filas\r\n\t\t\t\tif(word.pos[0][1] > rows) rows = word.pos[0][1];\r\n\t\t\t\tif(word.pos[1][1] > rows) rows = word.pos[1][1];\r\n\r\n\t\t\t\t// Creamos el objeto de palabra\r\n\t\t\t\tif(word.pos[0][1] === word.pos[1][1]){\r\n\t\t\t\t\t// horizontal\r\n\t\t\t\t\tword.horizontal = true;\r\n\t\t\t\t\tword._word = [];\r\n\r\n\t\t\t\t\t// si x en cada posición es igual, es horizontal\r\n\t\t\t\t\tfor(var i = word.pos[0][0]; i <= word.pos[1][0]; i++){\r\n\t\t\t\t\t\tvar item = {\r\n\t\t\t\t\t\t\tx: i,\r\n\t\t\t\t\t\t\ty: word.pos[0][1],\r\n\t\t\t\t\t\t\t$parent: word,\r\n\t\t\t\t\t\t\tletter: word.word[i - word.pos[0][0]] // añade la letra de la palabra\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// si es la letra inicial, añadimos el número\r\n\t\t\t\t\t\tif(i === word.pos[0][0]) item.number = word.number;\r\n\t\t\t\t\t\tword._word.push(item);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if(word.pos[0][0] === word.pos[1][0]){\r\n\t\t\t\t\t// vertical\r\n\t\t\t\t\tword.vertical = true;\r\n\t\t\t\t\tword._word = [];\r\n\r\n\t\t\t\t\t// antes que nada, debemos ver desde donde empieza la palabra\r\n\t\t\t\t\tif(word.pos[0][1] < word.pos[1][1]) {\r\n\t\t\t\t\t\t// de arriba a abajo\r\n\t\t\t\t\t\t// si y en cada posición es igual, entonces es vertical\r\n\t\t\t\t\t\tfor(var i = word.pos[0][1]; i <= word.pos[1][1]; i++){\r\n\t\t\t\t\t\t\tvar item = {\r\n\t\t\t\t\t\t\t\tx: word.pos[0][0],\r\n\t\t\t\t\t\t\t\ty: i,\r\n\t\t\t\t\t\t\t\t$parent: word,\r\n\t\t\t\t\t\t\t\tletter: word.word[i - word.pos[0][1]]\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t// si es la letra inicial, añadimos el número\r\n\t\t\t\t\t\t\tif(i === word.pos[0][1]) item.number = word.number;\r\n\t\t\t\t\t\t\tword._word.push(item);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if(word.pos[0][1] > word.pos[1][1]) {\r\n\t\t\t\t\t\t// De abajo a arriba\r\n\t\t\t\t\t\t// Reversa la palabra\r\n\t\t\t\t\t\tword.word = word.word.split(\"\").reverse().join(\"\");\r\n\t\t\t\t\t\tword.reverse = true; // propiedad para definir que la palabra vertical viene invertida\r\n\r\n\t\t\t\t\t\tfor(var i = word.pos[1][1]; i <= word.pos[0][1]; i++){\r\n\t\t\t\t\t\t\tvar item = {\r\n\t\t\t\t\t\t\t\tx: word.pos[0][0],\r\n\t\t\t\t\t\t\t\ty: i,\r\n\t\t\t\t\t\t\t\t$parent: word,\r\n\t\t\t\t\t\t\t\tletter: word.word[i - word.pos[1][1]]\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t// si es la letra inicial, añadimos el número\r\n\t\t\t\t\t\t\tif(i === word.pos[0][1]) item.number = word.number;\r\n\t\t\t\t\t\t\tword._word.push(item);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// ===================================================\r\n\t\t\t// CONSTRUCCIÓN DE TABLA\r\n\t\t\t// ===================================================\r\n\t\t\tvar temp = null, // Variable temporal\r\n\t\t\t\tnumber = null;\r\n\r\n\t\t\tfor(var y = 0; y <= rows; y++){\r\n\t\t\t\t// Añadimos una nueva fila\r\n\t\t\t\tscope.table.push([]);\r\n\r\n\t\t\t\t// para cada celda\r\n\t\t\t\tfor(var x = 0; x <= cols; x++){\r\n\t\t\t\t\t// Buscamos la palabra que coincide con (x,y)\r\n\t\t\t\t\tfiltered = scope.words.filter(function (w) {\r\n\t\t\t\t\t\treturn ((w.pos[0][0] <= x && w.pos[1][0] >= x)\r\n\t\t\t\t\t\t\t&& (w.pos[0][1] <= y && w.pos[1][1] >= y)) ||\r\n\t\t\t\t\t\t\t\t((w.pos[1][0] <= x && w.pos[0][0] >= x)\r\n\t\t\t\t\t\t\t&& (w.pos[1][1] <= y && w.pos[0][1] >= y));\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// Agrega el nuevo objeto en la tabla\r\n\t\t\t\t\tif(filtered.length > 0){\r\n\t\t\t\t\t\t// Recuperamos la celda idéntica desde las palabras\r\n\t\t\t\t\t\ttemp = filtered[0]._word.filter(function (w) { \r\n\t\t\t\t\t\t\treturn w.x === x && w.y === y;\r\n\t\t\t\t\t\t})[0];\r\n\r\n\t\t\t\t\t\t// Añadimos el modelo a vincular con cada uno de los inputs\r\n\t\t\t\t\t\ttemp.$parent._word.forEach(function (letter) { letter.input = ''; });\r\n\r\n\t\t\t\t\t\t// Para las celdas que se cruzan, debemos hacer una funcionalidad especial\r\n\t\t\t\t\t\tif(filtered.length > 1){\r\n\t\t\t\t\t\t\ttemp.cross = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Si no, es un cuadro vacío\r\n\t\t\t\t\t\ttemp = {\r\n\t\t\t\t\t\t\tx: x,\r\n\t\t\t\t\t\t\ty: y,\r\n\t\t\t\t\t\t\tempty: true\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Añade el objeto\r\n\t\t\t\t\tscope.table[y].push(temp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Añadimos los números a las palabras que empiezan dentro de otra palabra\r\n\t\t\tvar iX = 0,\r\n\t\t\t\tiY = 0;\r\n\r\n\t\t\tscope.words.forEach(function(word){\r\n\t\t\t\tiX = word.pos[0][0];\r\n\t\t\t\tiY = word.pos[0][1];\r\n\r\n\t\t\t\t// si no tiene número, se agrega\r\n\t\t\t\tif(! scope.table[iY][iX].hasOwnProperty('number')) {\r\n\t\t\t\t\tscope.table[iY][iX].number = word.number;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Selecciona la palabra y la celda, para que el estudiante pueda empezar a\r\n\t\t\t * escribir la palabra\r\n\t\t\t *\r\n\t\t\t * @param {Object} item celda seleccionada en el crucigrama\r\n\t\t\t */\r\n\t\t\tscope.selectWord = function (item) {\r\n\t\t\t\t// si no es parte de una palabra, cancelamos inmediatamente\r\n\t\t\t\tif(item.empty) return;\r\n\r\n\t\t\t\t// si existe una palabra seleccionada previamente, limpiamos activated\r\n\t\t\t\tif(scope.selectedWord){\r\n\t\t\t\t\tscope.selectedWord._word.forEach(function (letter) {\r\n\t\t\t\t\t\tdelete scope.table[letter.y][letter.x].actived;\r\n\t\t\t\t\t});\r\n\t\t\t\t} \r\n\r\n\t\t\t\t// se limpia la celda\r\n\t\t\t\tif(scope.selectedCell){\r\n\t\t\t\t\tdelete scope.selectedCell.mainCell;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Actualizamos la palabra y la celda seleccionada\r\n\t\t\t\tscope.prevParent = scope.selectedCell.$parent;\r\n\t\t\t\tscope.selectedWord = item.$parent;\r\n\t\t\t\tscope.selectedCell = item;\r\n\r\n\t\t\t\t// Buscamos la celda, para enfocarse en el input\r\n\t\t\t\telement.find('.c' + item.x + '.r' + item.y + ' input').focus();\r\n\r\n\t\t\t\t// Marcamos la palabra y la celda para que se vean activas\r\n\t\t\t\tscope.selectedCell.mainCell = true;\r\n\t\t\t\titem.$parent._word.forEach(function (letter) { scope.table[letter.y][letter.x].actived = true; });\r\n\t\t\t}; // selectWord()\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Función que se dispara al escribir en los inputs. Permite el cambio de celda\r\n\t\t\t * al escribir\r\n\t\t\t */\r\n\t\t\tscope.changeCell = function () {\r\n\t\t\t\t// Se debe haber seleccionado una celda\r\n\t\t\t\tif(!scope.selectedCell) return;\r\n\r\n\t\t\t\tvar cell = scope.selectedCell, // alias\r\n\t\t\t\t\tnext = false, // siguiente celda\r\n\t\t\t\t\tparent = cell.$parent;\r\n\r\n\t\t\t\t// si el input no tiene nada, volvemos.\r\n\t\t\t\tif(cell.input === '') return; \r\n\r\n\t\t\t\t// Cambia a mayúsculas\r\n\t\t\t\tcell.input = cell.input.toUpperCase();\r\n\r\n\t\t\t\t// solo letras. No espacios\r\n\t\t\t\tif(! cell.input.match(\"^[A-ZÑ]+$\")){\r\n\t\t\t\t\tcell.input = cell.input.slice(0, -1);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// si tiene más de una letra, se borra todo y se deja siempre la última letra\r\n\t\t\t\tif(cell.input.length > 1){ cell.input = cell.input[ cell.input.length - 1 ]; }\r\n\r\n\t\t\t\t// Celdas cruzadas\r\n\t\t\t\tif(cell.cross){\r\n\t\t\t\t\t// Si la celda es cruzada y el padre es igual al padre anterior, es necesario\r\n\t\t\t\t\t// buscar al otro padre y actualizar la misma celda\r\n\t\t\t\t\tif(parent === scope.prevParent){\r\n\t\t\t\t\t\tvar cells = null,\r\n\t\t\t\t\t\t\totherCell = null;\r\n\r\n\t\t\t\t\t\t// El otro padre. Usando filtros anidados\r\n\t\t\t\t\t\tvar otherParent = scope.words.filter(function(word){\r\n\t\t\t\t\t\t\tcells = word._word.filter(function(letter){\r\n\t\t\t\t\t\t\t\treturn letter.x === cell.x && letter.y === cell.y;\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\treturn cells.length && word !== parent;\r\n\t\t\t\t\t\t})[0];\r\n\r\n\t\t\t\t\t\t// Buscamos la celda y la actualizamos\r\n\t\t\t\t\t\totherCell = otherParent._word.filter(function (letter) {\r\n\t\t\t\t\t\t\treturn letter.x === cell.x && letter.y === cell.y;\r\n\t\t\t\t\t\t})[0];\r\n\r\n\t\t\t\t\t\totherCell.input = cell.input;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tparent = scope.prevParent;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// debemos buscar la otra celda cruzada y actualizar su input\r\n\t\t\t\t\tvar crossCell = parent._word.filter(function (letter) {\r\n\t\t\t\t\t\treturn letter.x === cell.x && letter.y === cell.y;\r\n\t\t\t\t\t})[0];\r\n\r\n\t\t\t\t\t// Actualizamos el input\r\n\t\t\t\t\tif(crossCell) crossCell.input = cell.input;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// ===================================================\r\n\t\t\t\t// Próxima celda en base a la actual\r\n\t\t\t\t// ===================================================\r\n\t\t\t\t// Miramos cual será la siguiente celda\r\n\t\t\t\tif(parent.horizontal){\r\n\t\t\t\t\tnext = scope.table[cell.y][cell.x + 1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(parent.vertical){\r\n\t\t\t\t\t// de arriba a abajo\r\n\t\t\t\t\tif(parent.pos[0][1] < parent.pos[1][1]) next = scope.table[cell.y + 1] ? scope.table[cell.y + 1][cell.x] : false;\r\n\t\t\t\t\t// de abajo a arriba\r\n\t\t\t\t\tif(parent.pos[0][1] > parent.pos[1][1]) next = scope.table[cell.y - 1] ? scope.table[cell.y - 1][cell.x] : false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Si la próxima celda no esta vacía\r\n\t\t\t\tif(!next || next.hasOwnProperty('empty')){\r\n\t\t\t\t\t// si es vertical de arriba a abajo\r\n\t\t\t\t\tif(parent.vertical && parent.pos[0][1] > parent.pos[1][1]){\r\n\t\t\t\t\t\t// último elemento, ya que va al revés\r\n\t\t\t\t\t\tnext = scope.table[ parent._word[parent._word.length - 1].y ][ parent._word[parent._word.length - 1].x ];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnext = scope.table[ parent._word[0].y ][ parent._word[0].x ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t// Cambia de celda a la siguiente\r\n\t\t\t\tscope.selectWord(next);\r\n\t\t\t}; // changeCell()\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Verifica si el crucigrama es correcto o no\r\n\t\t\t */\r\n\t\t\tscope.verify = function () {\r\n\t\t\t\t// Contadores \r\n\t\t\t\tvar total = 0,\r\n\t\t\t\t\trightAnswers = 0;\r\n\r\n\t\t\t\t// Empezamos a recorrer todas las palabras y sumando\r\n\t\t\t\tscope.words.forEach(function(word){\r\n\t\t\t\t\t// Total de letras\r\n\t\t\t\t\ttotal += word._word.length; \r\n\r\n\t\t\t\t\t// Contamos las letras correctas\r\n\t\t\t\t\trightAnswers += word._word.filter(function(letter){\r\n\t\t\t\t\t\treturn letter.input === letter.letter;\r\n\t\t\t\t\t}).length;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (total === rightAnswers) {\r\n\t\t\t\t  scope.success = true;\r\n\t\t\t\t  scope.$root.isNextEnabled = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t  scope.failure = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\t// ============================================================================\r\n\t\t\t// IMPORTANTE!!!! IMPIDE EL USO DE LA BARRA ESPACIADORA EN EL CRUCIGRAMA\r\n\t\t\t// ============================================================================\r\n\t\t\telement.bind(\"keyup keypress keydown\", function (e) {\r\n\t\t\t\tif(e.keyCode === 32){\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\r\n\t\t}\r\n\t}; \r\n});\r\n","var lizCrosswordWithLetter = angular.module('lizCrosswordWithLetter', []);\r\n\r\nlizCrosswordWithLetter.directive('crosswordWithLetter', function () {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            options: '=',\r\n            audio:'@',\r\n            description: '@'\r\n        },\r\n        templateUrl: '../views/activities/crossword_with_letter.html',\r\n        link: function (scope, element, attrs) {\r\n            var opt = scope.options; // Alias de opciones\r\n\r\n            // Número de columnas y filas en la tabla\r\n            var cols = 0,\r\n                rows = 0,\r\n                start = 0, // punto inicial usado en words.foreach\r\n                end = 0, // punto final usado en words.foreach\r\n                filtered = null; // Filtrado de palabras\r\n\r\n            scope.table = []; // Tabla de trabajo\r\n            scope.words = opt.words; // Tomamos las palabras desde el controlador\r\n            scope.selectedWord = false; // palabra seleccionada actualmente\r\n            scope.selectedCell = false; // palabra seleccionada actualmente\r\n            scope.prevParent = false; // padre anterior. Usado para las palabras cruzadas en el salto de celda\r\n\r\n            // calificaciones\r\n            scope.success = false;\r\n            scope.failure = false;\r\n\r\n            // ===================================================\r\n            // CONSTRUCCIÓN DE PALABRAS\r\n            // ===================================================\r\n            // Recorremos las palabras para obtener la configuración.\r\n            // Inicialmente, se busca el tamaño del crucigrama\r\n            scope.words.forEach(function (word) {\r\n                // Convertimos las palabras a mayúsculas\r\n                word.word = word.word.toUpperCase();\r\n\r\n                // columnas\r\n                if(word.pos[0][0] > cols) cols = word.pos[0][0];\r\n                if(word.pos[1][0] > cols) cols = word.pos[1][0];\r\n\r\n                // filas\r\n                if(word.pos[0][1] > rows) rows = word.pos[0][1];\r\n                if(word.pos[1][1] > rows) rows = word.pos[1][1];\r\n\r\n                // Creamos el objeto de palabra\r\n                if(word.pos[0][1] === word.pos[1][1]){\r\n                    // horizontal\r\n                    word.horizontal = true;\r\n                    word._word = []\r\n\r\n                    // si x en cada posición es igual, es horizontal\r\n                    for(var i = word.pos[0][0]; i <= word.pos[1][0]; i++){\r\n                        var item = {\r\n                            x: i,\r\n                            y: word.pos[0][1],\r\n                            $parent: word,\r\n                            letter: word.word[i - word.pos[0][0]], // añade la letra de la palabra\r\n                            init_letter: word.init_letter[i - word.pos[0][0]] // añade la letra de la palabra\r\n                        };\r\n\r\n                        // si es la letra inicial, añadimos el número\r\n                        if(i === word.pos[0][0]) item.number = word.number;\r\n                        word._word.push(item);\r\n                    }\r\n\r\n                } else if(word.pos[0][0] === word.pos[1][0]){\r\n                    // vertical\r\n                    word.vertical = true;\r\n                    word._word = [];\r\n\r\n                    // antes que nada, debemos ver desde donde empieza la palabra\r\n                    if(word.pos[0][1] < word.pos[1][1]) {\r\n                        // de arriba a abajo\r\n                        // si y en cada posición es igual, entonces es vertical\r\n                        for(var i = word.pos[0][1]; i <= word.pos[1][1]; i++){\r\n                            var item = {\r\n                                x: word.pos[0][0],\r\n                                y: i,\r\n                                $parent: word,\r\n                                letter: word.word[i - word.pos[0][1]],\r\n                                init_letter:  word.init_letter[i - word.pos[0][1]]\r\n                            };\r\n\r\n                            // si es la letra inicial, añadimos el número\r\n                            if(i === word.pos[0][1]) item.number = word.number;\r\n                            word._word.push(item);\r\n                        }\r\n                    } else if(word.pos[0][1] > word.pos[1][1]) {\r\n                        // De abajo a arriba\r\n                        // Reversa la palabra\r\n                        word.word = word.word.split(\"\").reverse().join(\"\");\r\n                        word.reverse = true; // propiedad para definir que la palabra vertical viene invertida\r\n\r\n                        for(var i = word.pos[1][1]; i <= word.pos[0][1]; i++){\r\n                            var item = {\r\n                                x: word.pos[0][0],\r\n                                y: i,\r\n                                $parent: word,\r\n                                letter: word.word[i - word.pos[1][1]],\r\n                                init_letter: word.init_letter[i - word.pos[1][1]]\r\n                            };\r\n\r\n                            // si es la letra inicial, añadimos el número\r\n                            if(i === word.pos[0][1]) item.number = word.number;\r\n                            word._word.push(item);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            // ===================================================\r\n            // CONSTRUCCIÓN DE TABLA\r\n            // ===================================================\r\n            var temp = null, // Variable temporal\r\n                number = null;\r\n\r\n            for(var y = 0; y <= rows; y++){\r\n                // Añadimos una nueva fila\r\n                scope.table.push([]);\r\n\r\n                // para cada celda\r\n                for(var x = 0; x <= cols; x++){\r\n                    // Buscamos la palabra que coincide con (x,y)\r\n                    filtered = scope.words.filter(function (w) {\r\n                        return ((w.pos[0][0] <= x && w.pos[1][0] >= x)\r\n                        && (w.pos[0][1] <= y && w.pos[1][1] >= y)) ||\r\n                        ((w.pos[1][0] <= x && w.pos[0][0] >= x)\r\n                        && (w.pos[1][1] <= y && w.pos[0][1] >= y));\r\n                    });\r\n\r\n                    // Agrega el nuevo objeto en la tabla\r\n                    if(filtered.length > 0){\r\n                        // Recuperamos la celda idéntica desde las palabras\r\n                        temp = filtered[0]._word.filter(function (w) {\r\n                            return w.x === x && w.y === y;\r\n                        })[0];\r\n\r\n                        // Añadimos el modelo a vincular con cada uno de los inputs\r\n                        temp.$parent._word.forEach(function (letter) { letter.input = ''; });\r\n\r\n                        // Para las celdas que se cruzan, debemos hacer una funcionalidad especial\r\n                        if(filtered.length > 1){\r\n                            temp.cross = true;\r\n                        }\r\n\r\n                    } else {\r\n                        // Si no, es un cuadro vacío\r\n                        temp = {\r\n                            x: x,\r\n                            y: y,\r\n                            empty: true\r\n                        };\r\n                    }\r\n\r\n                    // Añade el objeto\r\n                    scope.table[y].push(temp);\r\n                }\r\n            }\r\n\r\n\r\n            // Añadimos los números a las palabras que empiezan dentro de otra palabra\r\n            var iX = 0,\r\n                iY = 0;\r\n\r\n            scope.words.forEach(function(word){\r\n                iX = word.pos[0][0];\r\n                iY = word.pos[0][1];\r\n\r\n                // si no tiene número, se agrega\r\n                if(! scope.table[iY][iX].hasOwnProperty('number')) {\r\n                    scope.table[iY][iX].number = word.number;\r\n                }\r\n            });\r\n\r\n\r\n            /**\r\n             * Selecciona la palabra y la celda, para que el estudiante pueda empezar a\r\n             * escribir la palabra\r\n             *\r\n             * @param {Object} item celda seleccionada en el crucigrama\r\n             */\r\n            scope.selectWord = function (item) {\r\n                // si no es parte de una palabra, cancelamos inmediatamente\r\n                if(item.empty) return;\r\n\r\n                // si existe una palabra seleccionada previamente, limpiamos activated\r\n                if(scope.selectedWord){\r\n                    scope.selectedWord._word.forEach(function (letter) {\r\n                        delete scope.table[letter.y][letter.x].actived;\r\n                    });\r\n                }\r\n\r\n                // se limpia la celda\r\n                if(scope.selectedCell){\r\n                    delete scope.selectedCell.mainCell;\r\n                }\r\n\r\n                // Actualizamos la palabra y la celda seleccionada\r\n                scope.prevParent = scope.selectedCell.$parent;\r\n                scope.selectedWord = item.$parent;\r\n                scope.selectedCell = item;\r\n\r\n                // Buscamos la celda, para enfocarse en el input\r\n                element.find('.c' + item.x + '.r' + item.y + ' input').focus();\r\n\r\n                // Marcamos la palabra y la celda para que se vean activas\r\n                scope.selectedCell.mainCell = true;\r\n                item.$parent._word.forEach(function (letter) { scope.table[letter.y][letter.x].actived = true; });\r\n            }; // selectWord()\r\n\r\n\r\n            /**\r\n             * Función que se dispara al escribir en los inputs. Permite el cambio de celda\r\n             * al escribir\r\n             */\r\n            scope.changeCell = function () {\r\n                // Se debe haber seleccionado una celda\r\n                if(!scope.selectedCell) return;\r\n\r\n                //08 08 2014 Maria Giraldo -Validar que escriba una sola letra\r\n\r\n                var cell = scope.selectedCell, // alias\r\n                    next = false, // siguiente celda\r\n                    parent = cell.$parent;\r\n\r\n                /*\r\n\r\n\r\n                 // si el input no tiene nada, volvemos.\r\n                 if(cell.input === '') return;\r\n                 // solo letras. No espacios\r\n                 if(! cell.input.match(\"^[A-ZÑ]+$ \")){\r\n                 cell.input = cell.input.slice(0, -1);\r\n                 return;\r\n                 }\r\n                */\r\n\r\n\r\n                // Cambia a mayúsculas\r\n                cell.input = cell.input.toUpperCase();\r\n               \r\n                // si tiene más de una letra, se borra todo y se deja siempre la última letra\r\n                if(cell.input.length > 1){\r\n                    cell.input = cell.input[ cell.input.length - 1 ];\r\n                }\r\n\r\n\r\n                // Celdas cruzadas\r\n                if(cell.cross){\r\n                    // Si la celda es cruzada y el padre es igual al padre anterior, es necesario\r\n                    // buscar al otro padre y actualizar la misma celda\r\n                    if(parent === scope.prevParent){\r\n                        var cells = null,\r\n                            otherCell = null;\r\n\r\n                        // El otro padre. Usando filtros anidados\r\n                        var otherParent = scope.words.filter(function(word){\r\n                            cells = word._word.filter(function(letter){\r\n                                return letter.x === cell.x && letter.y === cell.y;\r\n                            });\r\n\r\n                            return cells.length && word !== parent;\r\n                        })[0];\r\n\r\n                        // Buscamos la celda y la actualizamos\r\n                        otherCell = otherParent._word.filter(function (letter) {\r\n                            return letter.x === cell.x && letter.y === cell.y;\r\n                        })[0];\r\n\r\n                        otherCell.input = cell.input;\r\n                    } else {\r\n                        parent = scope.prevParent;\r\n                    }\r\n\r\n                    // debemos buscar la otra celda cruzada y actualizar su input\r\n                    var crossCell = parent._word.filter(function (letter) {\r\n                        return letter.x === cell.x && letter.y === cell.y;\r\n                    })[0];\r\n\r\n                    // Actualizamos el input\r\n                    if(crossCell) crossCell.input = cell.input;\r\n                }\r\n\r\n                // ===================================================\r\n                // Próxima celda en base a la actual\r\n                // ===================================================\r\n                // Miramos cual será la siguiente celda\r\n                if(parent.horizontal){\r\n                    next = scope.table[cell.y][cell.x + 1];\r\n                }\r\n\r\n                if(parent.vertical){\r\n                    // de arriba a abajo\r\n                    if(parent.pos[0][1] < parent.pos[1][1]) next = scope.table[cell.y + 1] ? scope.table[cell.y + 1][cell.x] : false;\r\n                    // de abajo a arriba\r\n                    if(parent.pos[0][1] > parent.pos[1][1]) next = scope.table[cell.y - 1] ? scope.table[cell.y - 1][cell.x] : false;\r\n                }\r\n\r\n                // Si la próxima celda no esta vacía\r\n                if(!next || next.hasOwnProperty('empty')){\r\n                    // si es vertical de arriba a abajo\r\n                    if(parent.vertical && parent.pos[0][1] > parent.pos[1][1]){\r\n                        // último elemento, ya que va al revés\r\n                        next = scope.table[ parent._word[parent._word.length - 1].y ][ parent._word[parent._word.length - 1].x ];\r\n                    } else {\r\n                        next = scope.table[ parent._word[0].y ][ parent._word[0].x ];\r\n                    }\r\n                }\r\n                scope.selectWord(next);\r\n            }; // changeCell()\r\n\r\n\r\n            /**\r\n             * Verifica si el crucigrama es correcto o no\r\n             */\r\n            scope.verify = function () {\r\n                // Contadores\r\n                var total = 0,\r\n                    rightAnswers = 0;\r\n\r\n                // Empezamos a recorrer todas las palabras y sumando\r\n                scope.words.forEach(function(word){\r\n                    // Total de letras\r\n                    total += word._word.length;\r\n\r\n                    // Contamos las letras correctas\r\n                    rightAnswers += word._word.filter(function(letter){\r\n\r\n                        //08 08 2014 -  Maria Giraldo, se añade validación de letras estáticas\r\n                        if (letter.init_letter != '' && letter.init_letter === letter.letter){\r\n                            return letter.letter === letter.init_letter;\r\n                        }\r\n\r\n                       // return letter.input === letter.init_letter;\r\n                        return letter.input === letter.letter;\r\n                    }).length;\r\n\r\n                });\r\n\r\n                // se resta 1 porque se desborda\r\n                total = total - 1;\r\n\r\n                if (total === rightAnswers) {\r\n                    scope.success = true;\r\n                    scope.$root.isNextEnabled = true;\r\n                }\r\n                else {\r\n                    scope.failure = true;\r\n                }\r\n            }\r\n\r\n\r\n            scope.onClick = function() {\r\n                console.log(\"click\");\r\n                var cell = scope.selectedCell, // alias\r\n                    next = false, // siguiente celda\r\n                    parent = cell.$parent;\r\n\r\n                /*\r\n                 // si el input no tiene nada, volvemos.\r\n                 if(cell.input === '') return;\r\n                 // solo letras. No espacios\r\n                 if(! cell.input.match(\"^[A-ZÑ]+$ \")){\r\n                 cell.input = cell.input.slice(0, -1);\r\n                 return;\r\n                 }\r\n                 */\r\n\r\n                // Cambia a mayúsculas\r\n                cell.input = cell.input.toUpperCase();\r\n\r\n                console.log(\"aca \");\r\n                console.log(cell);\r\n\r\n\r\n\r\n            }\r\n\r\n            // ============================================================================\r\n            // IMPORTANTE!!!! IMPIDE EL USO DE LA BARRA ESPACIADORA EN EL CRUCIGRAMA\r\n            // ============================================================================\r\n            element.bind(\"keyup keypress keydown\", function (e) {\r\n                if(e.keyCode === 32){\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n\r\n\r\n\r\n        }\r\n    };\r\n});\r\n","var lizDifferences = angular.module('lizDifferences', []);\n\nlizDifferences.directive('differences', function  () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\taudio: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/differences.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\tpass = false; // Used to evaluate if the inputs are right\n\n\t\t\tscope.images = opt.images;\n\t\t\tscope.inputs = [];\n\t\t\tscope.passes = false; // Define si la actividad cumple o no\n\n\t\t\t// Activa el botón de siguiente desde el inicio\n\t\t\tscope.$root.isNextEnabled = true;\n\n\t\t\t// Constructor de inputs\n\t\t\tfor (var i=0; i < opt.inputs; i++) {\n\t\t\t\tscope.inputs.push({\n\t\t\t\t\tinput: ''\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tscope.$root.beforeGoNext = function () {\n\t\t\t\tif(pass){\n\t\t\t\t\tscope.success = true;\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tscope.failure = true;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Verifica el fin de la actividad\n\t\t\t */\n\t\t\tscope.verify = function () {\n\t\t\t\t// Contamos los elementos que cumplen las condiciones\n\t\t\t\tvar matches = scope.inputs.filter(function(item){\n\t\t\t\t\treturn item.input.toLowerCase().match(/([bcdfghjklmnñpqrstvwxyz])/) &&\n\t\t\t\t\t\titem.input.toLowerCase().match(/([aeiou])/);\n\t\t\t\t}).length;\n\n\t\t\t\t// Comparamos el número con el total de elementos\n\t\t\t\tif(matches === scope.inputs.length){\n\t\t\t\t\tpass = true;\n\t\t\t\t} else {\n\t\t\t\t\tpass = false;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t\n\t\t}\n\t}; \n});\n","var lizDragDropMark = angular.module('lizDragDropMark', []);\n\n// Knockout Pairs Factory\nlizDragDropMark.factory('dragDropMarkActivity', function ($rootScope) {\n\n\tvar dragDropMarkActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tdragDropMarkActivity.create = function (options) {\n\t\treturn new dragDropMarkActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\toptions\t\t\t\t\t\tOpciones a utilizar.\n\t * @param {Array}\t\toptions.items\t\t\t\tElementos donde se suelta la marca. Deben tener la propiedad bool \"answer\"\n\t * @param {integer}\t\toptions.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\toptions.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {function}\toptions.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\toptions.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\tdragDropMarkActivity._ViewModel = function (options) {\n\t\tvar self = this,\n\t\t\t\trightAnswers = 0,\n\t\t\t\tchances = typeof options.chances !== \"undefined\" ? options.chances : options.items.length,\n\t\t\t\tminRightAnswers = options.minRightAnswers,\n\t\t\t\tmaximumElements = 1;\n\n\t\t// ordena el array de forma aleatoria usando el algoritmo de Fisher-Yates\n\t\tself.shuffleArray = function(array) {\n\t\t\tfor (var i = array.length - 1; i > 0; i--) {\n\t\t\t\tvar j = Math.floor(Math.random() * (i + 1));\n\t\t\t\tvar temp = array[i];\n\t\t\t\tarray[i] = array[j];\n\t\t\t\tarray[j] = temp;\n\t\t\t}\n\t\t\treturn array;\n\t\t};\n\n\t\tvar number = 1\n\t\tself.items = ko.observableArray(options.items);\n\n\t\t// Añadimos a cada item un observableArray para que puedan recibir las marcas\n\t\tko.utils.arrayForEach(self.items(), function(item,index){\n\t\t\titem._target = ko.observableArray();\n\t\t\titem._target._id = item.answer; // para poder identificar si esta bueno o malo\n\n\t\t\t// Propiedades por defecto\n\t\t\titem.resource = item.hasOwnProperty('resource') ? item.resource : false;\n\t\t\titem.alt = item.hasOwnProperty('alt') ? item.alt : '';\n\t\t\titem.text = item.hasOwnProperty('text') ? item.text : false;\n\t\t\titem.question = item.hasOwnProperty('question') ? item.question : false;\n\t\t\titem.number = item.hasOwnProperty('question') ? number : false;\n\t\t\tnumber ++\n\t\t\tconsole.log(item.number);\n\t\t});\n\n\t\t// Carpeta de recursos desde angular\n\t\tself.resources = $rootScope.resources;\n\n\t\t// audio\n\t\tself.audio = ko.observable(options.audio);\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\t\tself.failure = ko.observable(false);\n\t\tself.success = ko.observable(false);\n\n\t\t// Marcas\n\t\tself.rightMark = ko.observable({ right: true });\n\t\tself.wrongMark = ko.observable({ right: false });\n\n\n\t\t/**\n\t\t * Reproduce el audio de la instrucción.\n\t\t */\n\t\tself.playAudio = function () {\n\t\t\t$('#audio-instruction')[0].play();\n\t\t};\n\n\n\t\t/**\n\t\t * Define si el target esta lleno utilizando self.maximumElements\n\t\t */\n\t\tself.isContainerFull = function (parent) {\n\t\t\treturn parent().length < maximumElements;\n\t\t};\n\n\n\t\t/**\n\t\t * Función que se ejecuta al soltar los elementos\n\t\t */\n\t\tself.verifyAnswer = function (arg) {\n\t\t\tvar item = arg.item,\n\t\t\ttarget = arg.targetParent;\n\n\t\t\tif(target._id === item.right){\n\t\t\t\t// respuesta correcta\n\t\t\t\tself.rightAnswer(item);\n\t\t\t\trightAnswers++;\n\n\t\t\t\tif(typeof options.rightAnswerCallback !== \"undefined\") options.rightAnswerCallback(item);\n\t\t\t} else {\n\t\t\t\t// respuesta incorrecta\n\t\t\t\tself.wrongAnswer(item);\n\t\t\t}\n\n\t\t\tchances--;\n\n\t\t\t// Final de la actividad\n\t\t\tif(chances === 0){\n\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t// éxito\n\t\t\t\t\tself.success(true);\n\n\t\t\t\t\t$rootScope.isNextEnabled = true; // Activamos la siguiente ruta en angular\n\n\t\t\t\t\tif(typeof options.successCallback !== \"undefined\") options.successCallback();\n\n\t\t\t\t} else {\n\t\t\t\t\t// Fracaso\n\t\t\t\t\tself.failure(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con dragDropMarkActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\tdragDropMarkActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn dragDropMarkActivity;\n\n});\n\n\nlizDragDropMark.directive('dragDropMark', function  (dragDropMarkActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\taudio: '@',\n\t\t\tcustomClass: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/drag_drop_mark.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\t// Añadimos el audio a options\n\t\t\tscope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n\n\n\t\t\t// Corremos la aplicación\n\t\t\tdragDropMarkActivity.run(dragDropMarkActivity.create(scope.options));\n\t\t}\n\t}; \n});\n","/**\n * Actividad donde los elementos pueden ser arrastrados en múltiples grupos\n */\nvar lizDragDropMultiples = angular.module('lizDragDropMultiples', []);\n\nlizDragDropMultiples.factory('dragDropMultiplesActivity', function ($rootScope) {\n\n  var dragDropMultiplesActivity = {};\n\n  /**\n   * Crea el ViewModel\n   */\n  dragDropMultiplesActivity.create = function (options) {\n    return new dragDropMultiplesActivity._ViewModel(options);\n  }\n\n  /**\n   * Genera el ViewModel de las parejas con sus funcionalidades\n   *\n   * Recibe un objeto con las siguientes propiedades\n   *\n   * @param {object}    options            Opciones a utilizar.\n   * @param {Array}    options.groups        Grupos definidos. Cada grupo es un objeto que posee las siguientes propiedades\n   *\n   *  title: Título del bloque donde se sueltan los objetos\n   *  items: elementos pertenecientes al grupo\n   *\n   * @param {integer}    options.chances        Número de posibilidades que tiene el usuario de hacer la actividad\n   * @param {integer}    options.minRightAnswers    Número mínimo de respuestas correctas\n   * @param {function}  options.successCallback    Función que se llama cuando se termina la actividad de forma satisfactoria\n   * @param {function}  options.rightAnswerCallback  Función que se llama cuando la respuesta es correcta\n   *\n   */\n  dragDropMultiplesActivity._ViewModel = function (options) {\n    var self = this;\n\n    var Group = function (options) {\n      this._id = options._id;\n      this.title = options.title;\n      this.resource = options.resource ? options.resource : false;\n      this.alt = options.alt ? options.alt : false;\n      this.items = ko.observableArray();\n      this.items._id = this._id;\n    }\n\n    var chances = options.chances,\n      rightAnswers = 0,\n      minRightAnswers = options.minRightAnswers;\n      noSuffleArray = options.noSuffleArray;//esta opcion desactiva el orden aleatorio de los items ::: ejemplo esp304 act 5 :::\n      self.itemsStyle = options.itemsStyle ? options.itemsStyle : '';\n\n    // ordena el array de forma aleatoria usando el algoritmo de Fisher-Yates\n    self.shuffleArray = function (array) {\n\n      if(!noSuffleArray){//es importante para q las palabras queden el el orden deseado \n        for (var i = array.length - 1; i > 0; i--) {\n          var j = Math.floor(Math.random() * (i + 1));\n          var temp = array[i];\n          array[i] = array[j];\n          array[j] = temp;\n        }\n      }\n      return array;\n    };\n\n    // Conjunto total de elementos\n    self.items = ko.observableArray();\n    self.groups = ko.observableArray(); \n\n    self.resources = $rootScope.resources;\n\n    // audio\n    self.audio = ko.observable(options.audio);\n\n    // Triggers que se activan cuando la respuesta es correcta/incorrecta\n    self.rightAnswer = ko.observable();\n    self.wrongAnswer = ko.observable();\n\n    // Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n    self.failure = ko.observable(false);\n    self.success = ko.observable(false);\n\n    // Recorremos cada grupo y cada uno de los elementos, para agregarlos a items\n    ko.utils.arrayForEach(options.groups, function (group) {\n      // Creamos un nuevo grupo en base a la plantilla creada\n     /* group._id = (Math.random() + 1).toString(36).substring(7);*/\n      group._id = group.title;\n      self.groups.push(new Group(group));\n\n      ko.utils.arrayForEach(group.items, function (item) {\n        item._id = item.groupId ? item.groupId : group._id;\n        item.title = item.title ? item.title : false;\n        self.items.push(item);\n      });\n    });\n\n\n    // Organizamos los elementos de forma aleatoria\n    self.items(self.shuffleArray(self.items()));\n\n    // Definimos los estilos de cada elemento\n    for (var i = 0; i < self.items().length; i++) {\n      var width = (100 / self.items().length);\n      self.items()[i]._style = \"width: \" + width + '%; ';\n      self.items()[i]._style += \"left: \" + ( i * width ) + '%';\n      self.items()[i]._style += ';' + self.itemsStyle;\n    }\n    ;\n\n    // Después del constructor, definimos el número de intentos\n    chances = options.chances ? options.chances : self.items().length;\n\n\n    /**\n     * Reproduce el audio de la instrucción.\n     */\n    self.playAudio = function () {\n      $('#audio-instruction')[0].play();\n    };\n\n\n    /**\n     * Función que se ejecuta cada vez que se suelta un elemento\n     */\n    self.verify = function (arg) {\n      var item = arg.item,\n        targetParent = arg.targetParent;\n\n      if (targetParent._id === item._id || ( item.groupId && item.groupId.indexOf(targetParent._id) > -1 )  ) {\n        // respuesta correcta\n        self.rightAnswer(item);\n        rightAnswers++;\n\n        // Reproducimos el audio\n        if (targetParent.resource) {\n          $('#audio-' + targetParent._id)[0].play();\n        }\n\n        if (typeof options.rightAnswerCallback !== \"undefined\") options.rightAnswerCallback(item);\n      } else {\n        // respuesta incorrecta\n        self.wrongAnswer(item);\n        arg.cancelDrop = true;\n      }\n\n      // reducimos las posibilidades\n      chances--;\n\n      // Fin de la actividad\n      if (chances === 0 || self.items().length === 1) {\n        if (rightAnswers >= minRightAnswers) {\n          // éxito\n          self.success(true);\n\n          // Activamos el siguiente\n          $rootScope.isNextEnabled = true;\n\n          if (typeof options.rightAnswerCallback !== \"undefined\") options.rightAnswerCallback(item);\n        } else {\n          self.failure(true);\n        }\n      }\n\n    }\n\n    /**\n     * Propiedad Computed para el tamaño de los grupos\n     */\n    self.getGroupWidth = ko.computed(function () {\n      return \"width: \" + (100 / self.groups().length) + \"%\";\n    });\n\n  };\n\n  /**\n   * Inicializa la instancia del ViewModel creado con dragDropMultiplesActivity.create\n   *\n   * @param {object} instance Intancia del VM de knockout\n   */\n  dragDropMultiplesActivity.run = function (instance) {\n    ko.cleanNode($('#main-container')[0]);\n    ko.bindingHandlers.sortable.beforeMove = instance.verify;\n    ko.applyBindings(instance, $('#main-container')[0]);\n  };\n\n  return dragDropMultiplesActivity;\n});\n\nlizDragDropMultiples.directive('dragDropMultiples', function (dragDropMultiplesActivity) {\n  return {\n    restrict: 'E',\n    scope: {\n      options: '=',\n      audio: '@',\n      description: '@'\n    },\n    transclude: true,\n    templateUrl: '../views/activities/drag_drop_multiples.html',\n    link: function postLink(scope, element, attrs) {\n      // Definimos los contenedores y los elementos transcluídos\n      var itemChildren = element.find('.transcluded item').children(),\n        itemContainer = element.find('.item');\n\n      // Se añade cada uno de los hijos a la plantilla en la posición adecuada\n      angular.forEach(itemChildren, function (elem) {\n        itemContainer.append(elem);\n      });\n\n      // Se elimina el elemento transcluded del DOM\n      element.find('.transcluded').remove();\n\n      // Añadimos el audio a options\n      scope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n\n      // Iniciar Knockout\n      dragDropMultiplesActivity.run(dragDropMultiplesActivity.create(scope.options));\n    }\n  };\n});\n","/**\n * Actividad donde los elementos pueden ser arrastrados en múltiples grupos\n */\nvar lizDragDropMultiplesDiff = angular.module('lizDragDropMultiplesDiff', []);\n\nlizDragDropMultiplesDiff.factory('dragDropMultiplesDiffActivity', function ($rootScope) {\n\n\tvar dragDropMultiplesDiffActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tdragDropMultiplesDiffActivity.create = function (options) {\n\t\treturn new dragDropMultiplesDiffActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\toptions\t\t\t\t\t\tOpciones a utilizar.\n\t * @param {Array}\t\toptions.groups\t\t\t\tGrupos definidos. Cada grupo es un objeto que posee las siguientes propiedades\n\t *\n\t *\ttitle: Título del bloque donde se sueltan los objetos\n\t *\titems: elementos pertenecientes al grupo\t\n\t *\n\t * @param {integer}\t\toptions.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\toptions.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {function}\toptions.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\toptions.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\tdragDropMultiplesDiffActivity._ViewModel = function (options) {\n\t\tvar self = this;\n\t\tvar cc = options.customClass;\n\tvar Group = function (options) {\n\n\t\tthis.title = options.title;\n\t\tthis.resource = options.resource;\n\t\tthis.alt = options.alt;\n\t\tthis.items = ko.observableArray();\n\t\tthis.items._id = options.id;\n\t\tthis.customClass = (cc) ? cc : \"\";\n\t}\n\n\t// ordena el array de forma aleatoria usando el algoritmo de Fisher-Yates\n\tself.shuffleArray = function(array) {\n\t\tfor (var i = array.length - 1; i > 0; i--) {\n\t\t\tvar j = Math.floor(Math.random() * (i + 1));\n\t\t\tvar temp = array[i];\n\t\t\tarray[i] = array[j];\n\t\t\tarray[j] = temp;\n\t\t}\n\t\treturn array;\n\t};\n\n\trightAnswers = 0,\n\tminRightAnswers = options.minRightAnswers;\n\n\tself.hasCountdown = (options.hasCountdown) ? true : false;\n\tself.countdownTime = (options.countdownTime) ? options.countdownTime : \"\";\n\n\t// Conjunto total de elementos\n\tself.items = ko.observableArray();\n\tself.groups = ko.observableArray();\n\n\tself.resources = $rootScope.resources;\n\n\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\tself.rightAnswer = ko.observable();\n\tself.wrongAnswer = ko.observable();\n\n\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\tself.failure = ko.observable(false);\n\tself.success = ko.observable(false);\n\n\t// Recorremos cada grupo y cada uno de los elementos, para agregarlos a items\n\tko.utils.arrayForEach(options.groups, function (group) {\n\t\t// Creamos un nuevo grupo en base a la plantilla creada\n\t\tself.groups.push(new Group(group));\n\n\t\tko.utils.arrayForEach(group.items, function (item) {\n\t\t\titem._id = group.id;\n\t\t\titem.htmlId = item.resource;\n\t\t\titem.chances = options.chancesPerItem-1;\n\t\t\tself.items.push(item);\n\t\t});\n\t});\n\n\t// Organizamos los elementos de forma aleatoria\n\tself.items( self.shuffleArray( self.items()  )  );\n\n\t// Definimos los estilos de cada elemento\n\tfor(var i = 0; i < self.items().length; i++){\n\t\tvar width = (100 / self.items().length);\n\t\tself.items()[i]._style = \"width: \" + width + '%; ';\n\t\tself.items()[i]._style += \"left: \" + ( i * width ) + '%';\n\t};\n\n\tself.playSound = function () {\n\t\t$(\"#audio-instruction\").get(0).play();\n\t};\n\n\t// Después del constructor, definimos el número de intentos\n\t//chances = options.chances ? options.chances : self.items().length; \n\n\t/**\n\t * Función que se ejecuta cada vez que se suelta un elemento\n\t */\n\tvar counter = 0;\n\tvar numItems = self.items().length;\n\tself.verify = function (arg) {\n\t\tvar item = arg.item,\n\t\ttargetParent = arg.targetParent;\n\n\t\tif(targetParent._id === item._id){\n\t\t\t// respuesta correcta\n\t\t\tself.rightAnswer(item);\n\t\t\trightAnswers++;\n\t\t\t$(\"#\" + item.htmlId).attr(\"style\", \"\");\n\t\t\t/*// Reproducimos el audio\n\t\t\t$('#audio-' + targetParent._id)[0].play();*/\n\n\t\t\tnumItems--;\n\t\t\tif(typeof options.rightAnswerCallback !== \"undefined\") options.rightAnswerCallback(item);\n\t\t} else {\n\t\t\t// respuesta incorrecta\n\t\t\tself.wrongAnswer(item);\n\t\t\targ.cancelDrop = true;\n\t\t\t// reducimos las posibilidades\n\t\t\tif(item.chances === 0){\n\t\t\t\t$(\"#\" + item.htmlId).hide(200);\n\t\t\t\tnumItems--;\n        \t}else{item.chances--;}\n\t\t}\n\n\t\t// Fin de la actividad\n\t\tif(0 === numItems){\n\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t// éxito\n\t\t\t\tself.success(true);\n\n\t\t\t\t// Activamos el siguiente\n\t\t\t\t$rootScope.isNextEnabled = true;\n\n\t\t\t\tif(typeof options.rightAnswerCallback !== \"undefined\") options.rightAnswerCallback(item);\n\t\t\t} else {\n\t\t\t\tself.failure(true);\n\t\t\t}\n\t\t}\n\n\t};\n\n\tself.countDown = ko.observable();\n\n\tko.bindingHandlers.timer = {\n\n\t    update: function (element, valueAccessor) {\n\n\t        // retrieve the value from the span\n\t        var sec = $(element).text();\n\t        var timer = setInterval(function() { \n\n\t            $(element).text(--sec);\n\t            if (sec == 0) {\n\t                if(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t// éxito\n\t\t\t\t\t\tself.success(true);\n\n\t\t\t\t\t\t// Activamos el siguiente\n\t\t\t\t\t\t$rootScope.isNextEnabled = true;\n\n\t\t\t\t\t\tif(typeof options.rightAnswerCallback !== \"undefined\") options.rightAnswerCallback(item);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.failure(true);\n\t\t\t\t\t}\n\t\t\t\t\tclearInterval(timer);\t\n\t            }\n\n\t            if (true === self.success() || true === self.failure()) {\n\t            \tclearInterval(timer);\n\t            }\n\t        }, 1000);\n\t    }\n\t};\n\n\t/**\n\t * Propiedad Computed para el tamaño de los grupos\n\t */\n\tself.getGroupWidth = ko.computed(function () {\n\t\treturn \"width: \" + (100 / self.groups().length) + \"%\";\n\t});\n\n};\n\n/**\n * Inicializa la instancia del ViewModel creado con dragDropMultiplesActivity.create\n *\n * @param {object} instance Intancia del VM de knockout\n */\ndragDropMultiplesDiffActivity.run = function (instance) {\n\tko.cleanNode($('#main-container')[0]);\n\tko.bindingHandlers.sortable.beforeMove = instance.verify;\n\tko.applyBindings(instance, $('#main-container')[0]);\n};\n\nreturn dragDropMultiplesDiffActivity;\n});\n\n\nlizDragDropMultiplesDiff.directive('dragDropMultiplesDiff', function  (dragDropMultiplesDiffActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio: '@'\n\t\t},\n\t\ttransclude: true,\n\t\ttemplateUrl: '../views/activities/drag_drop_multiples_diff.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\t// Definimos los contenedores y los elementos transcluídos\n\t\t\tvar itemChildren = element.find('.transcluded item').children(),\n\t\t\titemContainer = element.find('.item');\n\n\t\t\t// Se añade cada uno de los hijos a la plantilla en la posición adecuada\n\t\t\tangular.forEach(itemChildren, function (elem) { itemContainer.append(elem); });\n\n\t\t\t// Se elimina el elemento transcluded del DOM\n\t\t\telement.find('.transcluded').remove();\n\n\t\t\t// Iniciar Knockout\n\t\t\tdragDropMultiplesDiffActivity.run(dragDropMultiplesDiffActivity.create(scope.options));\n\t\t}\n\t}; \n});\n","/**\n * Actividad donde los elementos pueden ser arrastrados en múltiples grupos\n */\nvar lizDragDropMultiplesPositions = angular.module('lizDragDropMultiplesPositions', []);\n\nlizDragDropMultiplesPositions.factory('dragDropMultiplesPositionsActivity', function ($rootScope) {\n\n  var dragDropMultiplesPositionsActivity = {};\n\n  /**\n   * Crea el ViewModel\n   */\n  dragDropMultiplesPositionsActivity.create = function (options) {\n    return new dragDropMultiplesPositionsActivity._ViewModel(options);\n  }\n\n  /**\n   * Genera el ViewModel de las parejas con sus funcionalidades\n   *\n   * Recibe un objeto con las siguientes propiedades\n   *\n   * @param {object}    options            Opciones a utilizar.\n   * @param {Array}    options.groups        Grupos definidos. Cada grupo es un objeto que posee las siguientes propiedades\n   *\n   *  title: Título del bloque donde se sueltan los objetos\n   *  items: elementos pertenecientes al grupo\n   *\n   * @param {integer}    options.chances        Número de posibilidades que tiene el usuario de hacer la actividad\n   * @param {integer}    options.minRightAnswers    Número mínimo de respuestas correctas\n   * @param {function}  options.successCallback    Función que se llama cuando se termina la actividad de forma satisfactoria\n   * @param {function}  options.rightAnswerCallback  Función que se llama cuando la respuesta es correcta\n   *\n   */\n  dragDropMultiplesPositionsActivity._ViewModel = function (options) {\n    var self = this;\n\n    var Group = function (options) {\n      this._id = options.title; /*options.groupId ? options.groupId : options._id;*/\n      this.title = options.title;\n      this.w = options.w;\n      this.h = options.h;\n      this.t = options.t;\n      this.l = options.l;\n      this.resource = options.resource ? options.resource : false;\n      this.alt = options.alt ? options.alt : false;\n      this.items = ko.observableArray();\n      this.items._id = this._id;\n    }\n\n    // ordena el array de forma aleatoria usando el algoritmo de Fisher-Yates\n    \n    self.shuffleArray = function (array) {\n      if (self.randomitems === true){\n        for (var i = array.length - 1; i > 0; i--) {\n          var j = Math.floor(Math.random() * (i + 1));\n          var temp = array[i];\n          array[i] = array[j];\n          array[j] = temp;\n        }\n        return array;\n      };\n      return array;\n    };\n\n    var chances = options.chances,\n      rightAnswers = 0,\n      minRightAnswers = options.minRightAnswers;\n      self.canvas = options.canvas; // La imagen en sí\n      self.canvasAlt = options.canvasAlt; // texto alternativo de la imagen pricipal\n      self.canvasContainerStyle = options.canvasContainerStyle;//estilos del contenedor de la imagen principal \n      self.randomitems = options.randomitems  //ordenar aleatoreamente el array de items\n\n    // Conjunto total de elementos\n    self.items = ko.observableArray();\n    self.groups = ko.observableArray();\n\n    self.resources = $rootScope.resources;\n\n    // audio\n    self.audio = ko.observable(options.audio);\n\n    // Triggers que se activan cuando la respuesta es correcta/incorrecta\n    self.rightAnswer = ko.observable();\n    self.wrongAnswer = ko.observable();\n\n    // Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n    self.failure = ko.observable(false);\n    self.success = ko.observable(false);\n\n    // Recorremos cada grupo y cada uno de los elementos, para agregarlos a items\n    ko.utils.arrayForEach(options.groups, function (group) {\n      // Creamos un nuevo grupo en base a la plantilla creada\n      group._id = group.title /*(Math.random() + 1).toString(36).substring(7);*/\n      self.groups.push(new Group(group));\n\n      ko.utils.arrayForEach(group.items, function (item) {\n        /*item._id = group._id;*/\n        item._id = item.groupId ? item.groupId : group._id;\n        self.items.push(item);\n      });\n    });\n\n\n    // Organizamos los elementos de forma aleatoria\n    self.items(self.shuffleArray(self.items()));\n\n    // Definimos los estilos de cada elemento\n    for (var i = 0; i < self.items().length; i++) {\n      var width = (100 / self.items().length);\n      self.items()[i]._style = \"width: \" + width + '%; ';\n      self.items()[i]._style += \"left: \" + ( i * width ) + '%';\n    }\n    ;\n\n    // Después del constructor, definimos el número de intentos\n    chances = options.chances ? options.chances : self.items().length;\n\n\n    /**\n     * Reproduce el audio de la instrucción.\n     */\n    self.playAudio = function () {\n      $('#audio-instruction')[0].play();\n    };\n\n\n    /**\n     * Función que se ejecuta cada vez que se suelta un elemento\n     */\n    self.verify = function (arg) {\n\n      var item = arg.item,\n        targetParent = arg.targetParent;\n        \n      if (targetParent._id === item._id || item._id.indexOf(targetParent._id) > -1){\n        // respuesta correcta\n        self.rightAnswer(item);\n        rightAnswers++;\n\n        // Reproducimos el audio\n        if (targetParent.resource) {\n          $('#audio-' + targetParent._id)[0].play();\n        }\n\n        if (typeof options.rightAnswerCallback !== \"undefined\") options.rightAnswerCallback(item);\n      } else {\n        // respuesta incorrecta\n        self.wrongAnswer(item);\n        arg.cancelDrop = true;\n      }\n\n      // reducimos las posibilidades\n      chances--;\n\n      // Fin de la actividad\n      if (chances === 0 || self.items().length === 1) {\n        if (rightAnswers >= minRightAnswers) {\n          // éxito\n          self.success(true);\n\n          // Activamos el siguiente\n          $rootScope.isNextEnabled = true;\n\n          if (typeof options.rightAnswerCallback !== \"undefined\") options.rightAnswerCallback(item);\n        } else {\n          self.failure(true);\n        }\n      }\n\n    }\n\n    /**\n     * Propiedad Computed para el tamaño de los grupos\n     */\n   self.getTargetsStyles = function (item) {\n      console.log(item);\n      var styles = '';\n      /*return \"width: \" + (100 / self.groups().length) + \"%\";*/\n\n      styles += 'width: ' + item.w + '%;';\n      styles += 'height: ' + item.h + '%;';\n      styles += 'top: ' + item.t + '%;';\n      styles += 'left: ' + item.l + '%;';\n\n      return styles;\n    };\n\n  };\n\n  /**\n   * Inicializa la instancia del ViewModel creado con dragDropMultiplesPositionsActivity.create\n   *\n   * @param {object} instance Intancia del VM de knockout\n   */\n  dragDropMultiplesPositionsActivity.run = function (instance) {\n    ko.cleanNode($('#main-container')[0]);\n    ko.bindingHandlers.sortable.beforeMove = instance.verify;\n    ko.applyBindings(instance, $('#main-container')[0]);\n  };\n\n  return dragDropMultiplesPositionsActivity;\n});\n\nlizDragDropMultiplesPositions.directive('dragDropMultiplesPositions', function (dragDropMultiplesPositionsActivity) {\n  return {\n    restrict: 'E',\n    scope: {\n      options: '=',\n      audio: '@',\n      description: '@'\n    },\n    transclude: true,\n    templateUrl: '../views/activities/drag_drop_multiples_positions.html',\n    link: function postLink(scope, element, attrs) {\n      // Definimos los contenedores y los elementos transcluídos\n      var itemChildren = element.find('.transcluded item').children(),\n        itemContainer = element.find('.item');\n\n      // Se añade cada uno de los hijos a la plantilla en la posición adecuada\n      angular.forEach(itemChildren, function (elem) {\n        itemContainer.append(elem);\n      });\n\n      // Se elimina el elemento transcluded del DOM\n      element.find('.transcluded').remove();\n\n      // Añadimos el audio a options\n      scope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n\n      // Iniciar Knockout\n      dragDropMultiplesPositionsActivity.run(dragDropMultiplesPositionsActivity.create(scope.options));\n    }\n  };\n});\n","var lizDragDropPairText = angular.module('lizDragDropPairText', []);\n\n// Knockout Pairs Factory\nlizDragDropPairText.factory('dragDropPairTextActivity', function ($rootScope) {\n\n\tvar dragDropPairTextActivity = {};\n\n  /**\n   * Crea el ViewModel\n   */\n  dragDropPairTextActivity.create = function (options) {\n    return new dragDropPairTextActivity._ViewModel(options);\n  };\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\topt\t\t\t\t\t\tOpciones a utilizar.\n\t * @param {Array}\t\t\topt.data\t\t\t\tInformación de los elementos. Dentro de cada objeto, se pueden definir las propiedades:\n\t *\n\t *\ttarget: Permite darle un orden apropiado a los targets. Debe empezar desde 0 y la propiedad opt.randomTargets debe estar desactivada\n\t *\n\t * @param {integer}\t\topt.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\topt.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {boolean}\t\topt.randomItems\t\t\tDefine si los elementos deben ser puestos en forma aleatoria\n\t * @param {boolean}\t\topt.randomTargets\t\tDefine si los objetivos debe ser puestos en forma aleatoria\n\t * @param {function}\topt.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\topt.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\tdragDropPairTextActivity._ViewModel = function (opt) {\n\t\tvar self = this;\n\n\t\t// ordena el array de forma aleatoria usando el algoritmo de Fisher-Yates\n\t\tself.shuffleArray = function(array) {\n\t\t\tfor (var i = array.length - 1; i > 0; i--) {\n\t\t\t\tvar j = Math.floor(Math.random() * (i + 1));\n\t\t\t\tvar temp = array[i];\n\t\t\t\tarray[i] = array[j];\n\t\t\t\tarray[j] = temp;\n\t\t\t}\n\t\t\treturn array;\n\t\t};\n\n\t\t// Inicializa las opciones\n\t\tvar data = opt.data,\n      minRightAnswers = opt.minRightAnswers ? opt.minRightAnswers : data.length,\n      randomItems = opt.randomItems ? true : false,\n      randomTargets = opt.randomTargets ? true : false,\n      chances = opt.chances ? opt.chances : data.length,\n      targets_data = data.slice(0),   // Clonamos el array para empezar a trabajar\n      completedItems = 0, // contador de elementos completos\n      border = opt.hasOwnProperty('border') ? opt.border : true,\n      padding = opt.hasOwnProperty('padding') ? opt.padding : true;\n\n\t\t// Objetos aleatorios\n\t\tif(randomItems) {\n\t\t\tdata = self.shuffleArray(data);\n\t\t}\n\n\t\t// Creamos los índices para la posición absoluta\n\t\tfor(var i = 0; i < data.length; i++){\n\t\t\tdata[i]._index = i;\n\t\t}\n\n\t\tself.itemsPerRow = (opt.hasOwnProperty(\"itemsPerRow\")) ? opt.itemsPerRow : opt.data.length;\n\n\t\t// audio\n\t\tself.audio = ko.observable(opt.audio);\n\n\t\t// Definimos los observableArrays para items y targets\n\t\tself.items = ko.observableArray(data);\n\t\tself.targets = ko.observableArray();\n\n\t\t// Carpeta de recursos desde angular\n\t\tself.resources = $rootScope.resources;\n\n\t\tself.maximumElements = 1; // IMPORTANTE: Requerido para que los sortables no acepten más de un elemento\n\t\tself.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\t\tself.failure = ko.observable(false);\n\t\tself.success = ko.observable(false);\n\n\t\t// ======================================================================================\n\t\t// Constructor de los targets\n\t\t// ======================================================================================\n\n\t\t// Si la opción de randomTargets está activada, aplicamos el orden aleatorio\n\t\tif(randomTargets){\n\t\t\ttargets_data = self.shuffleArray(targets_data);\n\t\t} else {\n\t\t\t// En caso contrario, se utiliza la propiedad target, dentro del array de data\n\t\t\ttargets_data.sort(function (a, b) {\n\t\t\t\treturn ((a.target < b.target) ? -1 : ((a.target > b.target) ? 1 : 0));\n\t\t\t});\n\t\t}\n\n\t\tvar _index = 1; // índice que se le asignará a cada uno de los elementos\n\n\t\tko.utils.arrayForEach(targets_data, function (item) {\n\t\t\t// Creamos el nuevo target. Añadimos un índice para hacer la relación 1 a 1\n\t\t\titem._items = ko.observableArray();\n\t\t\tif (opt.hasOwnProperty(\"chancesPerItem\")) {\n\t\t\t\titem.chances = opt.chancesPerItem - 1;\n\t\t\t}\n\t\t\titem._items._id = _index++;\n\n\t\t\tself.targets.push(item);\n\t\t});\n\t\t\n\t\t// ======================================================================================\n\t\t// FIN Constructor\n\t\t// ======================================================================================\n\n\t\t/**\n\t\t * Reproduce el audio de la instrucción.\n\t\t */\n\t\tself.playAudio = function () {\n\t\t\t$('#audio-instruction')[0].play();\n\t\t};\n\n\t\t// Define si el target esta lleno utilizando self.maximumElements\n\t\tself.isContainerFull = function (parent) {\n\t\t\treturn parent().length < self.maximumElements;\n\t\t};\n\n\n\t\t// Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\n\t\tself.verifyAnswer = function (arg) {\n\t\t\tvar parent = arg.targetParent,\n\t\t\titem = arg.item;\n         \n\n\t\t\t// Si el target es igual al contenedor inicial, se devuelve a su posición original\n\t\t\tif(typeof parent._id === \"undefined\") {\n\t\t\t\targ.cancelDrop = true;\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// Compara el _id para encontrar la pareja idéntica. Si es igual, la respuesta es correcta\n\t\t\t\tif(parent._id === item._items._id){\n\n\t\t\t\t\t// RESPUESTA CORRECTA\n\t\t\t\t\tself.rightAnswers++;\n\t\t\t\t\tself.rightAnswer(item);\n          \t\t\tcompletedItems += 1;\n          \t\t\t// Reducimos en 1 las posibilidades\n\t\t\t\t\tchances -= 1;\n\n\t\t\t\t\t// Si se definió una función cuando la respuesta es correcta, se corre\n\t\t\t\t\tif(typeof opt.rightAnswerCallback !== \"undefined\" ) opt.rightAnswerCallback(item);\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// RESPUESTA INCORRECTA\n\t\t\t\t\tself.wrongAnswer(item);\n\t\t\t\t\targ.cancelDrop = true;\n\n\t\t\t\t\tif (item.hasOwnProperty(\"chances\")) {\n\t\t\t\t\t\tif(item.chances === 0){\n\t\t\t\t\t\t\t// Reducimos en 1 las posibilidades\n\t\t\t\t\t\t\tchances -= 1;\n\t\t\t\t\t\t\t$(\"#\" + item._items._id).hide(200);\n\t\t\t        \t}else{item.chances--;}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Reducimos en 1 las posibilidades\n\t\t\t\t\t\tchances -= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// La actividad termina cuando el número de posibilidades se termina\n\t\t\tif(chances === 0 || completedItems === self.targets().length) {\n\t\t\t\t// Si el número de respuestas correctas es mayor o igual al requerido inicialmente\n\t\t\t\tif(self.rightAnswers >= minRightAnswers) {\n\t\t\t\t\tself.success(true); // Trigger de éxito\n\n\t\t\t\t\t// Se llama la función de éxito, definida por el desarrollador\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback();\n\n\t\t\t\t\t$rootScope.isNextEnabled = true; // Activamos el siguiente\n\t\t\t\t} else {\n\t\t\t\t\tself.failure(true); // Trigger de fracaso\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n    /**\n     * Estilos de los elementos.\n     */\n     var _itemIndex = 0;\n    self.getItemStyles = function (item) {\n      var styles = '';\n\n     //  if (opt.hasOwnProperty(\"itemsPerRow\")) {\n     //  \tif (_itemIndex === opt.itemsPerRow) {\n     //  \t\t_itemIndex = 0;\n     //  \t}\n\n     //  \tif (item._index >= opt.itemsPerRow) {\n  \t\t\t// styles += 'top: 33%;';\n     //  \t}\n     //  \tstyles += 'width: ' + (100 / opt.itemsPerRow) + '%;';\n     //  \tstyles += 'left: ' + ((100 / opt.itemsPerRow) * _itemIndex ) + '%;';\n     //  \t_itemIndex++\n     //  } else {\n      \tstyles += 'width: ' + (100 / self.targets().length) + '%;';\n      \n\n      \n      \tstyles += 'left: ' + ((100 / self.targets().length) * item._index ) + '%;';\n      // }\n      \n      styles += 'position: absolute;';\n      return styles;\n    };\n\n    /**\n     * Estilos de cada objetivo.\n     * @returns {string}\n     */\n    self.getTargetStyles = function () {\n      var styles = '';\n\n      if (opt.hasOwnProperty(\"itemsPerRow\")) {\n  \t\tstyles += 'width: ' + (100 / opt.itemsPerRow) + '%;';\n      } else {\n      \tstyles += 'width: ' + (100 / self.targets().length) + '%;';\n      }\n      \n      if(typeof opt.targetStyles !== \"undefined\") styles += opt.targetStyles;\n\n      return styles;\n    };\n\n\t\t/**\n\t\t * Estilos para elementos internos de target e item.\n\t\t */\n\t\tself.getInnerStyles = function (item) {\n\t\t\tvar styles = '';\n\n\t\t\t// Estilos Opcionales\n\t\t\tif(border) styles += 'border: 4px solid #000;';\n\t\t\tif(padding) styles += 'padding: 4px;';\n\n\t\t\treturn styles;\n\t\t}\n\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con pairsActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\tdragDropPairTextActivity.run = function (instance) {\n\t\tconsole.log(ko.bindingHandlers);\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn dragDropPairTextActivity;\n\n});\n\nlizDragDropPairText.directive('dragDropPairText', function  (dragDropPairTextActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tcustomClass: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/drag_drop_pair_text.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\tconsole.log(arguments);\n\t\t\tif(typeof scope.customClass !== \"undefined\"){\n\t\t\t\tscope.$root.customClass = scope.customClass;\n\t\t\t}\n\n\t\t\t// Definimos los contenedores y los elementos transcluídos\n\t\t\tvar itemChildren = element.find('.transcluded item').children(),\n\t\t\titemContainer = element.find('.item'),\n\t\t\ttargetChildren = element.find('.transcluded target').children(),\n\t\t\ttargetContainer = element.find('.target')\n\t\t\titemTargetChildren = element.find('.transcluded item-target').children(),\n\t\t\titemTargetContainer = element.find('.item-target');\n\n\t\t\t// Se añade cada uno de los hijos a la plantilla en la posición adecuada\n\t\t\tangular.forEach(itemChildren, function (elem) { itemContainer.append(elem); });\n\t\t\tangular.forEach(targetChildren, function (elem) { targetContainer.append(elem); });\n\t\t\tangular.forEach(itemTargetChildren, function (elem) { itemTargetContainer.append(elem); });\n\n\t\t\t// Se elimina el elemento transcluded del DOM\n\t\t\telement.find('.transcluded').remove();\n\n\t\t\t// Añadimos el audio a options\n\t\t\t// scope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n\n\t\t\t// Corremos la aplicación\n\t\t\tvar vm = dragDropPairTextActivity.create(scope.options);\n\t\t\tdragDropPairTextActivity.run(vm);\n\t\t}\n\t}; \n});\n","var lizDragMarkCanvas = angular.module('lizDragMarkCanvas', []);\r\n\r\n// Knockout Pairs Factory\r\nlizDragMarkCanvas.factory('dragMarkCanvasActivity', function ($rootScope) {\r\n\r\n\tvar dragMarkCanvasActivity = {};\r\n\r\n\t/**\r\n\t * Crea el ViewModel\r\n\t */\r\n\tdragMarkCanvasActivity.create = function (options) {\r\n\t\treturn new dragMarkCanvasActivity._ViewModel(options);\r\n\t}\r\n\r\n\t/**\r\n\t * Genera el ViewModel de las parejas con sus funcionalidades\r\n\t *\r\n\t * Recibe un objeto con las siguientes propiedades\r\n\t *\r\n\t * @param {object}\t\toptions\t\t\t\t\t\tOpciones a utilizar.\r\n\t * @param {Array}\t\t\toptions.data\t\t\t\tInformación de los elementos. Dentro de cada objeto, se pueden definir las propiedades:\r\n\t *\r\n\t *\ttarget: Permite darle un orden apropiado a los targets. Debe empezar desde 0 y la propiedad options.randomTargets debe estar desactivada\r\n\t *\r\n\t * @param {integer}\t\toptions.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\r\n\t * @param {integer}\t\toptions.minRightAnswers\t\tNúmero mínimo de respuestas correctas\r\n\t * @param {boolean}\t\toptions.randomItems\t\t\tDefine si los elementos deben ser puestos en forma aleatoria\r\n\t * @param {boolean}\t\toptions.randomTargets\t\tDefine si los objetivos debe ser puestos en forma aleatoria\r\n\t * @param {function}\toptions.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\r\n\t * @param {function}\toptions.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\r\n\t *\r\n\t */\r\n\tdragMarkCanvasActivity._ViewModel = function (opt) {\r\n\t\tvar self = this,\r\n\t\t\tchances = opt.chances,\r\n\t\t\tminRightAnswers = opt.minRightAnswers,\r\n\t\t\ttemp = false;\r\n\r\n\t\t// Elementos de la actividad\r\n\t\tself.canvas = opt.canvas;\r\n\t\tself.alt = opt.alt;\r\n\t\tself.items = opt.items; // Elementos que se arrastran\r\n\t\tself.targets = ko.observableArray(); // Targets \r\n\r\n\t\tself.items.forEach(function(item){\r\n\t\t\titem.targets.forEach(function(target){\r\n\t\t\t\ttemp = {\r\n\t\t\t\t\tsortable: ko.observableArray(),\r\n\t\t\t\t\tt: target.t,\r\n\t\t\t\t\tl: target.l,\r\n\t\t\t\t\tw: target.w,\r\n\t\t\t\t\th: target.h\r\n\t\t\t\t};\r\n\r\n\t\t\t\ttemp.sortable._id = item.drag;\r\n\r\n\t\t\t\t// Añadimos el elemento a los targets\r\n\t\t\t\tself.targets.push(temp);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// audio\r\n\t\tself.audio = ko.observable(opt.audio);\r\n\r\n\t\t// Carpeta de recursos desde angular\r\n\t\tself.resources = $rootScope.resources;\r\n\r\n\t\tself.maximumElements = 1; // IMPORTANTE: Requerido para que los sortables no acepten más de un elemento\r\n\t\tself.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\r\n\r\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\r\n\t\tself.rightAnswer = ko.observable();\r\n\t\tself.wrongAnswer = ko.observable();\r\n\r\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\r\n\t\tself.failure = ko.observable(false);\r\n\t\tself.success = ko.observable(false);\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * Reproduce el audio de la instrucción.\r\n\t\t */\r\n\t\tself.playAudio = function () {\r\n\t\t\t$('#audio-instruction')[0].play();\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Define si el target esta lleno utilizando self.maximumElements\r\n\t\t */\r\n\t\tself.isContainerFull = function (parent) {\r\n\t\t\treturn parent().length < self.maximumElements;\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Obtiene los estilos de los targets\r\n\t\t */\r\n\t\tself.getTargetStyles = function (target) {\r\n\t\t\tvar styles = '';\r\n\r\n\t\t\tstyles += 'top: ' + target.t + '%;';\r\n\t\t\tstyles += 'left: ' + target.l + '%;';\r\n\t\t\tstyles += 'width: ' + target.w + '%;';\r\n\t\t\tstyles += 'height: ' + target.h + '%;';\r\n\r\n\t\t\treturn styles;\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\r\n\t\t */\r\n\t\tself.verifyAnswer = function (arg) {\r\n\t\t\tvar parent = arg.targetParent,\r\n\t\t\t\titem = arg.item;\r\n\r\n\t\t\tif(parent._id === item.drag){\r\n\t\t\t\t// RESPUESTA CORRECTA\r\n\t\t\t\tself.rightAnswers++;\r\n\t\t\t\tself.rightAnswer(item);\r\n\r\n\t\t\t\t// Si se definió una función cuando la respuesta es correcta, se corre\r\n\t\t\t\tif(typeof opt.rightAnswerCallback !== \"undefined\" ) opt.rightAnswerCallback(item);\r\n\t\t\t} else {\r\n\t\t\t\t// RESPUESTA INCORRECTA\r\n\t\t\t\tself.wrongAnswer(item);\r\n\t\t\t\targ.cancelDrop = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Reducimos en 1 las posibilidades\r\n\t\t\tchances--;\r\n\r\n\t\t\t// La actividad termina cuando el número de posibilidades se termina\r\n\t\t\tif(chances === 0 || self.rightAnswers === self.targets().length) {\r\n\t\t\t\t// Si el número de respuestas correctas es mayor o igual al requerido inicialmente\r\n\t\t\t\tif(self.rightAnswers >= minRightAnswers) {\r\n\t\t\t\t\tself.success(true); // Trigger de éxito\r\n\r\n\t\t\t\t\t// Se llama la función de éxito, definida por el desarrollador\r\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback();\r\n\r\n\t\t\t\t\t$rootScope.isNextEnabled = true; // Activamos el siguiente\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.failure(true); // Trigger de fracaso\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Inicializa la instancia del ViewModel creado con dragMarkCanvasActivity.create\r\n\t *\r\n\t * @param {object} instance Intancia del VM de knockout\r\n\t */\r\n\tdragMarkCanvasActivity.run = function (instance) {\r\n\t\tko.cleanNode($('#main-container')[0]);\r\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\r\n\t\tko.applyBindings(instance, $('#main-container')[0]);\r\n\t};\r\n\r\n\treturn dragMarkCanvasActivity;\r\n\r\n});\r\n\r\nlizDragMarkCanvas.directive('dragMarkCanvas', function  (dragMarkCanvasActivity) {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\ttransclude: true,\r\n\t\tscope: {\r\n\t\t\toptions: '=',\r\n\t\t\tdescription: '@',\r\n\t\t\taudio:'@',\r\n\t\t\tcustomClass: '@'\r\n\t\t},\r\n\t\ttemplateUrl: '../views/activities/drag_mark_canvas.html',\r\n\t\tlink: function postLink(scope, element, attrs) {\r\n\t\t\t// Añadimos el audio a options\r\n\t\t\tscope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\r\n\r\n\t\t\t// Corremos la aplicación\r\n\t\t\tvar vm = dragMarkCanvasActivity.create(scope.options);\r\n\t\t\tdragMarkCanvasActivity.run(vm);\r\n\t\t}\r\n\t}; \r\n});\r\n","var lizDragToImg = angular.module('lizDragToImg', ['ngDragDrop']);\r\n\r\nlizDragToImg.directive('dragToImg', function  ($compile) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      options: '=',\r\n      audio: '@',\r\n      description: '@'\r\n    },\r\n    templateUrl: '../views/activities/drag_to_img.html',\r\n    link: function (scope, element, attrs) {\r\n      var opt = scope.options,\r\n        replaceArray = [], // array con los índices de los targets\r\n        targetCounter = 0, // Variable temporal usada como contador\r\n        rightAnswers = 0, // contador de respuestas correctas\r\n        minRightAnswers = opt.minRightAnswers, // respuestas correctas mínimas para pasar\r\n        template = opt.template;\r\n\r\n      // Models\r\n      // --------------------------------------------------------------------\r\n      scope.items = [];\r\n      scope.targets = [];\r\n\r\n      // img\r\n      scope.src = opt.src;\r\n      scope.alt = opt.alt;\r\n\r\n      // iteramos sobre los objetos, para construir los draggables\r\n      opt.items.forEach(function (item, index) {\r\n        var _data = null;\r\n\r\n        if(typeof item === 'object') _data = item.data;\r\n        else _data = item;\r\n\r\n        // Creación de item\r\n        if(_data instanceof Array) {\r\n          _data.forEach(function (i) {\r\n            scope.items.push({\r\n              _id: index,\r\n              text: i\r\n            });\r\n          });\r\n        } else {\r\n          scope.items.push({\r\n            _id: index,\r\n            text: _data\r\n          });\r\n        }\r\n\r\n      });\r\n\r\n      // Template Creation\r\n      // --------------------------------------------------------------------\r\n      // Usamos replace para obtener los índices\r\n      template.replace(/\\$\\{(\\d+)\\}/g, function (a, b) {\r\n        a = a.substr(2, a.length - 3); // Remueve los elementos que producen la interpolación\r\n        replaceArray.push(a);\r\n        return false;\r\n      });\r\n\r\n      replaceArray.forEach(function (i) {\r\n        // Creación de target\r\n        scope.targets.push({\r\n          _id: parseInt(i),\r\n          drop: true,\r\n          chances: 2,\r\n          customClass: opt.items[i].customClass ? opt.items[i].customClass : '',\r\n          model: {} // droppable\r\n        });\r\n      });\r\n\r\n      // Formateamos el contenido para añadirlo a .operation-content\r\n      template = template.replace(/\\$\\{(\\d+)\\}/g, function (a, b) {\r\n        a = \"targets[\" + targetCounter + \"]\";\r\n        targetCounter += 1;\r\n\r\n        var elem = '<span class=\"drop-container bd-1 {{ _x_.customClass }}\" ng-class=\"{ disabled: _x_.disabled }\" data-drop=\"_x_.drop\" ng-model=\"_x_.model\" jqyoui-droppable=\"{ onDrop: \\'dropCallback(_x_)\\' }\">\\n    <span class=\"dropped-item\">{{ _x_.model.text }}</span>\\n    <span class=\"answer-icon icon-right\" ng-show=\"_x_.right\"></span>\\n    <span class=\"answer-icon icon-wrong\" ng-show=\"_x_.wrong\"></span>\\n</span>\\n';\r\n\r\n        return elem.replace(/_x_/g, a);\r\n      });\r\n\r\n      element.find('.template-container').append($compile(template)(scope));\r\n\r\n      // Events\r\n      // --------------------------------------------------------------------\r\n      /**\r\n       * Función que se ejecuta al soltar un elemento.\r\n       *\r\n       * @param e    event de jquery ui\r\n       * @param ui\r\n       * @param target    Modelo donde fue soltado el item\r\n       */\r\n      scope.dropCallback = function (e, ui, target) {\r\n        var completedTargets = 0;\r\n        console.log(e, ui, target);\r\n\r\n        // revisa el modelo interno y compara _ids\r\n        if(target._id === target.model._id) {\r\n          // Respuesta correcta\r\n          target.drop = false; // deshabilita el drop\r\n          target.disabled = true;\r\n          target.right = true;\r\n\r\n          rightAnswers += 1;\r\n        } else {\r\n          // Respuesta incorrecta\r\n          target.model = {}; // limpia el interno\r\n          target.chances -= 1;\r\n\r\n          if(target.chances === 0) {\r\n            target.disabled = true;\r\n            target.wrong = true;\r\n          }\r\n        }\r\n\r\n        // Fin de la actividad\r\n        completedTargets = scope.targets.filter(function (t) {\r\n          return t.disabled;\r\n        }).length;\r\n\r\n        if(completedTargets === scope.targets.length) {\r\n          scope.$root.isNextEnabled = true;\r\n        }\r\n      };\r\n\r\n      /**\r\n       * Función que se ejecuta al dar click en la flecha de siguiente.\r\n       */\r\n      scope.$root.beforeGoNext = function () {\r\n        if(rightAnswers >= minRightAnswers) {\r\n          scope.success = true;\r\n          return true;\r\n        } else {\r\n          scope.failure = true;\r\n          return false;\r\n        }\r\n      };\r\n\r\n\r\n    }\r\n  };\r\n});\r\n","var lizDragToMat = angular.module('lizDragToMat', ['ngDragDrop']);\r\n\r\nlizDragToMat.directive('dragToMat', function  ($compile) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      options: '=',\r\n      audio: '@',\r\n      description: '@',\r\n    },\r\n    templateUrl: '../views/activities/drag_to_mat.html',\r\n    link: function (scope, element, attrs) {\r\n      var opt = scope.options,\r\n        replaceArray = [], // array con los índices de los targets\r\n        targetCounter = 0, // Variable temporal usada como contador\r\n        rightAnswers = 0, // contador de respuestas correctas\r\n        minRightAnswers = opt.minRightAnswers, // respuestas correctas mínimas para pasar\r\n        template = opt.template;\r\n\r\n      // Models\r\n      // --------------------------------------------------------------------\r\n      scope.items = [];\r\n      scope.targets = [];\r\n\r\n      // img\r\n      scope.src = opt.src;\r\n      scope.alt = opt.alt;\r\n    \r\n      // iteramos sobre los objetos, para construir los draggables\r\n      opt.items.forEach(function (item, index) {\r\n        var _data = null;\r\n\r\n        if(typeof item === 'object') _data = item.data;\r\n        else _data = item;\r\n\r\n        // Creación de item\r\n        if(_data instanceof Array) {\r\n          _data.forEach(function (i) {\r\n            scope.items.push({\r\n              _id: index,\r\n              text: i\r\n            });\r\n          });\r\n        } else {\r\n          scope.items.push({\r\n            _id: index,\r\n            text: _data\r\n          });\r\n        }\r\n\r\n      });\r\n\r\n      // Template Creation\r\n      // --------------------------------------------------------------------\r\n      // Usamos replace para obtener los índices\r\n      template.replace(/\\$\\{(\\d+)\\}/g, function (a, b) {\r\n        a = a.substr(2, a.length - 3); // Remueve los elementos que producen la interpolación\r\n        replaceArray.push(a);\r\n        return false;\r\n      });\r\n\r\n      replaceArray.forEach(function (i) {\r\n        // Creación de target\r\n        scope.targets.push({\r\n          _id: parseInt(i),\r\n          drop: true,\r\n          chances: 2,\r\n          customClass: opt.items[i].customClass ? opt.items[i].customClass : '',\r\n          model: {} // droppable\r\n        });\r\n      });\r\n\r\n      // Formateamos el contenido para añadirlo a .operation-content\r\n      template = template.replace(/\\$\\{(\\d+)\\}/g, function (a, b) {\r\n        a = \"targets[\" + targetCounter + \"]\";\r\n        targetCounter += 1;\r\n\r\n        var elem = '<span class=\"drop-container bd-1 {{ _x_.customClass }}\" ng-class=\"{ disabled: _x_.disabled }\" data-drop=\"_x_.drop\" ng-model=\"_x_.model\" jqyoui-droppable=\"{ onDrop: \\'dropCallback(_x_)\\' }\">\\n    <span class=\"dropped-item\">{{ _x_.model.text }}</span>\\n    <span class=\"answer-icon icon-right\" ng-show=\"_x_.right\"></span>\\n    <span class=\"answer-icon icon-wrong\" ng-show=\"_x_.wrong\"></span>\\n</span>\\n';\r\n\r\n        return elem.replace(/_x_/g, a);\r\n      });\r\n\r\n      element.find('.template-container').append($compile(template)(scope));\r\n\r\n      // Events\r\n      // --------------------------------------------------------------------\r\n      /**\r\n       * Función que se ejecuta al soltar un elemento.\r\n       *\r\n       * @param e    event de jquery ui\r\n       * @param ui\r\n       * @param target    Modelo donde fue soltado el item\r\n       */\r\n      scope.dropCallback = function (e, ui, target) {\r\n        var completedTargets = 0;\r\n        console.log(e, ui, target);\r\n\r\n        // revisa el modelo interno y compara _ids\r\n        if(target._id === target.model._id) {\r\n          // Respuesta correcta\r\n          target.drop = false; // deshabilita el drop\r\n          target.disabled = true;\r\n          target.right = true;\r\n\r\n          rightAnswers += 1;\r\n        } else {\r\n          // Respuesta incorrecta\r\n          target.model = {}; // limpia el interno\r\n          target.chances -= 1;\r\n\r\n          if(target.chances === 0) {\r\n            target.disabled = true;\r\n            target.wrong = true;\r\n          }\r\n        }\r\n\r\n        // Fin de la actividad\r\n        completedTargets = scope.targets.filter(function (t) {\r\n          return t.disabled;\r\n        }).length;\r\n\r\n        if(completedTargets === scope.targets.length) {\r\n          scope.$root.isNextEnabled = true;\r\n        }\r\n      };\r\n\r\n      /**\r\n       * Función que se ejecuta al dar click en la flecha de siguiente.\r\n       */\r\n      scope.$root.beforeGoNext = function () {\r\n        if(rightAnswers >= minRightAnswers) {\r\n          scope.success = true;\r\n          return true;\r\n        } else {\r\n          scope.failure = true;\r\n          return true;\r\n        }\r\n      };\r\n\r\n\r\n    }\r\n  };\r\n});\r\n","var lizDragToText = angular.module('lizDragToText', ['ngDragDrop']);\r\n\r\nlizDragToText.directive('dragToText', function  ($compile) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      options: '=',\r\n      audio: '@',\r\n      description: '@'\r\n    },\r\n    templateUrl: '../views/activities/drag_to_text.html',\r\n    link: function (scope, element, attrs) {\r\n      var opt = scope.options,\r\n        replaceArray = [], // array con los índices de los targets\r\n        targetCounter = 0, // Variable temporal usada como contador\r\n        rightAnswers = 0, // contador de respuestas correctas\r\n        minRightAnswers = opt.minRightAnswers, // respuestas correctas mínimas para pasar\r\n        template = opt.template;\r\n\r\n      // Models\r\n      // --------------------------------------------------------------------\r\n      scope.items = [];\r\n      scope.targets = [];\r\n\r\n      // img\r\n      scope.src = opt.src;\r\n      scope.alt = opt.alt;\r\n\r\n      // iteramos sobre los objetos, para construir los draggables\r\n      opt.items.forEach(function (item, index) {\r\n        var _data = null;\r\n\r\n        if(typeof item === 'object') _data = item.data;\r\n        else _data = item;\r\n\r\n        // Creación de item\r\n        if(_data instanceof Array) {\r\n          _data.forEach(function (i) {\r\n            scope.items.push({\r\n              _id: index,\r\n              text: i\r\n            });\r\n          });\r\n        } else {\r\n          scope.items.push({\r\n            _id: index,\r\n            text: _data\r\n          });\r\n        }\r\n\r\n      });\r\n\r\n      // Template Creation\r\n      // --------------------------------------------------------------------\r\n      // Usamos replace para obtener los índices\r\n      template.replace(/\\$\\{(\\d+)\\}/g, function (a, b) {\r\n        a = a.substr(2, a.length - 3); // Remueve los elementos que producen la interpolación\r\n        replaceArray.push(a);\r\n        return false;\r\n      });\r\n\r\n      replaceArray.forEach(function (i) {\r\n        // Creación de target\r\n        scope.targets.push({\r\n          _id: parseInt(i),\r\n          drop: true,\r\n          chances: 2,\r\n          customClass: opt.items[i].customClass ? opt.items[i].customClass : '',\r\n          model: {} // droppable\r\n        });\r\n      });\r\n\r\n      // Formateamos el contenido para añadirlo a .operation-content\r\n      template = template.replace(/\\$\\{(\\d+)\\}/g, function (a, b) {\r\n        a = \"targets[\" + targetCounter + \"]\";\r\n        targetCounter += 1;\r\n\r\n        var elem = '<span class=\"drop-container bd-1 {{ _x_.customClass }}\" ng-class=\"{ disabled: _x_.disabled }\" data-drop=\"_x_.drop\" ng-model=\"_x_.model\" jqyoui-droppable=\"{ onDrop: \\'dropCallback(_x_)\\' }\">\\n    <span class=\"dropped-item\">{{ _x_.model.text }}</span>\\n    <span class=\"answer-icon icon-right\" ng-show=\"_x_.right\"></span>\\n    <span class=\"answer-icon icon-wrong\" ng-show=\"_x_.wrong\"></span>\\n</span>\\n';\r\n\r\n        return elem.replace(/_x_/g, a);\r\n      });\r\n\r\n      element.find('.template-container').append($compile(template)(scope));\r\n\r\n      // Events\r\n      // --------------------------------------------------------------------\r\n      /**\r\n       * Función que se ejecuta al soltar un elemento.\r\n       *\r\n       * @param e    event de jquery ui\r\n       * @param ui\r\n       * @param target    Modelo donde fue soltado el item\r\n       */\r\n      scope.dropCallback = function (e, ui, target) {\r\n        var completedTargets = 0;\r\n        console.log(e, ui, target);\r\n\r\n        // revisa el modelo interno y compara _ids\r\n        if(target._id === target.model._id) {\r\n          // Respuesta correcta\r\n          target.drop = false; // deshabilita el drop\r\n          target.disabled = true;\r\n          target.right = true;\r\n\r\n          rightAnswers += 1;\r\n        } else {\r\n          // Respuesta incorrecta\r\n          target.model = {}; // limpia el interno\r\n          target.chances -= 1;\r\n\r\n          if(target.chances === 0) {\r\n            target.disabled = true;\r\n            target.wrong = true;\r\n          }\r\n        }\r\n\r\n        // Fin de la actividad\r\n        completedTargets = scope.targets.filter(function (t) {\r\n          return t.disabled;\r\n        }).length;\r\n\r\n        if(completedTargets === scope.targets.length) {\r\n          scope.$root.isNextEnabled = true;\r\n        }\r\n      };\r\n\r\n      /**\r\n       * Función que se ejecuta al dar click en la flecha de siguiente.\r\n       */\r\n      scope.$root.beforeGoNext = function () {\r\n        if(rightAnswers >= minRightAnswers) {\r\n          scope.success = true;\r\n          return true;\r\n        } else {\r\n          scope.failure = true;\r\n          return false;\r\n        }\r\n      };\r\n\r\n\r\n    }\r\n  };\r\n});\r\n","var lizDragToTexts = angular.module('lizDragToTexts', ['ngDragDrop']);\r\n\r\nlizDragToTexts.directive('dragToTexts', function  ($compile) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      options: '=',\r\n      audio: '@',\r\n      description: '@'\r\n    },\r\n    templateUrl: '../views/activities/drag_to_texts.html',\r\n    link: function (scope, element, attrs) {\r\n      var opt = scope.options,\r\n        replaceArray = [], // array con los índices de los targets\r\n        targetCounter = 0, // Variable temporal usada como contador\r\n        rightAnswers = 0, // contador de respuestas correctas\r\n        minRightAnswers = opt.minRightAnswers, // respuestas correctas mínimas para pasar\r\n        template = opt.template;\r\n\r\n      // Models\r\n      // --------------------------------------------------------------------\r\n      scope.items = [];\r\n      scope.targets = [];\r\n\r\n      // img\r\n      scope.src = opt.src;\r\n      scope.alt = opt.alt;\r\n\r\n      // iteramos sobre los objetos, para construir los draggables\r\n      opt.items.forEach(function (item, index) {\r\n        var _data = null;\r\n\r\n        if(typeof item === 'object') _data = item.data;\r\n        else _data = item;\r\n\r\n        // Creación de item\r\n        if(_data instanceof Array) {\r\n          _data.forEach(function (i) {\r\n            scope.items.push({\r\n              _id: index,\r\n              text: i\r\n            });\r\n          });\r\n        } else {\r\n          scope.items.push({\r\n            _id: index,\r\n            text: _data\r\n          });\r\n        }\r\n\r\n      });\r\n\r\n      // Template Creation\r\n      // --------------------------------------------------------------------\r\n      // Usamos replace para obtener los índices\r\n      template.replace(/\\$\\{(\\d+)\\}/g, function (a, b) {\r\n        a = a.substr(2, a.length - 3); // Remueve los elementos que producen la interpolación\r\n        replaceArray.push(a);\r\n        return false;\r\n      });\r\n\r\n      replaceArray.forEach(function (i) {\r\n        // Creación de target\r\n        scope.targets.push({\r\n          _id: parseInt(i),\r\n          drop: true,\r\n          chances: 2,\r\n          customClass: opt.items[i].customClass ? opt.items[i].customClass : '',\r\n          model: {} // droppable\r\n        });\r\n      });\r\n\r\n      // Formateamos el contenido para añadirlo a .operation-content\r\n      template = template.replace(/\\$\\{(\\d+)\\}/g, function (a, b) {\r\n        a = \"targets[\" + targetCounter + \"]\";\r\n        targetCounter += 1;\r\n\r\n        var elem = '<span class=\"drop-container bd-1 {{ _x_.customClass }}\" ng-class=\"{ disabled: _x_.disabled }\" data-drop=\"_x_.drop\" ng-model=\"_x_.model\" jqyoui-droppable=\"{ onDrop: \\'dropCallback(_x_)\\' }\">\\n    <span class=\"dropped-item\">{{ _x_.model.text }}</span>\\n    <span class=\"answer-icon icon-right\" ng-show=\"_x_.right\"></span>\\n    <span class=\"answer-icon icon-wrong\" ng-show=\"_x_.wrong\"></span>\\n</span>\\n';\r\n\r\n        return elem.replace(/_x_/g, a);\r\n      });\r\n\r\n      element.find('.template-container').append($compile(template)(scope));\r\n\r\n      // Events\r\n      // --------------------------------------------------------------------\r\n      /**\r\n       * Función que se ejecuta al soltar un elemento.\r\n       *\r\n       * @param e    event de jquery ui\r\n       * @param ui\r\n       * @param target    Modelo donde fue soltado el item\r\n       */\r\n      scope.dropCallback = function (e, ui, target) {\r\n        var completedTargets = 0;\r\n        console.log(e, ui, target);\r\n\r\n        // revisa el modelo interno y compara _ids\r\n        if(target._id === target.model._id) {\r\n          // Respuesta correcta\r\n          target.drop = false; // deshabilita el drop\r\n          target.disabled = true;\r\n          target.right = true;\r\n\r\n          rightAnswers += 1;\r\n        } else {\r\n          // Respuesta incorrecta\r\n          target.model = {}; // limpia el interno\r\n          target.chances -= 1;\r\n\r\n          if(target.chances === 0) {\r\n            target.disabled = true;\r\n            target.wrong = true;\r\n          }\r\n        }\r\n\r\n        // Fin de la actividad\r\n        completedTargets = scope.targets.filter(function (t) {\r\n          return t.disabled;\r\n        }).length;\r\n\r\n        if(completedTargets === scope.targets.length) {\r\n          scope.$root.isNextEnabled = true;\r\n        }\r\n      };\r\n\r\n      /**\r\n       * Función que se ejecuta al dar click en la flecha de siguiente.\r\n       */\r\n      scope.$root.beforeGoNext = function () {\r\n        if(rightAnswers >= minRightAnswers) {\r\n          scope.success = true;\r\n          return true;\r\n        } else {\r\n          scope.failure = true;\r\n          return false;\r\n        }\r\n      };\r\n\r\n\r\n    }\r\n  };\r\n});\r\n","var lizDropBoxes = angular.module('lizDropBoxes', ['factories']);\n\nlizDropBoxes.directive('dropBoxes', function  (shuffleArrayFactory) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\taudio: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/drop_boxes.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\tchances = opt.chancesPerPhase; // posibilidades por fase\n\n\t\t\tscope.phases = opt.phases; // Fases del juego\n\t\t\tscope.dropTarget = null; // Padre en donde cae el objeto\n\t\t\tscope.remaining = []; // Objetos sobrantes\n\t\t\tscope.actualPhase = {}; // Fase Actual\n\n\t\t\t// variables de calificación\n\t\t\tscope.rightAnswer = false;\n\t\t\tscope.wrongAnswer = false;\n\t\t\tscope.success = false;\n\n\t\t\t// Constructor de remaining\n\t\t\tscope.phases.forEach(function(phase){\n\t\t\t\tphase.groups.forEach(function(group){\n\t\t\t\t\t// Creamos un objeto por cada uno de los items del grupo\n\t\t\t\t\t// mientras que los vamos eliminando del mismo array usando shift\n\t\t\t\t\t// Se deben diferenciar por phase y grupo\n\t\t\t\t\twhile(group.items.length){\n\t\t\t\t\t\tscope.remaining.push({\n\t\t\t\t\t\t\tphase: phase.title,\n\t\t\t\t\t\t\tgroup: group.title,\n\t\t\t\t\t\t\tword: group.items.shift()\n\t\t\t\t\t\t})\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Se barajan los elementos\n\t\t\tshuffleArrayFactory.run(scope.remaining);\n\n\t\t\t// Se carga la fase actual\n\t\t\tscope.actualPhase = scope.phases.shift();\n\n\t\t\t// Opciones del sortable\n\t\t\tscope.sortableOptions = {\n\t\t\t\tconnectWith: '.connected',\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * -----------------------------------------------------------------------------\n\t\t\t * Verify\n\t\t\t * -----------------------------------------------------------------------------\n\t\t\t * Verifica la fase actual. Es la función principal de la actividad.\n\t\t\t *\n\t\t\t * Primero se buscan todos los elementos erróneos dentro de la fase actual, así\n\t\t\t * como los elementos que no se hayan agregado. Después, si se han encontrado elementos\n\t\t\t * entonces la respuesta es incorrecta, de lo contrario, es correcta y se carga la siguiente\n\t\t\t * fase.\n\t\t\t *\n\t\t\t * La actividad termina cuando ya no hay más fáses.\n\t\t\t */\n\t\t\tscope.verify = function () {\n\t\t\t\tvar badAnswers = []; // puestos por error\n\t\t\t\tvar missedItems = []; // objetos perdidos\n\n\t\t\t\t// ============================================================================\n\t\t\t\t// Búsqueda de elementos\n\t\t\t\t// ============================================================================\n\t\t\t\t// Recorremos cada group y comparamos los objetos adentro\n\t\t\t\tscope.actualPhase.groups.forEach(function(group){\n\t\t\t\t\t// Si aún hay objetos pendientes que van dentro de las casillas\n\t\t\t\t\tvar missedInGroup = scope.remaining.filter(function(item){\n\t\t\t\t\t\treturn item.phase === scope.actualPhase.title &&\n\t\t\t\t\t\t\titem.group === group.title;\n\t\t\t\t\t});\n\n\t\t\t\t\t// Concatenamos los objetos perdidos\n\t\t\t\t\tmissedItems = missedItems.concat(missedInGroup);\n\n\t\t\t\t\t// Objetos no pertenecientes a la lista\n\t\t\t\t\tgroup.items.forEach(function(item){\n\t\t\t\t\t\tif(item.group !== group.title || item.phase !== scope.actualPhase.title){\n\t\t\t\t\t\t\tbadAnswers.push(item)\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// ============================================================================\n\t\t\t\t// Verificación de respuesta correcta/incorrecta\n\t\t\t\t// ============================================================================\n\t\t\t\tif(missedItems.length || badAnswers.length){\n\t\t\t\t\t// Respuesta Incorrecta\n\t\t\t\t\tscope.wrongAnswer = Math.random(); // Disparador de respuesta\n\t\t\t\t\tchances--;\n\n\t\t\t\t\t// Se debe reiniciar la serie si se acaban las posibilidades\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tchances = opt.chancesPerPhase; // Reinicia el contador\n\n\t\t\t\t\t\t// Recorremos los grupos y eliminamos los elementos, añadiéndolos nuevamente a la\n\t\t\t\t\t\t// gran lista\n\t\t\t\t\t\tscope.actualPhase.groups.forEach(function(group){\n\t\t\t\t\t\t\twhile(group.items.length){\n\t\t\t\t\t\t\t\tscope.remaining.push( group.items.shift() ); \n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Respuesta Correcta\n\t\t\t\t\tscope.rightAnswer = Math.random(); // Disparador de respuesta\n\t\t\t\t\tchances = opt.chancesPerPhase; // Reinicia el contador\n\n\t\t\t\t\t// ============================================================================\n\t\t\t\t\t// Fin de la actividad\n\t\t\t\t\t// ============================================================================\n\t\t\t\t\tif(scope.phases.length === 0){\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscope.actualPhase = scope.phases.shift();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\t\t\t\n\t\t}\n\t}; \n});\n","/* ===========================================================\r\n * Drop Condition\r\n * ===========================================================\r\n * Permite arrastrar elementos a cuadros basado en una condición definida por medio de una función.\r\n */\r\nvar lizDropCondition = angular.module('lizDropCondition', ['ngDragDrop']);\r\n\r\nlizDropCondition.directive('dropCondition', function  ($compile) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      options: '=',\r\n      audio: '@',\r\n      description: '@'\r\n    },\r\n    templateUrl: '../views/activities/drop_condition.html',\r\n    link: function (scope, element, attrs) {\r\n      var opt = scope.options,\r\n        iTemplate = opt.itemTemplate,\r\n        tTemplate = iTemplate.replace('item', 'target.model'), // Usa la misma plantilla de los items\r\n        $itemsTemplate = null, // Plantilla de los objetos\r\n        $targetsTemplate = null,\r\n        chances = opt.chances,\r\n        minRightAnswers = opt.minRightAnswers,\r\n        rightAnswers = 0; // Contador de respuestas correctas\r\n\r\n      // Models\r\n      // --------------------------------------------------------------------\r\n      scope.items = opt.items.slice(0);\r\n      scope.targets = _.range(opt.targets).map(function () { return { drop: \"true\", model: {} }; });\r\n\r\n      // Calificación\r\n      scope.success = false;\r\n      scope.failure = false;\r\n      scope.wrongAnswer = false;\r\n\r\n      // Template Configuration\r\n      // --------------------------------------------------------------------\r\n      $itemsTemplate = '<div ng-repeat=\"item in items\" class=\"item\" ng-show=\"item._showIf_\" data-drag=\"true\" data-jqyoui-options=\"{ revert: \\'invalid\\' }\" ng-model=\"items\"\\n     jqyoui-draggable=\"{index: {{$index}} }\">\\n</div>\\n'\r\n      $itemsTemplate = $itemsTemplate.replace('_showIf_', opt.showIf);\r\n      $itemsTemplate = angular.element($itemsTemplate);\r\n      $itemsTemplate.append(iTemplate);\r\n\r\n      $targetsTemplate = '<div class=\"targets\">\\n    <div class=\"target\" ng-repeat=\"target in targets\" data-drop=\"! target.completed\" ng-model=\"target.model\" jqyoui-droppable=\"{ onDrop: \\'dropCallback(target)\\' }\"></div>\\n</div>\\n';\r\n      $targetsTemplate = angular.element($targetsTemplate);\r\n      $targetsTemplate.find('.target').append($compile(tTemplate)(scope));\r\n\r\n      element.find('.items').append($compile($itemsTemplate)(scope));\r\n      element.find('.targets-container').append($compile($targetsTemplate)(scope));\r\n\r\n\r\n      // Callback\r\n      // --------------------------------------------------------------------\r\n      scope.dropCallback = function (event, ui, target) {\r\n        var completedTargets = 0;\r\n\r\n        // Revisamos el target utilizando la función personalizada\r\n        if(opt.pass(target.model)) {\r\n          // Respuesta correcta\r\n          target.completed = true;\r\n          rightAnswers += 1;\r\n        } else {\r\n          // Respuesta incorrecta: Devuelve a su posición inicial\r\n          scope.items.push(target.model); // Devuelve a los items\r\n          target.model = {}; // limpia el interno\r\n          scope.wrongAnswer = Math.random();\r\n        }\r\n\r\n        chances -= 1;\r\n\r\n        // Fin de la actividad\r\n        completedTargets = scope.targets.filter(function (t) {\r\n          return t.completed;\r\n        }).length;\r\n\r\n        if(completedTargets === scope.targets.length || chances === 0) {\r\n          if(rightAnswers >= minRightAnswers) {\r\n            scope.$root.isNextEnabled = true;\r\n            scope.success = true;\r\n          } else {\r\n            scope.failure = true;\r\n          }\r\n        }\r\n      };\r\n\r\n\r\n    }\r\n  };\r\n});\r\n","var lizDropImageSample = angular.module('lizDropImageSample', []);\n\n// Knockout Pairs Factory\nlizDropImageSample.factory('dropImageSampleActivity', function ($rootScope, shuffleArrayFactory) {\n\n\tvar dropImageSampleActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tdropImageSampleActivity.create = function (options) {\n\t\treturn new dropImageSampleActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\topt\t\t\t\t\t\tOpciones a utilizar.\n\t *\n\t *\ttarget: Permite darle un orden apropiado a los targets. Debe empezar desde 0 y la propiedad opt.randomTargets debe estar desactivada\n\t *\n\t * @param {integer}\t\topt.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\topt.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {function}\topt.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\topt.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\tdropImageSampleActivity._ViewModel = function (opt) {\n\t\tvar self = this;\n\n\t\t// Inicializa las opciones\n\t\tvar\tminRightAnswers = opt.minRightAnswers ? opt.minRightAnswers : opt.targets.length,\n\t\tchances = opt.chances ? opt.chances : opt.targets.length;\n\n\t\tself.items = ko.observableArray(shuffleArrayFactory.run(opt.targets)); // Elementos a lanzar \n\n\t\t// Agregamos una propiedad _index a cada uno de los items para poder organizarlos de forma absoluta\n\t\tfor(var i=0; i < self.items().length; i++){\n\t\t\tself.items()[i]._id = i;\n\n\t\t\t// extension de la imagen\n\t\t\tself.items()[i].extension = self.items()[i].hasOwnProperty('extension') ?  self.items()[i].extension : 'png' ;\n\t\t}\n\n\t\tself.targets = ko.observableArray(self.items().slice(0)); // copia a los targets, donde caerán los elementos\n\n\t\tself.canvas = opt.canvas;\n\t\tself.canvasAlt = opt.canvasAlt;\n\n\t\tself.sample = typeof opt.sample !== 'undefined' ? opt.sample : false;\n\t\tself.sampleAlt = typeof opt.sampleAlt !== 'undefined' ? opt.sampleAlt : false;\n\n\t\t// audio\n\t\tself.audio = ko.observable(opt.audio);\n\n\t\tself.itemsContainerHeight = opt.itemsContainerHeight; // Para darle un tamaño fijo al contenedor de items y no quede vacío\n\n\t\t// Carpeta de recursos desde angular\n\t\tself.resources = $rootScope.resources;\n\n\t\tself.maximumElements = 1; // IMPORTANTE: Requerido para que los sortables no acepten más de un elemento\n\t\tself.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\t\tself.failure = ko.observable(false);\n\t\tself.success = ko.observable(false);\n\n\t\tko.utils.arrayForEach(self.targets(), function(target){\n\t\t\ttarget.sortable = ko.observableArray(); // Donde caen los elementos\n\t\t\ttarget.sortable._id = target._id; // Id de comparación\n\t\t});\n\n\t\t/**\n\t\t * Reproduce el audio de la instrucción.\n\t\t */\n\t\tself.playAudio = function () {\n\t\t\t$('#audio-instruction')[0].play();\n\t\t};\n\n\t\t// Define si el target esta lleno utilizando self.maximumElements\n\t\tself.isContainerFull = function (parent) {\n\t\t\treturn parent().length < self.maximumElements;\n\t\t};\n\n\t\t// Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\n\t\tself.verifyAnswer = function (arg) {\n\t\t\tvar parent = arg.targetParent,\n\t\t\titem = arg.item;\n\n\n\t\t\t// Compara el _id para encontrar la pareja idéntica. Si es igual, la respuesta es correcta\n\t\t\tif(parent._id === item.sortable._id){\n\n\t\t\t\t// RESPUESTA CORRECTA\n\t\t\t\tself.rightAnswers++;\n\t\t\t\tself.rightAnswer(item);\n\n\t\t\t\t// Si se definió una función cuando la respuesta es correcta, se corre\n\t\t\t\tif(typeof opt.rightAnswerCallback !== \"undefined\" ) opt.rightAnswerCallback(item);\n\n\t\t\t} else {\n\n\t\t\t\t// RESPUESTA INCORRECTA\n\t\t\t\tself.wrongAnswer(item);\n\t\t\t\targ.cancelDrop = true;\n\t\t\t}\n\n\t\t\t// Reducimos en 1 las posibilidades\n\t\t\tchances--;\n\n\t\t\t// La actividad termina cuando el número de posibilidades se termina\n\t\t\tif(chances === 0 || self.rightAnswers === self.targets().length) {\n\t\t\t\t// Si el número de respuestas correctas es mayor o igual al requerido inicialmente\n\t\t\t\tif(self.rightAnswers >= minRightAnswers) {\n\t\t\t\t\tself.success(true); // Trigger de éxito\n\n\t\t\t\t\t// Se llama la función de éxito, definida por el desarrollador\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback();\n\n\t\t\t\t\t$rootScope.isNextEnabled = true; // Activamos el siguiente\n\t\t\t\t} else {\n\t\t\t\t\tself.failure(true); // Trigger de fracaso\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Devuelve los estilos de los elementos\n\t\t */\n\t\tself.getItemStyles = function (item) {\n\t\t\tvar styles = '';\n\n\t\t\tstyles += \"width: \" + (100 / self.targets().length) + \"%;\";\n\t\t\tstyles += \"left: \" + ((100 / self.targets().length) * item._id) + \"%;\";\n\n\t\t\treturn styles;\n\t\t};\n\n\t\t/**\n\t\t * Devuelve los estilos de los targets\n\t\t */\n\t\tself.getTargetStyles = function (target) {\n\t\t\tvar styles = '',\n\t\t\t\tpos = target.targetPos;\n\n\t\t\tstyles += \"width: \" + pos.w + \"%;\";\n\t\t\tstyles += \"height: \" + pos.h + \"%;\";\n\t\t\tstyles += \"top: \" + pos.t + \"%;\";\n\t\t\tstyles += \"left: \" + pos.l + \"%;\";\n\n\t\t\treturn styles;\n\t\t};\n\n\t\t/**\n\t\t * Devuelve los estilos de los targets\n\t\t */\n\t\tself.getTargetInnerStyles = function (target) {\n\t\t\tvar styles = '',\n\t\t\t\tpos = target.innerPos;\n\n\t\t\tstyles += \"width: \" + pos.w + \"%;\";\n\t\t\tstyles += \"height: \" + pos.h + \"%;\";\n\n\t\t\t// Usamos margin, debido a que el padre mide 0x0\n\t\t\tstyles += \"margin-top: \" + pos.t + \"%;\"; \n\t\t\tstyles += \"margin-left: \" + pos.l + \"%;\";\n\n\t\t\treturn styles;\n\t\t};\n\n\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con dropImageSampleActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\tdropImageSampleActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn dropImageSampleActivity;\n\n});\n\nlizDropImageSample.directive('dropImageSample', function  (dropImageSampleActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\taudio: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/drop_image_sample.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\t// Añadimos el audio a options\n\t\t\tscope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n\n\t\t\t// Corremos la aplicación\n\t\t\tvar vm = dropImageSampleActivity.create(scope.options);\n\t\t\tdropImageSampleActivity.run(vm);\n\t\t}\n\t}; \n});\n","var lizDropOut = angular.module('lizDropOut', []);\n\nlizDropOut.factory('dropOutActivity', function ($rootScope) {\n    \n\tvar dropOutActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tdropOutActivity.create = function (options) {\n\t\treturn new dropOutActivity._ViewModel(options);\n\t}\n\n    /**\n     * Genera el ViewModel de las parejas con sus funcionalidades\n     *\n     * Recibe un objeto con las siguientes propiedades\n     *\n     * @param {object}\t\toptions\t\t\t\t\t\tOpciones a utilizar.\n     *\n     * @param {integer}\t\toptions.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n     * @param {integer}\t\toptions.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n     * @param {function}\toptions.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n     * @param {function}\toptions.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n     *\n      */\n    dropOutActivity._ViewModel = function (options) {\n        var self = this;\n\n        // Variables para sortables\n        self.items = ko.observableArray(options.items);\n        self.outside = ko.observableArray();\n\n\t\tko.utils.arrayForEach(self.items(), function (item) {\n\t\t\tif(! item.hasOwnProperty('answer')) item.answer = true;\n\t\t});\n\n        // Ruta a la carpeta de imágenes\n        self.resources = $rootScope.resources;\n\n\t\t// Disparador de preguntas correctas/incorrectas\n        self.rightAnswer = ko.observable();\n        self.wrongAnswer = ko.observable();\n\n        self.success = ko.observable(false);\n        self.failure = ko.observable(false);\n\n        self.rightAnswers = 0;\n\n        self.chances = options.chances ? options.chances : options.items.length;\n\n        /**\n         * Obtiene los estilos de cada elemento\n         */\n\t\tself.getStyles = function (item) {\n\t\t\tvar styles = '';\n\n\t\t\tstyles += 'width: ' + item.w + '%;';\n\t\t\tstyles += 'height: ' + item.h + '%;';\n\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\tstyles += 'left: ' + item.l + '%;';\n\n        \treturn styles;\n        }\n\n\t\t/**\n\t\t *\tFunción que se ejecuta al soltar el objeto dentro del contenedor\n\t\t */\n        self.verifyAnswer = function (arg) {\n\n            // No hacer nada y salir de la función, si el elemento se soltó en el mismo grupo inicial\n            if(arg.sourceParent() == arg.targetParent()) return;\n\n            // Calculamos si la respuesta es correcta o no usando la propiedad 'answer'\n            if (arg.item.answer) {\n                // Respuesta correcta\n                self.rightAnswer(arg.item);\n                self.rightAnswers++;\n\n                // Llama a la función de respuesta buena\n\t\t\t\tif (typeof options.rightAnswerCallback !== \"undefined\") options.rightAnswerCallback();\n\n            } else {\n                // Respuesta Incorrecta\n                self.wrongAnswer(arg.item);\n                arg.cancelDrop = true; // Devuelve el elemento a su posición origina\n            }\n\n            // Reducimos las posibilidades\n            self.chances--;\n\n            // Fin de la actividad\n            if (self.chances === 0) {\n                if(self.rightAnswers >= options.minRightAnswers) {\n                    // éxito\n                    self.success(true);\n\n                    // Llama a la función de éxito\n                    if (typeof options.successCallback !== \"undefined\") options.successCallback();\n\n                    // Activamos la siguiente ruta\n\t\t\t\t\t$rootScope.isNextEnabled = true;\n                } else {\n                    // Fracaso\n                    self.failure(true);\n                }\n            }\n        };\n\n    };\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con dropOutActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n    dropOutActivity.run = function (instance) {\n    \tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n    };\n\n\treturn dropOutActivity;\n});\n\nlizDropOut.directive('dropOut', function  (dropOutActivity) {\n    return {\n        restrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@'\n\t\t},\n        templateUrl: '../views/activities/drop_out.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\tdropOutActivity.run(dropOutActivity.create(scope.options));\n        }\n    }; \n});\n\n","var lizGiraffe = angular.module('lizGiraffe', ['factories']);\n\nlizGiraffe.directive('giraffe', function  (shuffleArrayFactory) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\taudio: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/giraffe.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\t// Vamos contando el número de respuestas incorrectas\n\t\t\t// Con el fin de tener una forma de reiniciar la tabla\n\t\t\tvar wrongAnswers = 0; \n\n\t\t\tscope.number = 0; // Número que se multiplica con el valor actual de la tabla\n\t\t\tscope.balloons = []; // Posibles respuestas\n\t\t\tscope.answers = []; // Array de respuestas. Usado para mostrar cuantas respuestas lleva\n\n\t\t\t// Si existe la sesión, se asigna a table\n\t\t\tif(sessionStorage.getItem('table')){\n\t\t\t\tscope.table = sessionStorage.getItem('table');\n\t\t\t} else {\n\t\t\t\tscope.table = 2; // Tabla actual\n\t\t\t}\n\n\t\t\t// Calificaciones\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.rightAnswer = false;\n\n\t\t\t// Guardamos el número usando sessionStorage\n\t\t\tsessionStorage.setItem('table', scope.table);\n\n\t\t\t/**\n\t\t\t * Genera la nueva operación.\n\t\t\t */\n\t\t\tscope.generateOperation = function () {\n\t\t\t\tvar balloonSeed = 0; // Usado para alimentar el array balloons\n\n\t\t\t\tscope.balloons.length = 0; // Reinicia el array\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(scope.number === 9 && scope.table === 9){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\tscope.success = true;\n\n\t\t\t\t\t// Removemos el elemento de sessionStorage\n\t\t\t\t\tsessionStorage.removeItem('table'); // Actualiza sessionStorage\n\t\t\t\t}\n\n\t\t\t\t// Cuando llegue a ser 9, se reinicia a 0 y se cambia de tabla\n\t\t\t\tif(scope.number === 9){\n\t\t\t\t\tscope.rightAnswer = Math.random(); // Dispara el ícono de respuesta correcta\n\t\t\t\t\tscope.number = 0;\n\t\t\t\t\tscope.table++;\n\t\t\t\t\twrongAnswers = 0; \n\t\t\t\t\tsessionStorage.setItem('table', scope.table); // Actualiza sessionStorage\n\n\t\t\t\t\t// Reinicia las respuestas\n\t\t\t\t\tscope.answers.length = 0;\n\t\t\t\t}\n\n\t\t\t\t// Aumentamos el número en 1\n\t\t\t\tscope.number++;\n\n\t\t\t\t// Generamos inicialmente la respuesta y la añadimos\n\t\t\t\tscope.balloons.push({\n\t\t\t\t\tnumber: scope.table * scope.number\n\t\t\t\t});\n\n\t\t\t\t// Luego, añadimos otros 6 elementos, generados aleatoriamente\n\t\t\t\tfor(var i = 0; i < 6; i++){\n\t\t\t\t\t// Generamos números, teniendo en cuenta que el número no puede\n\t\t\t\t\t// ser igual a la respuesta\n\t\t\t\t\tdo{\n\t\t\t\t\t\tballoonSeed = Math.floor( Math.random() * (100 - 2) + 2 );\n\t\t\t\t\t} while(balloonSeed === scope.balloons[0].number);\n\n\t\t\t\t\t// Añadimos el elemento\n\t\t\t\t\tscope.balloons.push({ number: balloonSeed });\n\t\t\t\t}\n\n\t\t\t\t// Después, se baraja el array\n\t\t\t\tshuffleArrayFactory.run(scope.balloons);\n\t\t\t\t\n\t\t\t};\n\n\t\t\t// Generamos el primer valor a mostrar\n\t\t\tscope.generateOperation();\n\n\t\t\t/**\n\t\t\t * Verifica la operación\n\t\t\t */\n\t\t\tscope.verify = function (balloon) {\n\n\t\t\t\tif(balloon.number === scope.number * scope.table){\n\t\t\t\t\t// Respuesta Correcta\n\t\t\t\t\tscope.answers.push({\n\t\t\t\t\t\tright: true\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Respuesta Incorrecta\n\t\t\t\t\twrongAnswers++;\n\n\t\t\t\t\tscope.answers.push({\n\t\t\t\t\t\tright: false\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Si tiene al menos 4 respuestas incorrectas, reinicia la actividad\n\t\t\t\tif(wrongAnswers === 4){\n\t\t\t\t\tscope.failure = true;\n\t\t\t\t}\n\n\t\t\t\t// Al final de la verificación, se genera nuevamente la operación\n\t\t\t\tscope.generateOperation();\n\t\t\t};\n\n\t\t}\n\t}; \n});\n","var lizGreaterLowerMat = angular.module('lizGreaterLowerMat', ['factories']);\n\nlizGreaterLowerMat.factory('greaterLowerMatActivity', function ($rootScope, shuffleArrayFactory) {\n\n\tvar greaterLowerMatActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tgreaterLowerMatActivity.create = function (options) {\n\t\treturn new greaterLowerMatActivity._ViewModel(options);\n\t};\n\n\tgreaterLowerMatActivity._ViewModel = function (options) {\n\t\tvar self = this,\n\t\t\topt = options, // Alias de options\n\t\t\tnewPair = {}, // Variable auxiliar para alimentar a self.numbers\n\t\t\tchances = opt.hasOwnProperty('chances') ? opt.chances : opt.numbers.length,\n\t\t\tminRightAnswers = opt.minRightAnswers;\n\t\t\n\n\n\t\tself.playAudio = function () {\n\t\t\t$('#audio-instruction')[0].play();\n\t\t};\n\n\t\t// Contantes para comparar\n\t\tvar GREATER = 1,\n\t\t\tLOWER = 2;\n\n\t\t// Parejas de números\n\t\tself.numbers = ko.observableArray([]);\n\n\t\t// Símbolos a arrastrar\n\t\tself.greaterSymbol = ko.observable({ id: GREATER, symbol: 'Contando: 4, 6, 8;' });\n\t\tself.lowerSymbol = ko.observable({ id: LOWER, symbol: 'Contando: 4, 6, 8;' });\n\n\t\t// Constructor de las parejas de números\n\t\topt.numbers.forEach(function(number){\n\t\t\tnewPair = {\n\t\t\t\tsortable: ko.observableArray([]),\n\t\t\t\tleft: number[0],\n\t\t\t\tright: number[1]\n\t\t\t};\n\n\t\t\tnewPair.sortable.id = (number[0] > number[1]) ? GREATER : LOWER// tomamos en cuenta solamente si left es mayor a right\n\t\t\tself.numbers.push(newPair); // Añadimos al array\n\t\t});\n\n\t\t// Carpeta de recursos desde angular\n\t\tself.resources = $rootScope.resources;\n\n\t\tself.maximumElements = 1; // IMPORTANTE: Requerido para que los sortables no acepten más de un elemento\n\t\tself.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\t\tself.failure = ko.observable(false);\n\t\tself.success = ko.observable(false);\n\n\t\t// Define si el target esta lleno utilizando self.maximumElements\n\t\tself.isContainerFull = function (parent) {\n\t\t\treturn parent().length < self.maximumElements;\n\t\t};\n          \n\n         \n\n\t\t// Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\n\t\tself.verifyAnswer = function (arg) {\n\t\t\tvar parent = arg.targetParent,\n\t\t\titem = arg.item;\n\n\t\t\tif(parent.id === item.id){\n\t\t\t\t// RESPUESTA CORRECTA\n\t\t\t\tself.rightAnswers++;\n\t\t\t\tself.rightAnswer(item);\n\n\t\t\t\t// Si se definió una función cuando la respuesta es correcta, se corre\n\t\t\t\tif(typeof opt.rightAnswerCallback !== \"undefined\" ) opt.rightAnswerCallback(item);\n\t\t\t} else {\n\t\t\t\t// RESPUESTA INCORRECTA\n\t\t\t\tself.wrongAnswer(item);\n\t\t\t}\n\n\t\t\t// Reducimos en 1 las posibilidades\n\t\t\tchances--;\n\n\t\t\t// La actividad termina cuando el número de posibilidades se termina\n\t\t\tif(chances === 0) {\n\t\t\t\t// Si el número de respuestas correctas es mayor o igual al requerido inicialmente\n\t\t\t\tif(self.rightAnswers >= minRightAnswers) {\n\t\t\t\t\tself.success(true); // Trigger de éxito\n\n\t\t\t\t\t// Se llama la función de éxito, definida por el desarrollador\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback();\n\n\t\t\t\t\t$rootScope.isNextEnabled = true; // Activamos el siguiente\n\t\t\t\t} else {\n\t\t\t\t\tself.failure(true); // Trigger de fracaso\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con greaterLowerThanActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\tgreaterLowerMatActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn greaterLowerMatActivity;\n\n});\n\nlizGreaterLowerMat.directive('greaterLowerMat', function  (greaterLowerMatActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\timg: '@',\n\t\t\talt: '@',\n\t\t\taudio:'@',\n\t\t\ttheme: '@'\n\n\t\t},\n\t\ttemplateUrl: '../views/activities/greater_lower_mat.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tvar vm = greaterLowerMatActivity.create(scope.options);\n\t\t\tgreaterLowerMatActivity.run(vm);\n\n\t\t\tattrs.$observe( 'theme', function(val) {\n\t\t\t\tif ( !angular.isDefined( val ) ) {\n\t\t\t\t\tscope.theme = 'default';\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}; \n});\n","var lizGreaterLowerThan = angular.module('lizGreaterLowerThan', ['factories']);\n\nlizGreaterLowerThan.factory('greaterLowerThanActivity', function ($rootScope, shuffleArrayFactory) {\n\n\tvar greaterLowerThanActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tgreaterLowerThanActivity.create = function (options) {\n\t\treturn new greaterLowerThanActivity._ViewModel(options);\n\t};\n\n\tgreaterLowerThanActivity._ViewModel = function (options) {\n\t\tvar self = this,\n\t\t\topt = options, // Alias de options\n\t\t\tnewPair = {}, // Variable auxiliar para alimentar a self.numbers\n\t\t\tchances = opt.hasOwnProperty('chances') ? opt.chances : opt.numbers.length,\n\t\t\tminRightAnswers = opt.minRightAnswers;\n\n\t\tself.playAudio = function () {\n\t\t\t$('#audio-instruction')[0].play();\n\t\t};\n\n\t\t// Contantes para comparar\n\t\tvar GREATER = 1,\n\t\t\tLOWER = 2;\n\n\t\t// Parejas de números\n\t\tself.numbers = ko.observableArray([]);\n\n\t\t// Símbolos a arrastrar\n\t\tself.greaterSymbol = ko.observable({ id: GREATER, symbol: '&gt;' });\n\t\tself.lowerSymbol = ko.observable({ id: LOWER, symbol: '&lt;' });\n\n\t\t// Constructor de las parejas de números\n\t\topt.numbers.forEach(function(number){\n\t\t\tnewPair = {\n\t\t\t\tsortable: ko.observableArray([]),\n\t\t\t\tleft: number[0],\n\t\t\t\tright: number[1]\n\t\t\t};\n\n\t\t\tnewPair.sortable.id = (number[0] > number[1]) ? GREATER : LOWER// tomamos en cuenta solamente si left es mayor a right\n\t\t\tself.numbers.push(newPair); // Añadimos al array\n\t\t});\n\n\t\t// Carpeta de recursos desde angular\n\t\tself.resources = $rootScope.resources;\n\n\t\tself.maximumElements = 1; // IMPORTANTE: Requerido para que los sortables no acepten más de un elemento\n\t\tself.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\t\tself.failure = ko.observable(false);\n\t\tself.success = ko.observable(false);\n\n\t\t// Define si el target esta lleno utilizando self.maximumElements\n\t\tself.isContainerFull = function (parent) {\n\t\t\treturn parent().length < self.maximumElements;\n\t\t};\n\n\n\t\t// Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\n\t\tself.verifyAnswer = function (arg) {\n\t\t\tvar parent = arg.targetParent,\n\t\t\titem = arg.item;\n\n\t\t\tif(parent.id === item.id){\n\t\t\t\t// RESPUESTA CORRECTA\n\t\t\t\tself.rightAnswers++;\n\t\t\t\tself.rightAnswer(item);\n\n\t\t\t\t// Si se definió una función cuando la respuesta es correcta, se corre\n\t\t\t\tif(typeof opt.rightAnswerCallback !== \"undefined\" ) opt.rightAnswerCallback(item);\n\t\t\t} else {\n\t\t\t\t// RESPUESTA INCORRECTA\n\t\t\t\tself.wrongAnswer(item);\n\t\t\t}\n\n\t\t\t// Reducimos en 1 las posibilidades\n\t\t\tchances--;\n\n\t\t\t// La actividad termina cuando el número de posibilidades se termina\n\t\t\tif(chances === 0) {\n\t\t\t\t// Si el número de respuestas correctas es mayor o igual al requerido inicialmente\n\t\t\t\tif(self.rightAnswers >= minRightAnswers) {\n\t\t\t\t\tself.success(true); // Trigger de éxito\n\n\t\t\t\t\t// Se llama la función de éxito, definida por el desarrollador\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback();\n\n\t\t\t\t\t$rootScope.isNextEnabled = true; // Activamos el siguiente\n\t\t\t\t} else {\n\t\t\t\t\tself.failure(true); // Trigger de fracaso\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con greaterLowerThanActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\tgreaterLowerThanActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn greaterLowerThanActivity;\n\n});\n\nlizGreaterLowerThan.directive('greaterLowerThan', function  (greaterLowerThanActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/greater_lower_than.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tvar vm = greaterLowerThanActivity.create(scope.options);\n\t\t\tgreaterLowerThanActivity.run(vm);\n\t\t}\n\t}; \n});\n","var lizGroupChoiceWords = angular.module('lizGroupChoiceWords', []);\n\nlizGroupChoiceWords.directive('groupChoiceWords', function  (shuffleArrayFactory) {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_choice_words.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\ttitleBlock: '@',\n\t\t\tblockText: '@',\n\t\t\tstyle: '@',\n\t\t\tmainimg: '@',\n\t\t\ttitletop:'@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.examples = scope.options.examples;\n\t\t\tscope.itemsrow = scope.options.itemsrow;\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.customClass = (scope.options.customClass) ? scope.options.customClass : \"\";\n\t\t\tscope.words = [];\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\trandom = scope.options.hasOwnProperty('random') ? scope.options.random : true; // Verdadero por defecto\n\n\n\t\t\tvar items = scope.items;\n\n\t\t   // Constructor de palabras\n\t\t   for(var j=0; j < items.length; j++){\n\n\t\t   \tvar string = items[j].text;\n\t\t\tvar words = string.split(\" \");\n\n\t\t\tscope.items[j].words = [];\n\t\t\t\n\t\t\t\t\n\t\t\t\tfor(var i=0; i < words.length; i++){\n\n\t\t\t\t\tif( scope.items[j].pattern.indexOf(i) > -1 ){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(random) shuffleArrayFactory.run(scope.items[j][\"answers\"+i]); // baraja\n\t\t\t\t\t\t\tscope.items[j][\"answers\"+i].unshift({\n\t\t\t\t\t\t          \ttext: \"Elige una respuesta\",\n\t\t\t\t\t\t          \tdefault: true\n\t\t\t\t\t\t\t      });\n\t\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t  isInput: true,\n\t\t\t\t\t\t\t      chances: 2,\n\t\t\t\t\t\t\t      answers: scope.items[j][\"answers\"+i],\n\t\t\t\t\t\t\t      rightAnswer: scope.items[j][\"answers\"+i].filter(function (answer) {\n\t\t\t\t\t\t\t          return answer.answer;\n\t\t\t\t\t\t          })[0],\n\t\t\t\t\t\t          selectedAnswer: scope.items[j][\"answers\"+i][0] // elige la primera, en este caso, \"elige una respuesta\"\n\t\t\t\t\t      \t});\t\n\t\t\t\t\t      \t if(scope.items[j].hasOwnProperty('default')){\n\t\t\t\t\t      \t \titem =  scope.items[j].words[i];\n\t\t\t\t\t      \t \t  scope.rightAnswer = Math.random();\n\t\t\t\t\t\t          rightAnswers += 1;\n\t\t\t\t\t\t          item.right = true\n\t\t\t\t\t\t          item.wrong = false\n\t\t\t\t\t\t          item.completed = true;\n\t\t\t\t\t\t          item.selectedAnswer = item.rightAnswer;\n\t\t\t\t\t\t      }\n\n\t\t\t\t\t}else{\n\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t isInput: false,\n\t\t\t\t\t\t\t     word: (words[i])\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t/**\n\t\t * Verifica si el input cumple con las condiciones del número \n\t\t */\n\t\tscope.verify = function (item,q) {\n\t        if(item.selectedAnswer.default) return; // Es \"Elige una respuesta\"\n\n\t        if(item.selectedAnswer.answer) {\n\t          scope.rightAnswer = Math.random();\n\t          rightAnswers += 1;\n\t          item.right = true\n\t          item.wrong = false\n\t          item.completed = true;\n\t        } else {\n\t          scope.wrongAnswer = Math.random();\n\t          item.chances -= 1;\n\t          item.right = false\n\t          item.wrong = true\n\t          if(item.chances === 0) {item.completed = true;q.callback = item.rightAnswer.text;}\n\t        }\n\n\t        // Contamos los elementos terminados\n\t        var questions = 0\n\t        var completedItems = 0\n\t        scope.items.forEach(function(q) {\n\t\t\t   q.words.forEach(function(w) {\n\t\t\t   \t\tif(w.hasOwnProperty('answers')){\n\t        \t\t\tquestions ++\n\t          \t\t};\n\t\t\t    \tif(w.hasOwnProperty('completed')){\n\t        \t\t\tcompletedItems ++\n\t          \t\t};\n\t\t\t\t});\n\t\t\t});\n\t        \n\t        if(completedItems === questions) {\n\t          if(rightAnswers >= minRightAnswers) {\n\t\t          scope.$root.isNextEnabled = true;\n\t\t          scope.success = true;\n\t\t          return true;\n\t\t        }\n\n\t\t        scope.failure = true;\n\t\t        return false;\n\t        }\n     \t};\n\n\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupClassifyTable = angular.module('lizGroupClassifyTable', []);\n\nlizGroupClassifyTable.directive('groupClassifyTable', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_classify_table.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\ttitleBlock: '@',\n\t\t\tblockText: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.list = scope.options.list;\n\t\t\tscope.words = [];\n\t\t\tscope.wordIn = false;\n\t\t\tscope.count = false;\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.itemsStyle = scope.options.itemsStyle;\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\n\t\t\t\n\n\t\t\tvar items = scope.items;\n\n\t\t   // Constructor de palabras\n\t\t   for(var j=0; j < items.length; j++){\n\n\t\t\t   \tvar string = items[j].text;\n\t\t\t\tvar words = string.split(\" \");\n\n\t\t\t\tscope.items[j].words = [];\n\n\t\t\t\n\t\t\t\t\n\t\t\t\tfor(var i=0; i < words.length; i++){\n\n\t\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t  isInput: true,\n\t\t\t\t\t\t\t      input: '',\n\t\t\t\t\t\t\t      word: (words[i]),\n\t\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\t\n\t\t\tscope.verify = function (item,word,pattern,items) {\n\t\t\t\tvar chancesPerItem = 1\n\t\t\t\tif(word.wrong === true){chancesPerItem = 0}\n\t\t\t\t\n\t\t\t\t\t// Recorremos el grupo y sus items\n\t\t\t        pattern.forEach(function (wordx) {\n\t\t\t        \t\n\t\t\t        \tif(item === wordx.input && item != ''){\n\t\t\t        \t\tscope.count ++\n\t\t          \t\t}\t\t\t\t      \n\t\t\t\t\t  \n\t\t\t        });\t\t\t     \n\n\t\t\t      \tif(scope.count >= 2){\n\t          \t\t\tscope.wordIn = true\n\t          \t\t\tscope.count = 0\n\t          \t\t}else{scope.wordIn = false;scope.count = 0}\n\n\t\t\t\tif(item === '' || scope.wordIn === true) return; \n\t\t\t\t\n\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\n\t\t\t\tfor(var i=0; i < pattern.length; i++){\n\t\t\t\t\tif( item.indexOf(pattern[i].word) > -1 ){\n\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\tchances--;\n\t\t\t\t\t\tword.wrong = false;\n\t\t\t\t\t\tword.right = true;\n\t\t\t\t\t\tword.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\tbreak\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(items.hasOwnProperty('answer2')){\n\t\t\t\t\t\t\tif(item === items.answer2){\n\t\t\t\t\t\t\t\tchances--;\n\t\t\t\t\t\t\t\tword.wrong = false;\n\t\t\t\t\t\t\t\tword.right = true;\n\t\t\t\t\t\t\t\tword.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t       \tword.right = false;\n\t\t\t\t\t\t\t\t\tword.wrong = true;\n\t                    \t\t}\n\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tword.right = false;\n\t\t\t\t\t\t\tword.wrong = true;\n                    \t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(word.wrong === true && chancesPerItem === 0){\n\t\t\t\t\t\tword.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\tchancesPerItem = 1\n\t\t\t\t\t\tchances--;\n\t\t\t\t\t\titem =\"\";\n\t\t\t\t\t}else{chancesPerItem = 0 ;}\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t}; // verify()\n\n\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupCompleteFreeConditions = angular.module('lizGroupCompleteFreeConditions', []);\n\nlizGroupCompleteFreeConditions.directive('groupCompleteFreeConditions', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_complete_free_conditions.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\taddicon: '@',\n\t\t\tinstruction: '@'\n\n\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.examples = scope.options.examples;\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-right: \" + (10 / scope.itemsPerRow) + \"%!important;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\t\t\n\t\t\t/**\n\t\t\t * Definimos nuestra función beforeGoNext para que muestre el cuadro de felicitaciones\n\t\t\t */\n\t\t\tscope.$root.beforeGoNext = function () {\n\t\t\t\tscope.success = true;\n\t\t\t\treturn true; \n\t\t\t};\n\t\t   \n\t\t\t/**\n\t\t\t * Verifica si el todos los inputs cumplen la longitud minima de caracteres \n\t\t\t */\n\t\t\t \n\t\t\tscope.verify = function (item) {\n\t\t\t\t// Filtramos el array buscando los inputs que cumplen los requisitos y los contamos\n\t\t\t\t\n\t\t\t  \n\t\t\t\t   \tvar string = item.input;\n\t\t\t\t\tvar words = string.split(\" \");\n\n\t\t\t\t\titem.words = [];\n\t\t\t\t\titem.complete = [];\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tfor(var i=0; i < words.length; i++){\n\n\t\t\t\t\t\tif( item.pattern.indexOf(words[i]) > -1 ){\n\t\t\t\t\t\t\t\titem.words.push({\n\t\t\t\t\t\t\t\t\t  isInput: true,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t} \n\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\n\n\n\t\t\t\t// Si se han completado todos\n\n\t\t\t\tif ((item.words.length >= item.pattern.length || item.pattern[0] === \"free\" ) && item.input.length >= item.length) {\n\n\t\t\t\t\t/*item.complete.push({\n\t\t\t\t\t\t\t\t\t  complete: true,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t});*/\n\t\t\t\t\titem.wrong = false;\n\t\t\t\t\titem.right = true;\n\t\t\t\t\tvar completedInputs = scope.items.filter(function(item){\n\t\t\t\t\t\treturn item.right === true && item.input.length >= item.length;\n\t\t\t\t\t}).length;\n\n\t\t\t\t\t// Si se han completado todos\n\t\t\t\t\t\tif (completedInputs === scope.items.length) {\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = false; // Desactivamos el siguiente vínculo\n\t\t\t\t\t\t}\t\n\t\t\t\t}else{\n\t\t\t\t\t\t\tif(item.right === true){\n\t\t\t\t\t\t\titem.right = false;\n\t\t\t\t\t\t\titem.wrong = true;}\n\t\t\t\t\t\t\tvar completedInputs = scope.items.filter(function(item){\n\t\t\t\t\t\t\treturn item.right === true && item.input.length >= item.length;\n\t\t\t\t\t\t\t}).length;\n\n\t\t\t\t\t\t\t// Si se han completado todos\n\t\t\t\t\t\t\t\tif (completedInputs === scope.items.length) {\n\t\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = false; // Desactivamos el siguiente vínculo\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t}\t\n\n\t\t\t}; // verify()\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupCompleteImages = angular.module('lizGroupCompleteImages', []);\n\nlizGroupCompleteImages.directive('groupCompleteImages', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_complete_images.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\ttitleBlock: '@',\n\t\t\tblockText: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.images = scope.items.images;\n\t\t\tscope.words = [];\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-right: \" + (10 / scope.itemsPerRow) + \"%!important;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\tvar items = scope.items;\n\n\t\t   // Constructor de palabras\n\t\t   for(var j=0; j < items.length; j++){\n\n\t\t   \tvar x = -1\n\t\t   \tvar string = items[j].text;\n\t\t\tvar words = string.split(\" \");\n\n\t\t\tscope.items[j].words = [];\n\n\t\t\t\n\t\t\t\t\n\t\t\t\tfor(var i=0; i < words.length; i++){\n\t\t\t\t\tif( scope.items[j].pattern.indexOf(i) > -1 ){\n\t\t\t\t\t\tx++\n\t\t\t\t\t\tconsole.log(x);\n\t\t\t\t\t\tif(scope.items[j].hasOwnProperty('answer2')){\n\t\t\t\t\t\t\tif(scope.items[j].answer2[x] !=''){\n\t\t\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t\t  isInput: true,\n\t\t\t\t\t\t\t\t      input: '',\n\t\t\t\t\t\t\t\t      word: (words[i]),\n\t\t\t\t\t\t\t\t      answer2: (scope.items[j].answer2[x]),\n\t\t\t\t\t\t\t\t      img: (scope.items[j].images[x])\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t  isInput: true,\n\t\t\t\t\t\t\t      input: '',\n\t\t\t\t\t\t\t      word: (words[i]),\n\t\t\t\t\t\t\t      img: (scope.items[j].images[x])\n\t\t\t\t\t      \t});\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t  isInput: true,\n\t\t\t\t\t\t\t      input: '',\n\t\t\t\t\t\t\t      word: (words[i]),\n\t\t\t\t\t\t\t      img: (scope.items[j].images[x])\n\t\t\t\t\t      \t});\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconsole.log(scope.items[j].words);\n\t\t\t\t\t \n\n\t\t\t\t\t} \n\n\t\t\t\t\telse{\n\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t isInput: false,\n\t\t\t\t\t\t\t     word: (words[i])\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\t var chancesPerItem = 1\n\n\t\t\tscope.verify = function (item) {\n\t\t\t\tif(item.input === '') return; \n\n\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\n\t\t\t\t\tif(item.input === item.word){\n\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\tchances--;\n\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(item.hasOwnProperty('answer2')){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(item.input === item.answer2){\n\t\t\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\t\t\tchances--;\n\t\t\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t\titem.wrong ? chancesPerItem = 0: chancesPerItem = 1;\n\t\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif(chancesPerItem === 0){\n\t\t\t                    \titem.completed = true;\n\t\t\t                    \tchances--;\n\t\t\t                    \tchancesPerItem = 1;\n\t\t\t                    \t}else{item.input=\"\";}\n                    \t}\n\n\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t\titem.wrong ? chancesPerItem = 0: chancesPerItem = 1;\n\t\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif(chancesPerItem === 0){\n\t\t\t                    \titem.completed = true;\n\t\t\t                    \tchances--;\n\t\t\t                    \tchancesPerItem = 1;\n\t\t\t                    \t}else{item.input=\"\";}\n                    \t}\n\t\t\t\t\t}\n\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t}; // verify()\n\n\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupCompleteLetters = angular.module('lizGroupCompleteLetters', []);\n\nlizGroupCompleteLetters.directive('groupCompleteLetters', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_complete_letters.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\ttitleBlock: '@',\n\t\t\tblockText: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.chancesPerItem = scope.options.chancesPerItem ? scope.options.chancesPerItem : 1 ;\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.words = [];\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (96 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\t\n\t\t\t\t} \n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\t\n\t\t\tvar items = scope.items;\n\n\t\t   // Constructor de palabras\n\t\t   for(var j=0; j < items.length; j++){\n\n\t\t   \tvar string = items[j].text;\n\t\t\tvar words = string.split(\" \");\n\n\t\t\tscope.items[j].words = [];\n\n\t\t\t\n\t\t\t\t\n\t\t\t\tfor(var i=0; i < words.length; i++){\n\n\t\t\t\t\tif( scope.items[j].pattern.indexOf(i) > -1 ){\n\t\t\t\t\t\tif(scope.items[j].hasOwnProperty('answer2')){\n\t\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t  isInput: true,\n\t\t\t\t\t\t\t      input: '',\n\t\t\t\t\t\t\t      word: (words[i]),\n\t\t\t\t\t\t\t      chances: (scope.chancesPerItem),\n\t\t\t\t\t\t\t      answer2: (scope.items[j].answer2)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t  isInput: true,\n\t\t\t\t\t\t\t      input: '',\n\t\t\t\t\t\t\t      word: (words[i]),\n\t\t\t\t\t\t\t      chances: (scope.chancesPerItem)\n\t\t\t\t\t      \t});\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} \n\n\t\t\t\t\telse{\n\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t isInput: false,\n\t\t\t\t\t\t\t     word: (words[i])\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\t var chancesPerItem = 0\n\n\t\t\tscope.verify = function (item,group) {\n\t\t\t\tif(item.input === '') return; \n\n\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\n\t\t\t\t\tif(item.input === item.word){\n\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\tchances--;\n\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(item.hasOwnProperty('answer2')){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(item.input === item.answer2){\n\t\t\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\t\t\tchances--;\n\t\t\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\titem.chances--\n\t\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif(item.chances === 0){\n\t\t\t                    \titem.completed = true;\n\t\t\t                    \tchances--;\n\t\t\t                    \tchancesPerItem = 0;\n\t\t\t                    \tgroup.feedback = typeof group.feedback !== \"undefined\" ? item.answer2 : group.feedback + \", \" + item.answer2 ;\n\t\t\t                    \t}else{item.input=\"\";}\n                    \t}\n\n\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t\titem.chances--\n\t\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif(item.chances === 0){\n\t\t\t                    \titem.completed = true;\n\t\t\t                    \tchances--;\n\t\t\t                    \tchancesPerItem = 0;\n\t\t\t\t\t\t\t\t\tgroup.feedback = typeof group.feedback === \"undefined\" ? item.word : group.feedback + \", \" + item.word ;\n\t\t\t                    \t}else{item.input=\"\";}\n                    \t}\n\t\t\t\t\t}\n\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t}; // verify()\n\n\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupCompleteSound = angular.module('lizGroupCompleteSound', []);\n\nlizGroupCompleteSound.directive('groupCompleteSound', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_complete_sound.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\taddicon:'@' \n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.selectedItem = false; // elemento seleccionado\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.text = scope.items.text;\n\t\t\tminRightAnswers = scope.options.minRightAnswers;\n\t\t\tscope.nodisabled = scope.options.nodisabled;//desactiva el bloqueo del input\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\tcompletedItems = 0;\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow === 2){\n\t\t\t\t\tstyles += \"width: \" + (98 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t} \n\t\t\t\tif (scope.itemsPerRow === 3) {\n\t\t\t\t\tstyles += \"width: \" + (97 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\tif (scope.itemsPerRow === 5) {\n\t\t\t\t\tstyles += \"width: \" + (97 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\tif (scope.itemsPerRow === 1) {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\t/*styles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";*/\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles2 = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow === 2){\n\t\t\t\t\tstyles += \"width: 22%\";\n\t\t\t\t} \n\t\t\t\tif (scope.itemsPerRow === 3) {\n\t\t\t\t\tstyles += \"width: 35%\";\n\t\t\t\t\t/*styles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";*/\n\t\t\t\t}\n\t\t\t\tif (scope.itemsPerRow === 5) {\n\t\t\t\t\tstyles += \"width: 35%\";\n\t\t\t\t\t/*styles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";*/\n\t\t\t\t}\n\t\t\t\tif (scope.itemsPerRow === 1) {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\t/*styles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";*/\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\t\t\t/*margin-top: -7%;\n\t\t\tleft: 44%;*/\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles3 = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow === 2){\n\t\t\t\t\tstyles += \"width: 76%\";\n\t\t\t\t}\n\t\t\t\tif (scope.itemsPerRow === 3) {\n\t\t\t\t\tstyles += \"width: 62%\";\n\t\t\t\t}\n\t\t\t\tif (scope.itemsPerRow === 5) {\n\t\t\t\t\tstyles += \"width: 62%\";\n\t\t\t\t}\n\t\t\t\tif (scope.itemsPerRow === 1) {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\t\t\t\t\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\n\n\t\t\t\t// Contamos los elementos completos\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\tcompletedItems++;\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === scope.items.length){\n\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t   \n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\t var chancesPerItem = 1\n\n\n\t\t\tscope.verify = function (item) {\n\t\t\t\t\n\t\t\t\tif((item.input === '' ) || ! item.hasOwnProperty('input')) return; \n\n\t\t\t\t\n\t\t\t\t\tif ( (item.input === item.text) || (item.text === \"free\" && item.input.length >= item.length) || ( item.hasOwnProperty('answer2') && item.input === item.answer2 && item.input.length >= item.length) ){\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(!item.completed){\n\t\t\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\t\t\tchances--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\t\t\n\t\t\t\t\t} \n\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\titem.wrong ? chancesPerItem = 0: chancesPerItem = 1;\n\t\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(chancesPerItem === 0){\n\t\t                    \titem.input = \"La respuesta correcta es: \" + item.text;\n\t\t                    \titem.completed = true;\n\t\t                    \tchances--;\n\t\t                    \tchancesPerItem = 1;\n\t\t                    \t}\n\t\t                    \telse{item.input =\"\";}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \t\t\t\t\t\n\t\t\t}; // verify()\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupCompleteSounds = angular.module('lizGroupCompleteSounds', []);\n\nlizGroupCompleteSounds.directive('groupCompleteSounds', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_complete_sounds.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\taddicon:'@' \n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.selectedItem = false; // elemento seleccionado\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.text = scope.items.text;\n\t\t\tminRightAnswers = scope.options.minRightAnswers;\n\t\t\tscope.nodisabled = scope.options.nodisabled;//desactiva el bloqueo del input\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\tcompletedItems = 0;\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow === 2){\n\t\t\t\t\tstyles += \"width: \" + (98 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t} \n\t\t\t\tif (scope.itemsPerRow === 3) {\n\t\t\t\t\tstyles += \"width: \" + (97 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\tif (scope.itemsPerRow === 5) {\n\t\t\t\t\tstyles += \"width: \" + (97 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\tif (scope.itemsPerRow === 1) {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\t/*styles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";*/\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles2 = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow === 2){\n\t\t\t\t\tstyles += \"width: 22%\";\n\t\t\t\t} \n\t\t\t\tif (scope.itemsPerRow === 3) {\n\t\t\t\t\tstyles += \"width: 35%\";\n\t\t\t\t\t/*styles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";*/\n\t\t\t\t}\n\t\t\t\tif (scope.itemsPerRow === 5) {\n\t\t\t\t\tstyles += \"width: 35%\";\n\t\t\t\t\t/*styles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";*/\n\t\t\t\t}\n\t\t\t\tif (scope.itemsPerRow === 1) {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\t/*styles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";*/\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\t\t\t/*margin-top: -7%;\n\t\t\tleft: 44%;*/\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles3 = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow === 2){\n\t\t\t\t\tstyles += \"width: 76%\";\n\t\t\t\t}\n\t\t\t\tif (scope.itemsPerRow === 3) {\n\t\t\t\t\tstyles += \"width: 62%\";\n\t\t\t\t}\n\t\t\t\tif (scope.itemsPerRow === 5) {\n\t\t\t\t\tstyles += \"width: 62%\";\n\t\t\t\t}\n\t\t\t\tif (scope.itemsPerRow === 1) {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\t\t\t\t\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\n\n\t\t\t\t// Contamos los elementos completos\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\tcompletedItems++;\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === scope.items.length){\n\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t   \n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\t var chancesPerItem = 1\n\n\n\t\t\tscope.verify = function (item) {\n\t\t\t\t\n\t\t\t\tif((item.input === '' ) || ! item.hasOwnProperty('input')) return; \n\n\t\t\t\t\n\t\t\t\t\tif ( (item.input === item.text) || (item.text === \"free\" && item.input.length >= item.length) || ( item.hasOwnProperty('answer2') && item.input === item.answer2 && item.input.length >= item.length) ){\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(!item.completed){\n\t\t\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\t\t\tchances--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\t\t\n\t\t\t\t\t} \n\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\titem.wrong ? chancesPerItem = 0: chancesPerItem = 1;\n\t\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(chancesPerItem === 0){\n\t\t                    \titem.input = \"La respuesta correcta es: \" + item.text;\n\t\t                    \titem.completed = true;\n\t\t                    \tchances--;\n\t\t                    \tchancesPerItem = 1;\n\t\t                    \t}\n\t\t                    \telse{item.input =\"\";}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \t\t\t\t\t\n\t\t\t}; // verify()\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupCompleteText = angular.module('lizGroupCompleteText', []);\n\nlizGroupCompleteText.directive('groupCompleteText', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_complete_text.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.text = scope.items.text;\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tchancesPerItem = scope.options.chancesPerItem ? scope.options.chancesPerItem : 1\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-right: \" + (10 / scope.itemsPerRow) + \"%!important;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\t\t\n\n\t\t   \n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\tscope.verify = function (item) {\n\t\t\t\t\n\t\t\t\tif((item.input === '' ) || ! item.hasOwnProperty('input')) return; \n\n\t\t\t\t\n\n\t\t\t\t\tif (item.input === item.text || (item.hasOwnProperty('answer2') && item.input === item.answer2)){\t\t\t\t\t\t\n\t\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\t\tchances--;\n\t\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\t\t\n\t\t\t\t\t} \n\t\t\t\t\telse {\n\t\t\t\t\t\t\titem.wrong ? chancesPerItem = scope.options.chancesPerItem ? scope.options.chancesPerItem - 1 : chancesPerItem = 1 : chancesPerItem = scope.options.chancesPerItem ? scope.options.chancesPerItem : chancesPerItem = 1 ;\n\t\t\t\t\t\t\tchancesPerItem--\t\n\t\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(chancesPerItem === 0){\n\t\t                    \titem.completed = true;\n\t\t                    \tchances--;\n\t\t                    \tchancesPerItem = scope.options.chancesPerItem ? scope.options.chancesPerItem : 1\n\t\t                    \t}\n\t\t                    \telse{item.input=\"\";}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \t\t\t\t\t\n\t\t\t}; // verify()\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupCompleteTextFree = angular.module('lizGroupCompleteTextFree', []);\n\nlizGroupCompleteTextFree.directive('groupCompleteTextFree', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_complete_text_free.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\ttitleBlock: '@',\n\t\t\tblockText: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.text = scope.items.text;\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-right: \" + (10 / scope.itemsPerRow) + \"%!important;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\t\t\n\t\t\t/**\n\t\t\t * Definimos nuestra función beforeGoNext para que muestre el cuadro de felicitaciones\n\t\t\t */\n\t\t\tscope.$root.beforeGoNext = function () {\n\t\t\t\tscope.success = true;\n\t\t\t\treturn true; \n\t\t\t};\n\t\t   \n\t\t\t/**\n\t\t\t * Verifica si el todos los inputs cumplen la longitud minima de caracteres \n\t\t\t */\n\t\t\t \n\t\t\tscope.verify = function (item) {\n\t\t\t\t// Filtramos el array buscando los inputs que cumplen los requisitos y los contamos\n\t\t\t\t\n\t\t\t\tvar completedInputs = scope.items.filter(function(item){\n\t\t\t\t\treturn item.input.length >= item.length && item.input;\n\t\t\t\t}).length;\n\n\t\t\t\t// Si se han completado todos\n\t\t\t\tif (completedInputs === scope.items.length) {\n\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\n\t\t\t\t} else {\n\t\t\t\t\tscope.$root.isNextEnabled = false; // Desactivamos el siguiente vínculo\n\t\t\t\t}\t\n\t\t\t}; // verify()\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupCompleteWords = angular.module('lizGroupCompleteWords', []);\n\nlizGroupCompleteWords.directive('groupCompleteWords', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_complete_words.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\ttitleBlock: '@',\n\t\t\tblockText: '@',\n\t\t\tstyle: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.examples = scope.options.examples;\n\t\t\tscope.itemsrow = scope.options.itemsrow;\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.customClass = (scope.options.customClass) ? scope.options.customClass : \"\";\n\t\t\tscope.words = [];\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function () {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-right: \" + (10 / scope.itemsPerRow) + \"%!important;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\tstyles += \"float: left;\";\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\tvar items = scope.items;\n\n\t\t   // Constructor de palabras\n\t\t   for(var j=0; j < items.length; j++){\n\n\t\t   \tvar string = items[j].text;\n\t\t\tvar words = string.split(\" \");\n\n\t\t\tscope.items[j].words = [];\n\n\t\t\t\n\t\t\t\t\n\t\t\t\tfor(var i=0; i < words.length; i++){\n\n\t\t\t\t\tif( scope.items[j].pattern.indexOf(i) > -1 ){\n\t\t\t\t\t\tif(scope.items[j].hasOwnProperty('answer2')){\n\t\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t  isInput: true,\n\t\t\t\t\t\t\t      input: '',\n\t\t\t\t\t\t\t      word: (words[i]),\n\t\t\t\t\t\t\t      answer2: (scope.items[j].answer2)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t  isInput: true,\n\t\t\t\t\t\t\t      input: '',\n\t\t\t\t\t\t\t      word: (words[i])\n\t\t\t\t\t      \t});\n\n\t\t\t\t\t\t}\n\t\t\t\t\t \n\n\t\t\t\t\t} \n\n\t\t\t\t\telse{\n\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t isInput: false,\n\t\t\t\t\t\t\t     word: (words[i])\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\t var chancesPerItem = \n\t\t\t \t\t(scope.options.hasOwnProperty(\"chancesPerItem\")) ? scope.options.chancesPerItem : 1;\n\n\t\t\tscope.verify = function (item,q) {\n\t\t\t\tif(item.input === '') return; \n\n\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\n\t\t\t\t\tif(item.input.toLowerCase() === item.word.toLowerCase()){\n\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\tchances--;\n\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(item.hasOwnProperty('answer2')){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(item.input.toLowerCase() === item.answer2.toLowerCase()){\n\t\t\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\t\t\tchances--;\n\t\t\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t\titem.wrong ? chancesPerItem = 0: chancesPerItem = 1;\n\t\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif(chancesPerItem === 0){\n\t\t\t                    \titem.completed = true;\n\t\t\t                    \titem.input = item.word;\n\t\t\t                    \tq.callback = item.answer2 ? 'Las respuestas correctas son: ' + item.word + ' Ó ' + item.answer2 : 'La respuesta correcta es: ' + item.word;\n\t\t\t                    \tchances--;\n\t\t\t                    \tchancesPerItem = (scope.options.hasOwnProperty(\"chancesPerItem\")) ? scope.options.chancesPerItem : 1;;\n\t\t\t                    \t}else{item.input=\"\";}\n                    \t}\n\n\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t\titem.wrong ? chancesPerItem = 0: chancesPerItem = 1;\n\t\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif(chancesPerItem === 0){\n\t\t\t                    \titem.completed = true;\n\t\t\t                    \titem.input = item.word;\n\t\t\t                    \tq.callback = item.answer2 ? 'Las respuestas correctas son: ' + item.word + ' Ó ' + item.answer2 : 'La respuesta correcta es: ' + item.word;\n\t\t\t                    \tchances--;\n\t\t\t                    \tchancesPerItem = (scope.options.hasOwnProperty(\"chancesPerItem\")) ? scope.options.chancesPerItem : 1;;\n\t\t\t                    \t}else{item.input=\"\";}\n                    \t}\n\t\t\t\t\t}\n\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t}; // verify()\n\n\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupCompleteYesNot = angular.module('lizGroupCompleteYesNot', []);\n\nlizGroupCompleteYesNot.directive('groupCompleteYesNot', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_complete_yes_not.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.text = scope.items.text;\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-right: \" + (10 / scope.itemsPerRow) + \"%!important;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\t\t\n\n\t\t   \n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\t var chancesPerItem = 0\n\n\n\t\t\tscope.verify = function (item) {console.log(item.input)\n\t\t\t\t\n\t\t\t\tif((item.input === '' ) || ! item.hasOwnProperty('input')) return; \n\n\t\t\t\t\n\n\t\t\t\t\tif (item.input === item.text){\t\t\t\t\t\t\n\t\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\t\tchances--;\n\t\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\t\t\n\t\t\t\t\t} \n\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\titem.wrong ? chancesPerItem = 0: chancesPerItem = 0;\n\t\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(chancesPerItem === 0){\n\t\t                    \titem.completed = true;\n\t\t                    \tchances--;\n\t\t                    \tchancesPerItem = 0;\n\t\t                    \t}\n\t\t                    \telse{item.input=\"\";}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \t\t\t\t\t\n\t\t\t}; // verify()\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupInputs = angular.module('lizGroupInputs', ['factories']);\n\nlizGroupInputs.directive('groupInputs', function  (shuffleArrayFactory) {\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\taudio: '@',\n\t\t\tdescription: '@',\n\t\t\tmainimg: '@',\n\t\t\tmainalt: '@',\n\t\t\tmaintitle: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/group_inputs.html',\n\t\tlink: function (scope, element, attrs) {\n\t\t\tvar opt = scope.options, // Alias de options\n\t\t\t\ttempInput = {}, // variable temporal para la creación de inputs\n\t\t\t\tcountInputs = 0, // número total de inputs\n\t\t\t\tinputsArray = []; // array usado para tener una referencia de todos los inputs \n\n\t\t\tscope.groups = opt.groups;\n\t\t\tscope.hasExample = (opt.hasExample) ? true : false;\n\n\t\t\t// Creamos un array para hacer el foreach en cada grupo, basado en el número de inputs\n\t\t\t// Por otro lado, insertamos el mismo elemento en un array donde estarán todos los inputs\n\t\t\t// con el fin de filtrarlo posteriormente\n\t\t\tscope.groups.forEach(function(group){\n\t\t\t\tgroup.inputs = [];\n\n\t\t\t\tcountInputs += group.numInputs; // Contamos los inputs\n\n\t\t\t\tfor(var i = 0; i < group.numInputs; i++){\n                    if  (i === 0) {\n                        var example = (group.example) ? group.example : \"\";\n                        tempInput = { value: '', example: example }; // Creamos un nuevo objeto a insertar\n                    } else {\n                        tempInput = { value: '' }; // Creamos un nuevo objeto a insertar\n                    }\n\t\t\t\t\tgroup.inputs.push(tempInput); // inserta el input en su grupo respectivo\n\t\t\t\t\tinputsArray.push(tempInput); // inserta el input en el array general\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Definimos nuestra función beforeGoNext para que muestre el cuadro de felicitaciones\n\t\t\t */\n\t\t\tscope.$root.beforeGoNext = function () {\n\t\t\t\tscope.success = true;\n\t\t\t\treturn true; \n\t\t\t};\n\n            scope.checkHasExample = function (index, input) {\n                if (index === 0 && scope.hasExample) {\n                    input.value = scope.example;\n                    return true;\n                }\n\n                return false;\n            };\n\n\t\t\t/**\n\t\t\t * Verifica el estado actual de los inputs para definir el final de la actividad\n\t\t\t */\n\t\t\tscope.verify = function (input) {\n\t\t\t\t// Filtramos el array buscando los inputs que cumplen los requisitos y los contamos\n\t\t\t\tvar completedInputs = inputsArray.filter(function(item){\n\t\t\t\t\treturn item.value !== '' && !/[\\d]/.test(input.value);\n\t\t\t\t}).length;\n\t\t\t\t// Si se han completado todos\n\t\t\t\tif (completedInputs === countInputs) {\n\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\n\t\t\t\t} else {\n\t\t\t\t\tscope.$root.isNextEnabled = false; // Desactivamos el siguiente vínculo\n\t\t\t\t}\n\t\t\t\t\n\t\t\t};\n\n\t\t}\n\t}; \n\n});\n","var lizGroupPuzzleWord = angular.module('lizGroupPuzzleWord', ['ngDragDrop']);\r\n\r\nlizGroupPuzzleWord.directive('groupPuzzleWord', function  ($compile) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      options: '=',\r\n      audio: '@',\r\n      description: '@'\r\n    },\r\n    templateUrl: '../views/activities/group_puzzle_word.html',\r\n    link: function (scope, element, attrs) {\r\n      var opt = scope.options,\r\n        replaceArray = [], // array con los índices de los targets\r\n        targetCounter = 0, // Variable temporal usada como contador\r\n        rightAnswers = 0, // contador de respuestas correctas\r\n        minRightAnswers = opt.minRightAnswers, // respuestas correctas mínimas para pasar\r\n        template = opt.template;\r\n\r\n      // Models\r\n      // --------------------------------------------------------------------\r\n      scope.groups = opt.groups;\r\n      scope.itemsPerRow = opt.itemsPerRow;\r\n      scope.preserveOriginal = opt.preserveOriginal;\r\n\r\n      scope.groups.forEach(function (g,index) {\r\n        g.id = index;\r\n        g.itemsAux = [];\r\n        g.targets = [];\r\n        g.rightAnswers = 0;\r\n\r\n        for(var i=0; i < g.items.length; i++){\r\n          targetCounter++ //incrementamos el contador para saber cuantos targets hay en total \r\n\r\n            // Creación de item y target\r\n            g.itemsAux.push({\r\n              text: g.items[i],\r\n              drag: true,\r\n            });\r\n\r\n            g.targets.push({\r\n              drop: true,\r\n              textAccept: (g.items[(i === 0 ? 1 : 0)]),\r\n              accept: g.id,\r\n              chances: 1,\r\n              model: {} // droppable\r\n            });\r\n\r\n            /**\r\n            * auqui se busca la propiedad default en el grupo para completarlo y sea el ejemplo de la actividad.\r\n            */\r\n            if(g.default){\r\n\r\n              // Respuesta correcta\r\n              g.targets[i].model.text = g.items[(i === 0 ? 1 : 0)];\r\n              g.targets[i].drop = false; // deshabilita el drop\r\n              g.targets[i].disabled = true;\r\n              g.targets[i].right = true;\r\n              g.rightAnswers++\r\n              if(g.rightAnswers === g.items.length){\r\n                rightAnswers += 1;\r\n              }\r\n\r\n               g.itemsAux[i].drag = false\r\n\r\n            }\r\n\r\n\r\n        };\r\n\r\n        g.items = g.itemsAux;\r\n      });\r\n\r\n      \r\n      scope.dropCallback = function (e, ui, target,group) {\r\n        var completedTargets = 0;\r\n        // revisa el modelo interno y compara\r\n        if(target.model.text === target.textAccept) {\r\n\r\n          // Respuesta correcta\r\n          target.drop = false; // deshabilita el drop\r\n          target.disabled = true;\r\n          target.wrong = false;\r\n          target.right = true;\r\n          group.rightAnswers++\r\n          if(group.rightAnswers === group.items.length){\r\n            rightAnswers += 1;\r\n          }\r\n          group.items.forEach(function (i) {\r\n              if(i.text === target.model.text){i.drag = false}\r\n          });\r\n        } else {\r\n          // Respuesta incorrecta\r\n          target.chances -= 1;\r\n\r\n          if(target.chances === 0) {\r\n            group.items.forEach(function (i) {\r\n                if(i.text === target.model.text){i.drag = false}\r\n            });\r\n            target.model = {}; // limpia el interno\r\n            target.disabled = true;\r\n            target.wrong = true;\r\n          }\r\n        }\r\n\r\n        // Fin de la actividad\r\n        scope.groups.forEach(function (g) {\r\n            g.items.forEach(function (i) {\r\n                  if(i.drag === false){completedTargets++}\r\n            });\r\n        });\r\n\r\n\r\n        if(completedTargets === targetCounter) {\r\n          scope.$root.isNextEnabled = true;\r\n        }\r\n      };\r\n\r\n      scope.stopCallback = function (e, ui, item,group) {\r\n       \r\n      }\r\n\r\n      /**\r\n       * Función que se ejecuta al dar click en la flecha de siguiente.\r\n       */\r\n      scope.$root.beforeGoNext = function () {\r\n        if(rightAnswers >= minRightAnswers) {\r\n          scope.success = true;\r\n          return true;\r\n        } else {\r\n          scope.failure = true;\r\n          return true;\r\n        }\r\n      };\r\n\r\n\r\n    }\r\n  };\r\n});\r\n","var lizGroupSelectMultiplesWords = angular.module('lizGroupSelectMultiplesWords', []);\n\nlizGroupSelectMultiplesWords.directive('groupSelectMultiplesWords', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_select_multiples_words.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\ttitleBlock: '@',\n\t\t\tblockText: '@',\n\t\t\tstyle: '@',\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.images = scope.options.images;\n\t\t\tscope.chancesPerItem = scope.options.chancesPerItem;\n\t\t\tscope.itemswidth = scope.options.itemswidth ? scope.options.itemswidth : '100%' ;\n\t\t\tscope.examples = scope.options.examples;\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.words = [];\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\n\t\t\tvar items = scope.items;\n\n\t\t   \t// Constructor de palabras\n\t\t   \tfor(var j=0; j < items.length; j++){\n\n\t\t\t   \tvar string = items[j].text;\n\t\t\t\tvar words = string.split(\" \");\n\n\t\t\t\tscope.items[j].words = [];\n\n\t\t\t\n\t\t\t\t\n\t\t\t\tfor(var i=0; i < words.length; i++){\n\n\t\t\t\t\tif( scope.items[j].pattern.indexOf(i) > -1 ){\n\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t  isInput: true,\n\t\t\t\t\t\t      input: '',\n\t\t\t\t\t\t      word: (words[i])\n\t\t\t\t      \t});\t\t\t\t\t \n\n\t\t\t\t\t} \n\t\t\t\t\telse{\n\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t isInput: false,\n\t\t\t\t\t\t\t     word: (words[i])\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\t var chancesPerItem = 1\n\n\t\t\tscope.verify = function (item,group) {\n\t\t\t\tif(group.hasOwnProperty('isCompleted')) return; \n\t\t\t\t\n\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\n\t\t\t\t\tif(item.isInput === true){\n\t\t\t\t\t\t\n\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\n\t\t\t\t\t\tif(!group.hasOwnProperty('rightAnswers')){\n\t\t                    \t\t\tgroup.rightAnswers = 1;\n                \t\t}else{group.rightAnswers += 1;}        \n\n\t\t\t\t\t\tif(group.rightAnswers === group.pattern.length){\n\t                    \tgroup.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t                    \tgroup.right = true\n\t                    \tchances--;\n\t                    }\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(!group.hasOwnProperty('chances')){\n\t                    \t\t\tgroup.chances = 1;\n                    \t\t}else{group.chances += 1;}\n\n\t\t\t\t\t\t\tif(group.chances === scope.chancesPerItem){\n\t\t                    \tgroup.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t                    \tchances--;\n\t\t                    \tgroup.wrong = true\n\t                    \t}\n\t                    \t\n                \t\t\titem.wrong = true;\n\t\t\t\t\t\t\titem.right = false;              \t\n\t\t\t\t\t}\n\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t}; // verify()\n\n\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupSelectWords = angular.module('lizGroupSelectWords', []);\n\nlizGroupSelectWords.directive('groupSelectWords', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_select_words.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@'\n\t\t\t\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.answer2 = scope.items.answer2;\n\t\t\tscope.selectedItem = false; // elemento seleccionado\n\t\t\tscope.selectedItem2 = false; // elemento seleccionado\n\t\t\tscope.selectedItemAux = false; // elemento seleccionado\n\t\t\tscope.words = [];\n\t\t\tscope.words.word = [];\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\tcompletedItems = 0;\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-right: \" + (10 / scope.itemsPerRow) + \"%!important;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\tvar items = scope.items;\n\n\t\t   // Constructor de palabras\n\t\t   for(var j=0; j < items.length; j++){\n\n\t\t   \tvar counter = 0;\n\t\t   \tvar string = items[j].text;\n\t\t\tvar words = string.split(\" \");\n\n\t\t\tscope.items[j].words = [];\n\n\t\t\t\n\t\t\t\t\n\t\t\t\tfor(var i=0; i < words.length; i++){\n\n\t\t\t\t\tif( scope.items[j].pattern.indexOf(i) > -1 ){\n\t\t\t\t\t\tif(scope.items[j].answer2[i]!=\"\"){\n\t\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t  isInput: true,\n\t\t\t\t\t\t\t      input: (words[i]),\n\t\t\t\t\t\t\t      word: (words[i]),\n\t\t\t\t\t\t\t      answer2: (scope.items[j].answer2[counter])\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcounter++\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t  isInput: true,\n\t\t\t\t\t\t\t      input: (words[i]),\n\t\t\t\t\t\t\t      word: (words[i])\n\t\t\t\t\t      \t});\n\n\t\t\t\t\t\t}\n\t\t\t\t\t \n\n\t\t\t\t\t} \n\n\t\t\t\t\telse{\n\t\t\t\t\t\tscope.items[j].words.push({\n\t\t\t\t\t\t\t\t isInput: false,\n\t\t\t\t\t\t\t     word: (words[i])\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\t\t\t\tconsole.log(scope.selectedItem2);\n\t\t\t\tscope.selectedItemAux.select = [];\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\n\t\t\t\tscope.selectedItem.select = [];\n\t\t\t\t\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Selecciona el objetivo indicado\n\t\t\t */\n\t\t\tscope.selectItem2 = function (item) {\n\t\t\t\tconsole.log(item);\n\t\t\t\tconsole.log(scope.selectedItem);\n\t\t\tif(scope.selectedItem === false ) return;\n\n\t\t\t\tscope.selectedItemAux = item; // seleccionamos el objeto\n\n\t\t\t\tif (scope.selectedItem.word === scope.selectedItemAux.word){\n\t\t\t\t\t\tscope.selectedItem2 = item;\n\t\t\t\t\t\titem.word = [];\n\t\t\t\t\t\titem.word.right = true;\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t// Contamos los elementos completos\n\t\t\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\t\t\tcompletedItems++;\n\t\t\t\t\t\t\trightAnswers++\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\n\t\t\t\t}else{\n\t\t\t\t\t\n\t\t\t\t\titem.select = [];\n\t\t\t\t\titem.select.wrong = true;\n\n\t\t\t\t\tif(scope.selectedItem.word.wrong === true){\n\t\t\t\t\t\t// Contamos los elementos completos\n\t\t\t\t\t\tif(!scope.selectedItem.hasOwnProperty('isCompleted')){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcompletedItems++;\n\t\t\t\t\t\t\tscope.selectedItem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\t\t\tscope.selectedItem = false; // elemento seleccionado\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tscope.selectedItem.word = [];\n\t\t\t\t\t\tscope.selectedItem.word.wrong = true;\n\t\t\t\t\t\tscope.selectedItem = false; // elemento seleccionado\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === chances){\n\n\t\t\t\t\tif (rightAnswers >= minRightAnswers){\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t};\t\n\n\t\t\tscope.random = function(){\n    \t\t\treturn 0.5 - Math.random();\n\t\t\t};\t\n\n\t\t}\n\n\t\t\n\n\n    }; \n});\n\n\n\n","var lizGroupTableCompleteWords = angular.module('lizGroupTableCompleteWords', []);\n\nlizGroupTableCompleteWords.directive('groupTableCompleteWords', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_table_complete_words.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\taltimg: '@',\n\t\t\tstyle: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.examples = scope.options.examples;\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.customClass = (scope.options.customClass) ? scope.options.customClass : \"\";\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\n\t\t\t// Empezamos a recorrer todas las palabras y sumando\n\t\t\t\tscope.items.forEach(function(item){\n\t\t\t\t\titem.input = '';\n\t\t\t\t});\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function () {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / 3) + \"%;\";\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Definimos nuestra función beforeGoNext para que muestre el cuadro de felicitaciones\n\t\t\t */\n\t\t\tscope.$root.beforeGoNext = function () {\n\n\t\t\t\tvar completedInputs = scope.items.filter(function(item){\n\t\t\t\t\t\t\treturn item.right === true;\n\t\t\t\t\t\t\t}).length;\n\t\t\t\tif(completedInputs >= minRightAnswers){\n\t\t\t\t\tscope.success = true;\n\t\t\t\t\treturn true; \n\t\t\t\t}else{\n\t\t\t\t\tscope.failure = true;\n\t\t\t\t\treturn true; \n\t\t\t\t}\n\t\t\t};\n\n\t\t\t\n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\n\t\t\tscope.verify = function () {\n\n\t\t\t\t// Empezamos a recorrer todas las palabras y sumando\n\t\t\t\tscope.items.forEach(function(item){\n\n\t\t\t\t\tif (item.input === item.answer){\n\n\t\t\t\t\t\titem.completed = true;\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t}else{\n\n\t\t\t\t\t\titem.completed = true;\n\t\t\t\t\t\titem.right = false;\n\t\t\t\t\t\titem.wrong = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log(item);\n\t\t\t\t});\t\n\n\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\t\t\n\t\t\t\t\t\n\t\t\t}; // verify()\n\n\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupTableTextConditions = angular.module('lizGroupTableTextConditions', []);\n\nlizGroupTableTextConditions.directive('groupTableTextConditions', function  ($sce) {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_table_text_conditions.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tblockText: '@',\n\t\t\tmainimg: '@',\n\t\t\taddicon: '@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.titles = scope.options.titles;\n\t\t\tscope.chancesPerItem = scope.options.chancesPerItem;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.minRightAnswers = scope.options.minRightAnswers;\n\t\t\tscope.pattern = scope.items.pattern ? scope.items.pattern : ['N/A'];\n\t\t\tscope.options = scope.items.options ? scope.items.options : [];\n\t\t\tscope.text = scope.items.text;\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\n\t\t\t// Recorremos todos los items\n\t\t\tif(scope.chancesPerItem){\n\t\t        scope.items.forEach(function (item) {\n\t\t          // agregamos cada item el numero de oportunidades\n\n\t\t          item.chances = scope.chancesPerItem\t\t\t\t\t\t      \n\t\t\t\t  \n\t\t        });\n\t\t      }\n\t\t\t\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(rows) {\n\t\t\t\tvar styles = \"\";\n\t\t\t\t\n\n\t\t\t\tif(rows === undefined ){\n\t\t\t\t\tstyles += \"height: \" + (108) + \"px;\";\n\t\t\t\t\t\n\t\t\t\t} \n\t\t\t\telse{\n\t\t\t\t\tstyles += \"height: \" + (40 * rows) + \"px;\";\n\t\t\t\t\tstyles += \"padding-top: \" + (5 * rows) + \"px;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\t// Para usar el html en angular\n\t\t      scope.sanitize = function (item) {\n\t\t        return $sce.trustAsHtml(item);\n\t\t      }\n\n\t\t\t\t\n\t\t\t/**\n\t\t\t * Definimos nuestra función beforeGoNext para que muestre el cuadro de felicitaciones\n\t\t\t */\n\t\t\tscope.$root.beforeGoNext = function () {\n\n\t\t\t\tvar completedItems = 0 + scope.items.filter(function(item){\n\t\t\t\t\t\t\treturn item.right === true ;\n\t\t\t\t\t\t}).length;\n\n\t\t\t\tif(completedItems >= scope.minRightAnswers){\n\t\t\t\t\tscope.success = true;\n\t\t\t\t}else{scope.failure = true;}\n\t\t\t\treturn true; \n\t\t\t};\n\t\t   \n\t\t\t/**\n\t\t\t * Verifica si el todos los inputs cumplen la longitud minima de caracteres \n\t\t\t */\n\t\t\t \n\t\t\tscope.verify = function (item) {\n\t\t\t\tif(item.input === '' || !item.hasOwnProperty('input') ){return}\n\t\t\t\t// Filtramos el array buscando los inputs que cumplen los requisitos y los contamos\n\t\t\t\t\n\t\t\t  \n\t\t\t\t   \tvar string = item.input;\n\t\t\t\t\tvar words = string.split(\" \");\n\n\t\t\t\t\titem.words = [];\n\t\t\t\t\titem.complete = [];\n\t\t\t\t\n\n\t\t\t\t\tfor(var i=0; i < words.length; i++){\n\n\t\t\t\t\t\tif(item.hasOwnProperty('pattern')){\n\n\t\t\t\t\t\t\tif( item.pattern.indexOf(words[i]) > -1 ){\n\t\t\t\t\t\t\t\t\titem.words.push({\n\t\t\t\t\t\t\t\t\t\t  isInput: true,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}else{\n\n\t\t\t\t\t\t\tif( item.options.indexOf(words[i]) > -1 ){\n\t\t\t\t\t\t\t\t\titem.words.push({\n\t\t\t\t\t\t\t\t\t\t  isInput: true,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t}\n\n\t\t\t\t\n\n\n\t\t\t\t// Si se han completado todos\n\t\t\t\tif(item.hasOwnProperty('pattern')){\n\t\t\t\t\n\t\t\t\t\tif ( item.words.length >= item.pattern.length || item.pattern[0] === \"free\" && item.input.length >= item.length) {\n\n\t\t\t\t\t\t\n\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\tif(scope.chancesPerItem){item.completed = true};\n\n\t\t\t\t\t\tvar completedInputs = scope.items.filter(function(item){\n\t\t\t\t\t\t\treturn (item.right === true || item.completed === true ) && item.input.length >= item.length;\n\t\t\t\t\t\t}).length;\n\n\t\t\t\t\t\t// Si se han completado todos\n\t\t\t\t\t\t\tif (completedInputs === scope.items.length) {\n\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = false; // Desactivamos el siguiente vínculo\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t}else{\t\t\n\t\t\t\t\t\t\t\tif(scope.chancesPerItem){\n\t\t\t\t\t\t\t\t\titem.right = false;\n\t\t\t\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\t\t\titem.chances -= 1\n\t\t\t\t\t\t\t\t\tif(item.chances === 0){item.completed = true;item.input = item.pattern }\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tif(item.right === true){\n\t\t\t\t\t\t\t\t\titem.right = false;\n\t\t\t\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar completedInputs = scope.items.filter(function(item){\n\t\t\t\t\t\t\t\treturn (item.right === true || item.completed === true ) && item.input.length >= item.length;\n\t\t\t\t\t\t\t\t}).length;\n\n\t\t\t\t\t\t\t\t// Si se han completado todos\n\t\t\t\t\t\t\t\t\tif (completedInputs === scope.items.length) {\n\t\t\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = false; // Desactivamos el siguiente vínculo\n\t\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t}\n\t\t\t\t}else{\n\n\t\t\t\t\tif ( (item.words.length >= 1 && item.hasOwnProperty('options') ) && item.input.length >= item.length) {\n\n\t\t\t\t\t\t\n\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\tvar completedInputs = scope.items.filter(function(item){\n\t\t\t\t\t\t\treturn item.right === true && item.input.length >= item.length;\n\t\t\t\t\t\t}).length;\n\n\t\t\t\t\t\t// Si se han completado todos\n\t\t\t\t\t\t\tif (completedInputs === scope.items.length) {\n\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = false; // Desactivamos el siguiente vínculo\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tif(item.right === true){\n\t\t\t\t\t\t\t\titem.right = false;\n\t\t\t\t\t\t\t\titem.wrong = true;}\n\t\t\t\t\t\t\t\tvar completedInputs = scope.items.filter(function(item){\n\t\t\t\t\t\t\t\treturn item.right === true && item.input.length >= item.length;\n\t\t\t\t\t\t\t\t}).length;\n\n\t\t\t\t\t\t\t\t// Si se han completado todos\n\t\t\t\t\t\t\t\t\tif (completedInputs === scope.items.length) {\n\t\t\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = false; // Desactivamos el siguiente vínculo\n\t\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t}\n\t\t\t\t}\t\n\n\t\t\t}; // verify()\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupTableTextConditionsOptions = angular.module('lizGroupTableTextConditionsOptions', []);\n\nlizGroupTableTextConditionsOptions.directive('groupTableTextConditionsOptions', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_table_text_conditions_options.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\taddicon: '@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.groups = scope.options.groups;\n\t\t\tscope.items = [];\n\t\t\t/*scope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.pattern = scope.groups.items.pattern ? scope.groups.items.pattern : ['N/A'];\n\t\t\tscope.options = scope.groupsitems.options ? scope.groupsitems.options : [];*/\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\t\n\t\t\t// Recorremos todas las grupos y sus items\n\t\t\t      scope.groups.forEach(function (group) {\n\t\t\t        group.items.forEach(function (item) {\n\t\t\t          // agregamos cada item a el array de items\n\t\t\t          scope.items.push({\n\t\t\t\t\t\t\titem: item,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t  });\n\n\t\t\t        });\n\t\t\t      });\n\t\t\t\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(rows) {\n\t\t\t\tvar styles = \"\";\n\t\t\t\t\n\n\t\t\t\tif(rows === undefined ){\n\t\t\t\t\tstyles += \"height: \" + (108) + \"px;\";\n\t\t\t\t\t\n\t\t\t\t} \n\t\t\t\telse{\n\t\t\t\t\tstyles += \"height: \" + (40 * rows) + \"px;\";\n\t\t\t\t\tstyles += \"padding-top: \" + (5 * rows) + \"px;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\t\n\t\t\t/**\n\t\t\t * Definimos nuestra función beforeGoNext para que muestre el cuadro de felicitaciones\n\t\t\t */\n\t\t\tscope.$root.beforeGoNext = function () {\n\t\t\t\tscope.success = true;\n\t\t\t\treturn true; \n\t\t\t};\n\t\t   \n\t\t\t/**\n\t\t\t * Verifica si el todos los inputs cumplen la longitud minima de caracteres \n\t\t\t */\n\t\t\t \n\t\t\tscope.verify = function (item) {\n\t\t\t\t// Filtramos el array buscando los inputs que cumplen los requisitos y los contamos\n\t\t\t\t\n\t\t\t  \n\t\t\t\t   \tvar string = item.input;\n\t\t\t\t\tvar words = string.split(\" \");\n\n\t\t\t\t\titem.words = [];\n\t\t\t\t\titem.complete = [];\n\t\t\t\t\n\t\t\t\t\tfor(var i=0; i < words.length; i++){\n\n\t\t\t\t\t\tif(item.hasOwnProperty('pattern')){\n\n\t\t\t\t\t\t\tif( item.pattern.indexOf(words[i]) > -1 ){\n\t\t\t\t\t\t\t\t\titem.words.push({\n\t\t\t\t\t\t\t\t\t\t  isInput: true,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}else{\n\n\t\t\t\t\t\t\tif( item.options.indexOf(words[i]) > -1 ){\n\t\t\t\t\t\t\t\t\titem.words.push({\n\t\t\t\t\t\t\t\t\t\t  isInput: true,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t}\n\n\t\t\t\t\n\n\n\t\t\t\t// Si se han completado todos\n\t\t\t\tif(item.hasOwnProperty('pattern')){\n\t\t\t\t\tif ( item.words.length >= item.pattern.length || item.pattern[0] === \"free\" && item.input.length >= item.length) {\n\n\t\t\t\t\t\t/*item.complete.push({\n\t\t\t\t\t\t\t\t\t\t  complete: true,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t\t});*/\n\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\tvar completedInputs = scope.items.filter(function(item){\n\t\t\t\t\t\t\treturn item.item.right === true && item.item.input.length >= item.item.length;\n\t\t\t\t\t\t}).length;\n\n\t\t\t\t\t\t// Si se han completado todos\n\t\t\t\t\t\t\tif (completedInputs === chances) {\n\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = false; // Desactivamos el siguiente vínculo\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tif(item.right === true){\n\t\t\t\t\t\t\t\titem.right = false;\n\t\t\t\t\t\t\t\titem.wrong = true;}\n\t\t\t\t\t\t\t\tvar completedInputs = scope.items.filter(function(item){\n\t\t\t\t\t\t\t\treturn item.item.right === true && item.item.input.length >= item.item.length;\n\t\t\t\t\t\t\t\t}).length;\n\n\t\t\t\t\t\t\t\t// Si se han completado todos\n\t\t\t\t\t\t\t\t\tif (completedInputs === chances) {\n\t\t\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = false; // Desactivamos el siguiente vínculo\n\t\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t}\n\t\t\t\t}else{\n\n\t\t\t\t\tif ( (item.words.length >= 1 && item.hasOwnProperty('options') ) && item.input.length >= item.length) {\n\n\t\t\t\t\t\t/*item.complete.push({\n\t\t\t\t\t\t\t\t\t\t  complete: true,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t\t});*/\n\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\tvar completedInputs = scope.items.filter(function(item){\n\t\t\t\t\t\t\treturn item.item.right === true && item.item.input.length >= item.item.length;\n\t\t\t\t\t\t}).length;\n\n\t\t\t\t\t\t// Si se han completado todos\n\t\t\t\t\t\t\tif (completedInputs === chances) {\n\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = false; // Desactivamos el siguiente vínculo\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tif(item.right === true){\n\t\t\t\t\t\t\t\titem.right = false;\n\t\t\t\t\t\t\t\titem.wrong = true;}\n\t\t\t\t\t\t\t\tvar completedInputs = scope.items.filter(function(item){\n\t\t\t\t\t\t\t\t\treturn item.item.right === true && item.item.input.length >= item.item.length;\n\t\t\t\t\t\t\t\t}).length;\n\n\t\t\t\t\t\t\t\t// Si se han completado todos\n\t\t\t\t\t\t\t\t\tif (completedInputs === chances) {\n\t\t\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = false; // Desactivamos el siguiente vínculo\n\t\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t}\n\t\t\t\t}\t\n\n\t\t\t}; // verify()\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupTableTextFree = angular.module('lizGroupTableTextFree', []);\n\nlizGroupTableTextFree.directive('groupTableTextFree', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_table_text_free.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tblockText: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.text = scope.items.text;\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-right: \" + (10 / scope.itemsPerRow) + \"%!important;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\t\t\n\t\t\t/**\n\t\t\t * Definimos nuestra función beforeGoNext para que muestre el cuadro de felicitaciones\n\t\t\t */\n\t\t\tscope.$root.beforeGoNext = function () {\n\t\t\t\tscope.success = true;\n\t\t\t\treturn true; \n\t\t\t};\n\t\t   \n\t\t\t/**\n\t\t\t * Verifica si el todos los inputs cumplen la longitud minima de caracteres \n\t\t\t */\n\t\t\t \n\t\t\tscope.verify = function (item) {\n\t\t\t\t// Filtramos el array buscando los inputs que cumplen los requisitos y los contamos\n\t\t\t\t\n\t\t\t\tvar completedInputs = scope.items.filter(function(item){\n\t\t\t\t\treturn item.input.length >= item.length && item.input;\n\t\t\t\t}).length;\n\n\t\t\t\t// Si se han completado todos\n\t\t\t\tif (completedInputs === scope.items.length) {\n\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\n\t\t\t\t} else {\n\t\t\t\t\tscope.$root.isNextEnabled = false; // Desactivamos el siguiente vínculo\n\t\t\t\t}\t\n\t\t\t}; // verify()\n\n\t\t}\n\n\n    }; \n});\n\n","var lizGroupTableTextOptions = angular.module('lizGroupTableTextOptions', []);\n\nlizGroupTableTextOptions.directive('groupTableTextOptions', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/group_table_text_options.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tblockText: '@',\n\t\t\tmainimg: '@',\n\t\t\taddicon: '@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.titles = scope.options.titles;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.pattern = scope.items.pattern;\n\t\t\tscope.text = scope.items.text;\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tchancesPerItem = scope.options.chancesPerItem ? scope.options.chancesPerItem : 1\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\t\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(rows) {\n\t\t\t\tvar styles = \"\";\n\t\t\t\t\n\n\t\t\t\tif(rows === undefined ){\n\t\t\t\t\tstyles += \"height: \" + (108) + \"px;\";\n\t\t\t\t\t\n\t\t\t\t} \n\t\t\t\telse{\n\t\t\t\t\tstyles += \"height: \" + (40 * rows) + \"px;\";\n\t\t\t\t\tstyles += \"padding-top: \" + (5 * rows) + \"px;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\t\t\n\t\t\t/**\n\t\t\t * Definimos nuestra función beforeGoNext para que muestre el cuadro de felicitaciones\n\t\t\t */\n\t\t\tscope.$root.beforeGoNext = function () {\n\t\t\t\tscope.success = true;\n\t\t\t\treturn true; \n\t\t\t};\n\t\t   \n\t\t\t/**\n\t\t\t * Verifica si el todos los inputs cumplen la longitud minima de caracteres \n\t\t\t */\n\t\t\t \n\t\t\tscope.verify = function (item) {\n\n\t\t\t\tif((item.input === '' ) || ! item.hasOwnProperty('input')) return;\n\n\t\t\t\t// Filtramos el array buscando los inputs que cumplen los requisitos y los contamos\n\t\t\t\t\n\t\t\t\t\titem.complete = [];\n\t\t\t\t\n\t\t\t\t\t\tif( item.pattern.indexOf(item.input) > -1 ){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\titem.complete.push({\n\t\t\t\t\t\t\t\t\t  complete: true,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t} \n\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\n\n\t\t\t\t\n\n\n\t\t\t\t// Si se han completado todos\n\t\t\t\t\t\n\t\t\t\tif (item.complete.length >= 1) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\t\tchances--;\n\t\t\t\t\t\t\titem.wrong = false;\n\t\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\t\t\n\t\t\t\t\t} \n\t\t\t\t\telse {\n\t\t\t\t\t\t\titem.wrong ? chancesPerItem = scope.options.chancesPerItem ? scope.options.chancesPerItem - 1 : chancesPerItem = 1 : chancesPerItem = scope.options.chancesPerItem ? scope.options.chancesPerItem : chancesPerItem = 1 ;\n\t\t\t\t\t\t\tchancesPerItem--\t\n\t\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(chancesPerItem === 0){\n\t\t                    \titem.completed = true;\n\t\t                    \tchances--;\n\t\t                    \tchancesPerItem = scope.options.chancesPerItem ? scope.options.chancesPerItem : 1\n\t\t                    \t}\n\t\t                    \telse{item.input=\"\";}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \t\t\t\t\t\n\t\t\t}; // verify()\n\n\t\t}\n\n\n    }; \n});\n\n","var lizImageGroupDrop = angular.module('lizImageGroupDrop', ['factories']);\r\n\r\n// Knockout Pairs Factory\r\nlizImageGroupDrop.factory('imageGroupDropActivity', function ($rootScope, shuffleArrayFactory) {\r\n\r\n\tvar imageGroupDropActivity = {};\r\n\r\n\t/**\r\n\t * Crea el ViewModel\r\n\t */\r\n\timageGroupDropActivity.create = function (options) {\r\n\t\treturn new imageGroupDropActivity._ViewModel(options);\r\n\t}\r\n\r\n\t/**\r\n\t * Genera el ViewModel de las parejas con sus funcionalidades\r\n\t */\r\n\timageGroupDropActivity._ViewModel = function (opt) {\r\n\t\tvar self = this,\r\n\t\t\tnewGroup = false,\r\n\t\t\ttotalItems = 0, // Número total de elementos\r\n\t\t\tchances = opt.chances,\r\n\t\t\tminRightAnswers = opt.minRightAnswers,\r\n\t\t\trightAnswers = 0;\r\n\r\n\t\tfunction Group (opt) {\r\n\t\t\tthis.sortable = ko.observableArray();\r\n\t\t\tthis.sortable.id = (Math.random() + 1).toString(36).substring(7); // Creamos una cadena aleatoria\r\n\r\n\t\t\t// Medidas\r\n\t\t\tthis.t = opt.t;\r\n\t\t\tthis.l = opt.l;\r\n\t\t\tthis.w = opt.w;\r\n\t\t\tthis.h = opt.h;\r\n\t\t}\r\n\r\n\t\t// Imagen de fondo del conjunto\r\n\t\tself.bg = {\r\n\t\t\tsrc: opt.src,\r\n\t\t\talt: opt.alt\r\n\t\t};\r\n\r\n\t\t// textos\r\n\t\tself.topText = opt.topText;\r\n\t\tself.bottomText = opt.bottomText;\r\n\r\n\t\t// Formación de grupos\r\n\t\tself.groups = ko.observableArray(); // Observable de grupos\r\n\t\tself.stack = ko.observableArray(); // pila de elementos\r\n\r\n\t\topt.groups.forEach(function(group){\r\n\t\t\tnewGroup = new Group(group);\r\n\r\n\t\t\tself.groups.push(newGroup);\r\n\r\n\t\t\t// añadimos cada item a la pila, añadiendole la referencia a su padre (grupo)\r\n\t\t\tgroup.items.forEach(function(item){\r\n\t\t\t\titem.id = newGroup.sortable.id;\r\n\t\t\t\tself.stack.push(item);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t\r\n\r\n\t\t// barajamos la pila\r\n\t\tshuffleArrayFactory.run(self.stack());\r\n\r\n\t\ttotalItems = self.stack().length;\r\n\r\n\t\t// audio\r\n\t\tself.audio = ko.observable(opt.audio);\r\n\r\n\t\t// Carpeta de recursos desde angular\r\n\t\tself.resources = $rootScope.resources;\r\n\r\n\t\t// Calificaciones\r\n\t\tself.rightAnswer = ko.observable();\r\n\t\tself.wrongAnswer = ko.observable();\r\n\t\tself.failure = ko.observable(false);\r\n\t\tself.success = ko.observable(false);\r\n\r\n\t\t/**\r\n\t\t * Reproduce el audio de la instrucción.\r\n\t\t */\r\n\t\tself.playAudio = function () {\r\n\t\t\t$('#audio-instruction')[0].play();\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Devuelve los estilos de los grupos\r\n\t\t */\r\n\t\tself.getGroupStyles = function (group) {\r\n\t\t\tvar styles = '';\r\n\r\n\t\t\tstyles += \"top: \" + group.t + \"%;\";\r\n\t\t\tstyles += \"left: \" + group.l + \"%;\";\r\n\t\t\tstyles += \"width: \" + group.w + \"%;\";\r\n\t\t\tstyles += \"height: \" + group.h + \"%;\";\r\n\t\t\t\r\n\t\t\treturn styles;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Devuelve los estilos de los grupos\r\n\t\t */\r\n\t\tself.getItemStyles = function (item) {\r\n\t\t\tvar styles = '';\r\n\r\n\t\t\tstyles += \"top: \" + item.t + \"%;\";\r\n\t\t\tstyles += \"left: \" + item.l + \"%;\";\r\n\t\t\t\r\n\t\t\treturn styles;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Verifica la respuesta cada vez que se suelta el elemento.\r\n\t\t */\r\n\t\tself.verifyAnswer = function (arg) {\r\n\t\t\tvar parent = arg.targetParent,\r\n\t\t\t\titem = arg.item;\r\n\r\n\t\t\tif(arg.sourceParent === parent) return;\r\n\r\n\t\t\t// Respuesta correcta\r\n\t\t\tif(item.id === parent.id) {\r\n\t\t\t\tself.rightAnswer(Math.random());\r\n\t\t\t\trightAnswers++;\r\n\t\t\t} else {\r\n\t\t\t\tself.wrongAnswer(Math.random());\r\n\t\t\t\targ.cancelDrop = true;\r\n\t\t\t}\r\n\r\n\t\t\tchances--;\r\n\r\n\t\t\tif (rightAnswers === totalItems || chances === 0) {\r\n\t\t\t\tif (rightAnswers >= minRightAnswers) {\r\n\t\t\t\t\t$rootScope.isNextEnabled = true;\r\n\t\t\t\t\tself.success(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.failure(true);\r\n\t\t\t\t}\r\n\t\t\t\t// éxito\r\n\t\t\t} \r\n\t\t};\r\n\r\n\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Inicializa la instancia del ViewModel creado con imageGroupDropActivity.create\r\n\t *\r\n\t * @param {object} instance Intancia del VM de knockout\r\n\t */\r\n\timageGroupDropActivity.run = function (instance) {\r\n\t\tko.cleanNode($('#main-container')[0]);\r\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\r\n\t\tko.applyBindings(instance, $('#main-container')[0]);\r\n\t};\r\n\r\n\treturn imageGroupDropActivity;\r\n\r\n});\r\n\r\nlizImageGroupDrop.directive('imageGroupDrop', function  (imageGroupDropActivity) {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\ttransclude: true,\r\n\t\tscope: {\r\n\t\t\toptions: '=',\r\n\t\t\tdescription: '@',\r\n\t\t\taudio:'@'\r\n\t\t},\r\n\t\ttemplateUrl: '../views/activities/image_group_drop.html',\r\n\t\tlink: function postLink(scope, element, attrs) {\r\n\t\t\t// Añadimos el audio a options\r\n\t\t\tscope.options.audio = scope.hasOwnProperty('audio') ? scope.audio : false;\r\n\r\n\t\t\t// Corremos la aplicación\r\n\t\t\tvar vm = imageGroupDropActivity.create(scope.options);\r\n\t\t\timageGroupDropActivity.run(vm);\r\n\t\t}\r\n\t}; \r\n});\r\n","var lizImageMapSelect = angular.module('lizImageMapSelect', []);\r\n\r\nlizImageMapSelect.directive('imageMapSelect', function  () {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\tscope: {\r\n\t\t\toptions: '=',\r\n\t\t\taudio: '@',\r\n\t\t\tdescription: '@'\r\n\t\t},\r\n\t\ttemplateUrl: '../views/activities/image_map_select.html',\r\n\t\tlink: function (scope, element, attrs) {\r\n\t\t\tvar opt = scope.options,\r\n\t\t\t\trightAnswers = 0,\r\n\t\t\t\tcompletedAnswers = 0;\r\n\t\t\t\tminRightAnswers = opt.minRightAnswers;\r\n\r\n\t\t\t// Asignación\r\n\t\t\tscope.items = opt.items;\r\n\t\t\tscope.img = opt.img;\r\n\t\t\tscope.alt = opt.alt;\r\n\r\n\t\t\t// Calificación\r\n\t\t\tscope.success = false;\r\n\t\t\tscope.failure = false;\r\n\t\t\tscope.wrongAnswer = false;\r\n\r\n\t\t\tscope.selectedItem = false;\r\n\r\n\t\t\t// Recorremos los items y añadimos el número de oportunidades por item\r\n\t\t\tscope.items.forEach(function(item){\r\n\t\t\t\titem.chances = 2;\r\n\t\t\t});\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Selecciona el item al dar click\r\n\t\t\t */\r\n\t\t\tscope.selectItem = function (item) {\r\n\t\t\t\tscope.selectedItem = item;\r\n\t\t\t};\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Verifica la respuesta\r\n\t\t\t */\r\n\t\t\tscope.verify = function (item) {\r\n\t\t\t\t// si no se ha seleccionado ningún elemento\r\n\t\t\t\tif(!scope.selectedItem) return;\r\n\r\n\t\t\t\t// validación\r\n\t\t\t\tif(scope.selectedItem === item) {\r\n\t\t\t\t\t// Respuesta correcta\r\n\t\t\t\t\tcompletedAnswers++; // Aumentamos el contador de respuestas terminadas\r\n\t\t\t\t\trightAnswers++; // Aumenta el número de respuestas correctas\r\n\r\n\t\t\t\t\tscope.selectedItem.isRight = true;\r\n\t\t\t\t\tscope.selectedItem.completed = true; // marca el elemento como completo\r\n\r\n\t\t\t\t\tscope.selectedItem = false; // reinicia el objeto seleccionado\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Respuesta Incorrecta\r\n\t\t\t\t\tscope.selectedItem.chances--;\r\n\r\n\t\t\t\t\t// mostramos el ícono de error, solo la primera vez\r\n\t\t\t\t\tif(scope.selectedItem.chances === 1) scope.wrongAnswer = Math.random();\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Desactivamos el elemento seleccionado\r\n\t\t\t\t\tif(scope.selectedItem.chances === 0) {\r\n\t\t\t\t\t\tcompletedAnswers++; // Aumentamos el contador de respuestas terminadas\r\n\r\n\t\t\t\t\t\tscope.selectedItem.isWrong = true;\r\n\t\t\t\t\t\tscope.selectedItem.completed = true;\r\n\t\t\t\t\t\tscope.selectedItem = false; // reinicia el objeto seleccionado\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// fin de la actividad\r\n\t\t\t\tif(scope.items.length === completedAnswers) {\r\n\t\t\t\t\tif(rightAnswers >= minRightAnswers) {\r\n\t\t\t\t\t\t// Éxito\r\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t\t\tscope.success = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Fracaso\r\n\t\t\t\t\t\tscope.failure = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * Obtiene la posición de los elementos\r\n\t\t\t */\r\n\t\t\tscope.getStyles = function (item) {\r\n\t\t\t\tvar styles = '';\r\n\r\n\t\t\t\tstyles += \"top: \" + item.t + \"%;\";\r\n\t\t\t\tstyles += \"left: \" + item.l + \"%;\";\r\n\t\t\t\t\r\n\t\t\t\treturn styles;\r\n\t\t\t};\r\n\r\n\t\t}\r\n\t}; \r\n});\r\n","var lizInputsAndTable = angular.module('lizInputsAndTable', []);\n\nlizInputsAndTable.directive('inputsTable', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/activities/inputs_and_table.html',\n\t\tscope: {\n\t\t\toptions: \"=\",\n\t\t\tinstruction: '@',\n\t\t\taudio: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\tlink: function (scope) {\n\t\t\tvar opt = scope.options,\n\t\t\t\trightAnwers = 0, // Respuestas correctas\n\t\t\t\tbackCounter = opt.inputs.length + opt.table.body.length; // total de inputs\n\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\n\t\t\tscope.isBottom = scope.title || scope.description;\n\t\t\tscope.inputs = opt.inputs;\n\t\t\tscope.table = opt.table;\n\n\t\t\t// calificación\n\t\t\tscope.rightAnswer = false;\n\t\t\tscope.wrongAnswer = false;\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\n\t\t\t// Se añade el input a inputs y a table\n\t\t\tscope.inputs.forEach(function (i) { \n\t\t\t\ti.input = ''; \n\t\t\t\ti.chances = opt.chancesPerInput; // Se definen las posibilidades para cada input\n\t\t\t});\n\n\t\t\tscope.table.body.forEach(function (i) { \n\t\t\t\ti.input = ''; \n\t\t\t\ti.chances = opt.chancesPerInput; // Se definen las posibilidades para cada input\n\t\t\t});\n\n\t\t\tconsole.log(scope.table);\n\n\t\t\t/**\n\t\t\t * Compara el valor ingresado por el usuario con el especificado en el objeto\n\t\t\t */\n\t\t\tscope.verify = function (item) {\n\t\t\t\t// Valida solamente si tiene el mismo número de letras\n\t\t\t\tif(item.input.length !== item.expects.length) return;\n\n\t\t\t\t// respuesta correcta/incorrecta\n\t\t\t\tif(item.input === item.expects){\n\t\t\t\t\tscope.rightAnswer = Math.random(); // Dispara el flash\n\t\t\t\t\titem.disabled = true; // Deshabilita el input\n\n\t\t\t\t\trightAnwers++;\n\t\t\t\t\tbackCounter--; // Reduce el contador para finalizar la actividad\n\t\t\t\t} else {\n\t\t\t\t\tscope.wrongAnswer = Math.random();\n\t\t\t\t\titem.chances--; // Reducimos las posibilidades\n\t\t\t\t\titem.input = ''; // Limpia el input\n\n\t\t\t\t\t// Deshabilita el input si se acaban las posibilidades\n\t\t\t\t\tif(item.chances === 0){\n\t\t\t\t\t\titem.disabled = true; \n\t\t\t\t\t\tbackCounter--; // Reduce el contador para finalizar la actividad\n\t\t\t\t\t} \n\t\t\t\t}\n\n\t\t\t\tconsole.log(backCounter);\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(backCounter === 0)\t{\n\t\t\t\t\tif(rightAnwers >= opt.minRightAnswers){\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t/**\n\t\t\t * Devuelve los estilos para los inputs.\n\t\t\t * Usado principalmente para definir el width de cada elemento.\n\t\t\t */\n\t\t\tscope.getInputStyles = function () {\n\t\t\t\tvar styles = '';\n\t\t\t\tstyles += \"width: \" + (100 / scope.inputs.length) + \"%;\";\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\n\t\t}\n\t};\n});\n","var lizJoiningLines = angular.module('lizJoiningLines', []);\n\nlizJoiningLines.directive('joiningLines', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tinstruction: '@',\n\t\t\talt: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/joining_lines.html',\n\t\tlink: function (scope, element, attrs) {\n\n\t\t\tvar opt = scope.options;\n\t\t\t\t\n\n\t\t\tscope.items = opt.items;\n\t\t\tscope.answers = opt.answers;\n\t\t\tscope.selectedItem = false; // elemento seleccionado\n\t\t\tscope.selectedItem2 = false; // elemento seleccionado\n\t\t\tminRightAnswers = opt.minRightAnswers;\n\t\t\tvar chancesPerItem = opt.chancesPerItem ? opt.chancesPerItem : 1;\n\t\t\tscope.linesContainer = opt.linesContainer;\n\t\t\tvar rightAnswers = 0; // Contador de preguntas buenas\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\tvar completedItems = 0;\n\n\t\t\t\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\t\t\t\tif(item.isCompleted === true) return;\n\n\t\t\t\tscope.selectedItem2.wrong = false;\n\t\t\t\tscope.selectedItem2 = false;\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\n\n\t\t\t\t\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === (scope.items.length) ){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tscope.selectItem2 = function (item) {\n\t\t\t\tif(item.isCompleted === true || scope.selectedItem === false) return;\n\n\t\t\t\tscope.selectedItem2.wrong = false;\n\t\t\t\tscope.selectedItem2 = item; // seleccionamos el objeto\n\n\t\t\t\tif(scope.selectedItem.answer === scope.selectedItem2.answer){\n\n\t\t\t\t\trightAnswers++;\n\t\t\t\t\tscope.selectedItem2 = false;\n\t\t\t\t\tscope.selectedItem.wrong = false;\n\t\t\t\t\tscope.selectedItem.right = true;\n\t\t\t\t\titem.wrong = false;\n\t\t\t\t\titem.right = true;\n\t\t\t\t\t\n\t\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\t\tscope.selectedItem.isCompleted = true;// marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\t\tscope.selectedItem = false;\n\t\t\t\t\t\tcompletedItems++;\n\t\t\t\t\t}\n\n\t\t\t\t}else{\n\n\t\t\t\t\tif(scope.selectedItem.chances === 1){\n\t\t\t\t\t\tscope.selectedItem.isCompleted = true// marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\t\tscope.selectedItem.wrong = true;\n\t\t\t\t\t\tscope.selectedItem = false;\n\t\t\t\t\t\tcompletedItems++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tscope.selectedItem.flash = true;\n\t\t\t\t\tscope.selectedItem.chances = 1;\n\t\t\t\t\tscope.selectedItem.right = false;\n\t\t\t\t\titem.wrong = true;\n\t\t\t\t\titem.right = false;\n\t\t\t\t\tconsole.log(scope.selectedItem);\n\n\t\t\t\t\t\n\n\t\t\t\t}\n\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === (scope.items.length) ){\n\t\t\t\t\tif(rightAnswers >= minRightAnswers) {\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t          scope.success = true;\n\t\t\t          return true;\n\t\t\t        }\n\n\t\t\t        scope.failure = true;\n\t\t\t        return false;\n\t\t\t\t}\n\t\t\t};\n\n\t\t /**\n\t\t * Devuelve los estilos según el elemento\n\t\t */\n\t\tscope.getTargetsStyles = function (item) {\n\t\t\tvar styles = '';\n\t\t\tstyles += 'width: ' + item.w + '%;';\n\t\t\tstyles += 'height: ' + item.h + '%;';\n\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\tstyles += 'left: ' + item.l + '%;';\n\t\t\tstyles += '-webkit-transform:rotate(' + item.r + 'deg);';\n\t\t\tstyles += '-moz-transform:rotate(' + item.r + 'deg);';\n\t\t\tstyles += '-o-transform:rotate(' + item.r + 'deg);';\n\t\t\tstyles += '-ms-transform:rotate(' + item.r + 'deg);';\n\t\t\tstyles += 'transform:rotate(' + item.r + 'deg);';\n\n\t\t\treturn styles;\n\t\t};\n\n\t\t}\n\t}; \n});\n\n","var lizLetterSoup = angular.module('lizLetterSoup', ['factories']);\n\nlizLetterSoup.directive('letterSoup', function () {\n  return {\n    restrict: 'E',\n    scope: {\n      options: '=',\n      audio: '@',\n      description: '@',\n      instruction: '@'\n    },\n    templateUrl: '../views/activities/letter_soup.html',\n    link: function (scope, element, attrs) {\n      var opt = scope.options, // Alias de opciones\n        chances = opt.chances, // Oportunidades totales\n        minRightAnswers = opt.minRightAnswers, // Número mínimo de respuestas correctas\n        totalWords = 0, // Número total de palabras\n        rightAnswers = 0; // contador de preguntas correctas\n\n      scope.groupStyle = opt.groupStyle ? opt.groupStyle : false; // estilos que define com se ven los grupos de palbras\n      scope.tableStyle = opt.tableStyle ? opt.tableStyle : false; // estilos que define com se ve la tabla con las letras\n      console.log(scope.groupStyle);\n      scope.table = []; // Array para la tabla\n      scope.startPoint = false; // punto inicial\n      scope.wordGroups = opt.wordGroups;\n\n      scope.inverted = opt.inverted; // Define si las pistas y la sopa de letra intercambian espacios\n\n      // variables de calificación\n      scope.rightAnswer = false;\n      scope.wrongAnswer = false;\n      scope.success = false;\n      scope.failure = false;\n\n      // Recorremos todas las palabras\n      scope.wordGroups.forEach(function (group) {\n        group.items.forEach(function (word) {\n          // Contamos el número total de palabras\n          totalWords++;\n\n          // Si no tiene propiedad front, usamos la propiedad back\n          if (!word.hasOwnProperty('front')) word.front = word.back;\n        });\n      });\n\n\n      // ------------------------------------------\n      // Constructor de table\n      // ------------------------------------------\n      // Recorremos el array en opciones y creamos un nuevo array multidimensional,\n      // añadiendo objetos para cada celda\n      for (var i = 0; i < opt.table.length; i++) {\n        var temp = [];\n\n        // Añadimos a cada uno el índice (x - y) y la letra (obviamente)\n        for (var j = 0; j < opt.table[i].length; j++) {\n          temp.push({\n            x: j,\n            y: i,\n            letter: opt.table[i][j]\n          });\n        }\n\n        scope.table.push(temp);\n      }\n\n      /**\n       * Busca la palabra en base a las coordenadas (índices)\n       */\n      scope.searchWord = function (cell) {\n        if (!scope.startPoint) {\n          // Define el punto inicial\n          scope.startPoint = cell;\n        } else {\n          // ============================================================================\n          // Validación y calificación\n          // ============================================================================\n          var str = '', // cadena encontrada\n            rightSelection = false, // define si la selección fue bien realizada\n            found = false; // Variable que alberga la palabra encontrada, si es el caso\n\n          // Recorremos las celdas y recuperamos la palabra formada\n          rightSelection = scope.forEachCell(scope.startPoint, cell, function (cell) {\n            str += cell.letter;\n          });\n\n          // Si la selección no se hizo bien, entonces termina la función\n          if (!rightSelection) {\n            scope.startPoint = false; // vuelve al estado inicial\n            return;\n          }\n\n          scope.wordGroups.forEach(function (group) {\n            group.items.forEach(function (word) {\n              // Verificamos la palabra, tanto de una forma, como al revés\n              if (word.back === str || word.back === str.split(\"\").reverse().join(\"\")) {\n                found = word;\n              }\n            });\n          });\n\n          // Si la palabra ha sido encontrada y no ha sido completada anteriormente, la completamos\n          if (found) {\n            if (!found.completed) {\n              found.completed = true; // la marcamos como completada\n              scope.rightAnswer = Math.random(); // Disparamos el evento de respuesta correcta\n\n              rightAnswers++;\n\n              // Recorremos nuevamente las celdas para marcarlas como terminadas\n              scope.forEachCell(scope.startPoint, cell, function (cell) {\n                cell.completed = true;\n              });\n            }\n          } else {\n            // Respuesta incorrecta\n            scope.wrongAnswer = Math.random();\n          }\n\n          chances--; // Reducimos las posibilidades\n          scope.startPoint = false; // vuelve al estado inicial\n\n          // Si se acaban las oportunidades, o se terminan todas las palabras\n          if (chances === 0 || rightAnswers === totalWords) {\n            if (rightAnswers >= minRightAnswers) {\n              scope.$root.isNextEnabled = true;\n              scope.success = true;\n            } else {\n              scope.failure = true;\n            }\n          }\n        }\n\n        scope.cleanTable(); // Limpia la tabla\n      };\n\n\n      /**\n       * Muestra el camino en caso de que sea correcto\n       */\n      scope.showPath = function (cell) {\n        if (scope.startPoint) {\n          scope.cleanTable(); // Limpia la tabla\n\n          scope.forEachCell(scope.startPoint, cell, function (cell) {\n            cell.selected = true;\n          });\n        }\n      };\n\n\n      /**\n       * Limpia la tabla\n       */\n      scope.cleanTable = function () {\n        for (var i = 0; i < opt.table.length; i++) {\n          for (var j = 0; j < opt.table[i].length; j++) {\n            scope.table[i][j].selected = false;\n          }\n        }\n      };\n\n      /**\n       * Recorre las celdas desde el punto de inicio al punto final.\n       *\n       * @return boolean Selección correcta o no\n       */\n      scope.forEachCell = function (start, end, callback) {\n        var rightSelection = false;\n\n        // Horizontales\n        if (end.x === start.x) {\n\n          rightSelection = true;\n\n          if (end.y > start.y) {\n            for (var i = start.y; i <= end.y; i++) {\n              callback(scope.table[i][end.x]);\n            }\n          } else {\n            for (var i = start.y; i >= end.y; i--) {\n              callback(scope.table[i][end.x]);\n            }\n          }\n        } //fin Horizontales\n\n        // Verticales\n        if (end.y === start.y) {\n\n          rightSelection = true;\n\n          if (end.x > start.x) {\n            for (var i = start.x; i <= end.x; i++) {\n              callback(scope.table[end.y][i]);\n            }\n          } else {\n            for (var i = start.x; i >= end.x; i--) {\n              callback(scope.table[end.y][i]);\n            }\n          }\n        } //fin Verticales\n\n        // abajo - derecha\n        if (start.x < end.x && start.y < end.y && (start.x - end.x === start.y - end.y)) {\n\n          rightSelection = true;\n\n          for (var y = start.y; y <= end.y; y++) {\n            for (var x = start.x; x <= end.x; x++) {\n              if (start.x - x === start.y - y) {\n                callback(scope.table[y][x]);\n              }\n            }\n          }\n        } // fin abajo - derecha\n\n        // arriba - derecha\n        if (start.x < end.x && start.y > end.y && (start.x - end.x === end.y - start.y)) {\n\n          rightSelection = true;\n\n          for (var y = end.y; y <= start.y; y++) {\n            for (var x = start.x; x <= end.x; x++) {\n              if (start.x - x === y - start.y) {\n                callback(scope.table[y][x]);\n              }\n            }\n          }\n        } // fin arriba - derecha\n\n        // abajo - izquierda\n        if (start.x > end.x && start.y < end.y && (end.x - start.x === start.y - end.y)) {\n\n          rightSelection = true;\n\n          for (var y = start.y; y <= end.y; y++) {\n            for (var x = end.x; x <= start.x; x++) {\n              if (x - start.x === start.y - y) {\n                callback(scope.table[y][x]);\n              }\n            }\n          }\n        } // fin abajo - izquierda\n\n        // arriba - izquierda\n        if (start.x > end.x && start.y > end.y && (end.x - start.x === end.y - start.y)) {\n\n          rightSelection = true;\n\n          for (var y = end.y; y <= start.y; y++) {\n            for (var x = end.x; x <= start.x; x++) {\n              if (x - start.x === y - start.y) {\n                callback(scope.table[y][x]);\n              }\n            }\n          }\n        } // fin arriba - izquierda\n\n        return rightSelection;\n      };\n\n      /**\n       * Devuelve los estilos personalizados de las pistas.\n       */\n      scope.getClueStyles = function () {\n        return opt.clueStyle ? opt.clueStyle : '';\n      };\n\n\n    }\n  };\n});\n","","var lizMultipleMark = angular.module('lizMultipleMark', []);\n\n// Knockout Pairs Factory\nlizMultipleMark.factory('multipleMarkActivity', function ($rootScope) {\n\n\tvar multipleMarkActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tmultipleMarkActivity.create = function (options) {\n\t\treturn new multipleMarkActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\toptions\t\t\t\t\t\tOpciones a utilizar.\n\t * @param {Array}\t\toptions.items\t\t\t\tElementos donde se suelta la marca. Deben tener la propiedad bool \"answer\"\n\t * @param {integer}\t\toptions.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\toptions.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {function}\toptions.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\toptions.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\tmultipleMarkActivity._ViewModel = function (options) {\n\t\tvar self = this,\n\t\t\t\trightAnswers = 0,\n\t\t\t\tchances = typeof options.chances !== \"undefined\" ? options.chances : options.items.length,\n\t\t\t\tminRightAnswers = options.minRightAnswers,\n\t\t\t\tmaximumElements = 1;\n\n\n\t\tself.answers = ko.observableArray(options.answers);\n\t\tself.items = ko.observableArray(options.items);\n\n\t\t// Añadimos a cada item un observableArray para que puedan recibir las marcas\n\t\tko.utils.arrayForEach(self.items(), function(item){\n\t\t\titem._target = ko.observableArray();\n\t\t\titem._target._ids = item.answers; // para poder identificar si esta bueno o malo\n\t\t});\n\n\t\t// Carpeta de recursos desde angular\n\t\tself.resources = $rootScope.resources;\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\t\tself.failure = ko.observable(false);\n\t\tself.success = ko.observable(false);\n\n\t\t/**\n\t\t * Define si el target esta lleno utilizando self.maximumElements\n\t\t */\n\t\tself.isContainerFull = function (parent) {\n\t\t\treturn parent().length < maximumElements;\n\t\t};\n\n\t\t/**\n\t\t * Función que se ejecuta al soltar los elementos\n\t\t */\n\t\tself.verifyAnswer = function (arg) {\n\t\t\tvar item = arg.item,\n\t\t\tparent = arg.targetParent;\n\n\t\t\t// Buscamos el id dentro de las respuestas\n\t\t\tif(parent._ids.indexOf(item.id) >= 0){\n\t\t\t\t// respuesta correcta\n\t\t\t\tself.rightAnswer(item);\n\t\t\t\trightAnswers++;\n\n\t\t\t\tif(typeof options.rightAnswerCallback !== \"undefined\") options.rightAnswerCallback(item);\n\t\t\t} else {\n\t\t\t\t// respuesta incorrecta\n\t\t\t\tself.wrongAnswer(item);\n\t\t\t\targ.cancelDrop = true; // Devuelve el elemento\n\t\t\t}\n\n\t\t\tchances--;\n\n\n\t\t\t// Final de la actividad\n\t\t\tif(chances === 0){\n\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t// éxito\n\t\t\t\t\tself.success(true);\n\n\t\t\t\t\t$rootScope.isNextEnabled = true; // Activamos la siguiente ruta en angular\n\n\t\t\t\t\tif(typeof options.successCallback !== \"undefined\") options.successCallback();\n\n\t\t\t\t} else {\n\t\t\t\t\t// Fracaso\n\t\t\t\t\tself.failure(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con multipleMarkActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\tmultipleMarkActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn multipleMarkActivity;\n\n});\n\nlizMultipleMark.directive('multipleMark', function  (multipleMarkActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/multiple_mark.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tmultipleMarkActivity.run(multipleMarkActivity.create(scope.options));\n\t\t}\n\t}; \n});\n","var lizMultipleSelection = angular.module('lizMultipleSelection', ['factories']);\n\nlizMultipleSelection.directive('multipleSelection', function  (shuffleArrayFactory) {\n    return {\n        restrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@'\n\t\t},\n        templateUrl: '../views/activities/multiple_selection.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\tscope.items = shuffleArrayFactory.run(scope.options.items);\n\t\t\tscope.optionsPerRow = scope.options.hasOwnProperty('optionsPerRow') ? scope.options.optionsPerRow : false;\n\n\t\t\t// Revolvemos las opciones\n\t\t\tangular.forEach(scope.items, function(item){\n\t\t\t\titem.options = shuffleArrayFactory.run(item.options);\n\t\t\t});\n\n\t\t\t// Variables de éxito - fracaso\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\n\t\t\tscope.chances = typeof scope.options.chances !== \"undefined\" ? scope.options.chances : scope.items.length; // Posibilidades de realizar la actividad\n\t\t\tscope.rightAnswers = 0; // contador de respuestas buenas\n\t\t\tscope.minRightAnswers = scope.options.minRightAnswers; // número mínimo de respuestas\n\n\t\t\t// Disparadores para las preguntas buenas y malas\n\t\t\tscope.rightAnswer = false;\n\t\t\tscope.wrongAnswer = false;\n\n\t\t\t/**\n\t\t\t * Verifica la respuesta\n\t\t\t */\n\t\t\tscope.verify = function (item, option) {\n\n\t\t\t\tif (option.answer) {\n\t\t\t\t\t// respuesta buena\n\t\t\t\t\titem.isRight = true;\n\n\t\t\t\t\tscope.rightAnswers++;\n\t\t\t\t} else {\n\t\t\t\t\t// Respuesta incorrecta\n\t\t\t\t\titem.isWrong = true;\n\t\t\t\t}\n\n\t\t\t\tscope.chances--;\n\n\t\t\t\t//// Fin de la actividad\n\t\t\t\tif(scope.chances === 0) {\n\t\t\t\t\tif (scope.rightAnswers >= scope.minRightAnswers) {\n\t\t\t\t\t\tscope.success = true;\n\n\t\t\t\t\t\t// Activamos la siguiente\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\t\n\n\t\t\t/**\n\t\t\t * Estilos de las opciones\n\t\t\t */\n\t\t\tscope.getOptionsStyles = function () {\n\n\t\t\t\t// Si se define el número de elementos por ronda, devolvemos los estilos definidos\n\t\t\t\tif(scope.optionsPerRow)\n\t\t\t\t\treturn \"width: \" + (100 / scope.optionsPerRow) + \"%; float: left\";\n\n\t\t\t\t// Por defecto\n\t\t\t\treturn \"\";\n\n\t\t\t};\n\n\t\t}\n\t}; \n});\n","var lizNumericSequences = angular.module('lizNumericSequences', []);\n\nlizNumericSequences.directive('numericSequences', function  () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/numeric_sequences.html',\n\t\tlink: function (scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\t\tminRightAnswers = opt.minRightAnswers,\n\t\t\t\tchances = 0, // Contador de posibilidades\n\t\t\t\tsequences = opt.sequences;\n\n\t\t\tscope.sequences = [];\n\n\t\t\t// Disparadores para las preguntas buenas/malas\n\t\t\tscope.rightAnswer = false;\n\t\t\tscope.wrongAnswer = false;\n\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\t\n\t\t\t// Constructor de sequences\n\t\t\tsequences.forEach(function(s){\n\t\t\t\tscope.sequences.push([]); // Añadimos el nuevo array\n\n\t\t\t\tvar temp = scope.sequences[ scope.sequences.length - 1 ], // Puntero del último array\n\t\t\t\t\tnumber = {}; // variable temporal para los números\n\n\t\t\t\tfor(var i=0; i < s.sequence.length; i++){\n\t\t\t\t\tnumber = { number: s.sequence[i] }; // Creamos el nuevo elemento\n\n\t\t\t\t\t// si el elemento definido esta lleno, entonces solo se muestra. En caso contrario\n\t\t\t\t\t// se crea un input (html)\n\t\t\t\t\tif(s.toFill.indexOf(i) >= 0) {\n\t\t\t\t\t\tchances++; // alimentamos el número de posibilidades\n\t\t\t\t\t\tnumber.filled = false;  \n\t\t\t\t\t} else {\n\t\t\t\t\t\tnumber.filled = true;\n\t\t\t\t\t} \n\n\t\t\t\t\t// añadimos el elemento\n\t\t\t\t\ttemp.push(number); \n\t\t\t\t}\n\t\t\t}); // END forEach\n\n\t\t\t/**\n\t\t\t * Verifica la respuesta en el item\n\t\t\t */\n\t\t\tscope.verify = function (item) {\n\t\t\t\tif(item.input === '') return; \n\n\t\t\t\t// Si no es un número, borramos el último caractér\n\t\t\t\tif(!opt.allowAll) {\n\t\t\t\t\tif(!item.input.match(/^\\d+$/)){\n\t\t\t\t\t\titem.input = item.input.slice(0, -1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\t\t\n\t\t\t\t}\n\n\t\t\t\t// Si se ha llenado el input con los dígitos necesarios\n\t\t\t\tif(item.input.length === item.number.length){\n\t\t\t\t\t// Verificamos la respuesta\n\t\t\t\t\tif(item.input === item.number){\n\t\t\t\t\t\tscope.rightAnswer = item.number;\n\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscope.wrongAnswer = item.number;\n\t\t\t\t\t}\n\n\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\tchances--;\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} // if \n\t\t\t\t} // if\n\t\t\t}; // verify()\n\n\t\t}\n\t}; \n});\n","var lizOneGroup = angular.module('lizOneGroup', []);\n\n// Knockout Pairs Factory\nlizOneGroup.factory('oneGroupActivity', function ($rootScope) {\n\n\tvar oneGroupActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\toneGroupActivity.create = function (options) {\n\t\treturn new oneGroupActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\topt\t\t\t\t\t\tOpciones a utilizar.\n\t * @param {Array}\t\topt.data\t\t\t\tInformación de los elementos. Es necesario que cada una tenga la propiedad:\n\t *\n\t * \tanswer: {boolean} define si la respuesta es correcta o incorrecta y puede ser soltada en el contenedor\n\t * \tsrc: {string} imagen para el elemento\n\t * \talt: {string} texto alternativo\n\t *\n\t * @param {integer}\t\topt.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\topt.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {function}\topt.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\topt.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t * @param {integer}\t\topt.itemsPerRow\t\t\tNúmero de elementos por fila. 3 por defecto\n\t * @param {boolean}\t\topt.priority\t\t\tDefine si el botón de siguiente estará activo desde el inicio\n\t *\n\t */\n\toneGroupActivity._ViewModel = function (opt) {\n\t\tvar self = this;\n\n\t\tself.groupImg = opt.hasOwnProperty('groupImg') ? opt.groupImg : false;\n\t\tself.groupAlt = opt.hasOwnProperty('groupAlt') ? opt.groupAlt : false;\n\n\t\t// Observables \n\t\tself.items = ko.observableArray(opt.data);\n\t\tself.target = ko.observableArray();\n\n\t\t// Propiedades por defecto, si no existen\n\t\tko.utils.arrayForEach(self.items(), function(item){\n\t\t\tif(! item.hasOwnProperty('answer')) item.answer = true;\n\t\t\tif(! item.hasOwnProperty('title')) item.title = ''; \n\t\t\tif(! item.hasOwnProperty('text')) item.text = false; \n\t\t});\n\n\t\t// Ruta a la carpeta de imágenes\n\t\tself.resources = $rootScope.resources;\n\t\tself.itemsPerRow = typeof opt.itemsPerRow !== \"undefined\" ? opt.itemsPerRow : 3;\n\n\t\t// Disparador de preguntas correctas/incorrectas\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\tself.success = ko.observable(false);\n\t\tself.failure = ko.observable(false);\n\n\t\tself.rightAnswers = 0;\n\n\t\tself.chances = opt.chances ? opt.chances : opt.data.length;\n\t\tself.totalRightAnswer = opt.totalRightAnswer ? opt.totalRightAnswer : opt.data.length;\n\t\tself.priority = opt.priority\n\n\t\t// audio\n\t\tself.audio = ko.observable(opt.audio);\n\n\t\t/**\n\t\t * Reproduce el audio de la instrucción.\n\t\t */\n\t\tself.playAudio = function () {\n\t\t\t$('#audio-instruction')[0].play();\n\t\t};\n\n\t\t/**\n\t\t *\tFunción que se ejecuta al soltar el objeto dentro del contenedor\n\t\t */\n\t\tself.verifyAnswer = function (arg) {\n\n\t\t\t// No hacer nada y salir de la función, si el elemento se soltó en el mismo grupo inicial\n\t\t\tif(arg.sourceParent() == arg.targetParent()) return;\n\n\t\t\t// Calculamos si la respuesta es correcta o no usando la propiedad 'answer'\n\t\t\tif (arg.item.answer) {\n\t\t\t\t// Respuesta correcta\n\t\t\t\tself.rightAnswer(arg.item);\n\t\t\t\tself.rightAnswers++;\n\n\t\t\t\t// Llama a la función de respuesta buena\n\t\t\t\tif (typeof opt.rightAnswerCallback !== \"undefined\") opt.rightAnswerCallback();\n\n\t\t\t} else {\n\t\t\t\t// Respuesta Incorrecta\n\t\t\t\tself.wrongAnswer(arg.item);\n\t\t\t\targ.cancelDrop = true; // Devuelve el elemento a su posición origina\n\t\t\t}\n\n\t\t\t// Reducimos las posibilidades\n\t\t\tself.chances--;\n\n\t\t\t// Fin de la actividad\n\t\t\tif (self.chances === 0 || self.rightAnswers >= self.totalRightAnswer ) {\n\t\t\t\tif(self.rightAnswers >= opt.minRightAnswers) {\n\t\t\t\t\t// éxito\n\t\t\t\t\tself.success(true);\n\n\t\t\t\t\t// Llama a la función de éxito\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback();\n\n\t\t\t\t\t// Eliminamos beforeGoNext, si existe\n\t\t\t\t\tif(self.priority){\n\t\t\t\t\t\t$rootScope.beforeGoNext = undefined; // Limpiamos la función\t\n\t\t\t\t\t}\n\n\t\t\t\t\t// Activamos la siguiente ruta\n\t\t\t\t\t$rootScope.isNextEnabled = true;\n\n\t\t\t\t} else {\n\t\t\t\t\t// Fracaso\n\t\t\t\t\tself.failure(true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Si hay prioridad, activa/desactiva el botón de siguiente\n\t\t\tif(self.priority){\n\t\t\t\tif(self.rightAnswers >= opt.minRightAnswers) $rootScope.isNextEnabled = true;\n\t\t\t\telse $rootScope.isNextEnabled = false;\n\n\t\t\t\t$rootScope.$apply();\n\t\t\t}\n\t\t};\n\n\t\t// ===========================================================================\n\t\t// Si se a decidido usar la prioridad\n\t\t// ===========================================================================\n\t\tif(self.priority){\n\n\t\t\t$rootScope.beforeGoNext = function () {\n\t\t\t\t// Si el número de elementos es mayor al número de respuestas requeridas: ÉXITO!!!\n\t\t\t\tif(self.target().length >= opt.minRightAnswers){\n\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback();\n\t\t\t\t\tself.success(true);\n\t\t\t\t\treturn true; \n\n\t\t\t\t} else {\n\n\t\t\t\t\tself.failure(true);\n\t\t\t\t\treturn false; \n\n\t\t\t\t}\n\t\t\t};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con oneGroupActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\toneGroupActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn oneGroupActivity;\n\n});\n\nlizOneGroup.directive('oneGroup', function  (oneGroupActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\taudio: '@',\n\t\t\tdescription: '@',\n\t\t\ttitle: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/one_group.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\t// Añadimos el audio a options\n\t\t\tscope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n\n\t\t\toneGroupActivity.run(oneGroupActivity.create(scope.options));\n\t\t}\n\t}; \n});\n\n","var lizOneGroupRule = angular.module('lizOneGroupRule', []);\n\n// Knockout Pairs Factory\nlizOneGroupRule.factory('oneGroupRuleActivity', function ($rootScope) {\n\n\tvar oneGroupRuleActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\toneGroupRuleActivity.create = function (options) {\n\t\treturn new oneGroupRuleActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\topt\t\t\t\t\t\tOpciones a utilizar.\n\t * @param {Array}\t\topt.data\t\t\t\tInformación de los elementos. Es necesario que cada una tenga la propiedad:\n\t *\n\t * \tanswer: {boolean} define si la respuesta es correcta o incorrecta y puede ser soltada en el contenedor\n\t * \tsrc: {string} imagen para el elemento\n\t * \talt: {string} texto alternativo\n\t *\n\t * @param {integer}\t\topt.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\topt.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {function}\topt.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\topt.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t * @param {integer}\t\topt.itemsPerRow\t\t\tNúmero de elementos por fila. 3 por defecto\n\t * @param {boolean}\t\topt.priority\t\t\tDefine si el botón de siguiente estará activo desde el inicio\n\t *\n\t */\n\toneGroupRuleActivity._ViewModel = function (opt) {\n\t\tvar self = this;\n\n\t\tself.groupImg = opt.hasOwnProperty('groupImg') ? opt.groupImg : false;\n\t\tself.groupAlt = opt.hasOwnProperty('groupAlt') ? opt.groupAlt : false;\n\n\t\t// Observables \n\t\tself.items = ko.observableArray(opt.data);\n\t\tself.target = ko.observableArray();\n\n\t\t// Propiedades por defecto, si no existen\n\t\tko.utils.arrayForEach(self.items(), function(item){\n\t\t\tif(! item.hasOwnProperty('answer')) item.answer = true;\n\t\t\tif(! item.hasOwnProperty('title')) item.title = ''; \n\t\t\tif(! item.hasOwnProperty('text')) item.text = false; \n\t\t});\n\n\t\t// Ruta a la carpeta de imágenes\n\t\tself.resources = $rootScope.resources;\n\t\tself.itemsPerRow = typeof opt.itemsPerRow !== \"undefined\" ? opt.itemsPerRow : 3;\n\n\t\t// Disparador de preguntas correctas/incorrectas\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\tself.success = ko.observable(false);\n\t\tself.failure = ko.observable(false);\n\n\t\tself.rightAnswers = 0;\n\n\t\tself.chances = opt.chances ? opt.chances : opt.data.length;\n\t\tself.totalRightAnswer = opt.totalRightAnswer ? opt.totalRightAnswer : opt.data.length;\n\t\tself.priority = opt.priority\n\n\t\t// audio\n\t\tself.audio = ko.observable(opt.audio);\n\n\t\t/**\n\t\t * Reproduce el audio de la instrucción.\n\t\t */\n\t\tself.playAudio = function () {\n\t\t\t$('#audio-instruction')[0].play();\n\t\t};\n\n\t\t/**\n\t\t *\tFunción que se ejecuta al soltar el objeto dentro del contenedor\n\t\t */\n\t\tself.verifyAnswer = function (arg) {\n\n\t\t\t// No hacer nada y salir de la función, si el elemento se soltó en el mismo grupo inicial\n\t\t\tif(arg.sourceParent() == arg.targetParent()) return;\n\n\t\t\t// Calculamos si la respuesta es correcta o no usando la propiedad 'answer'\n\t\t\tif (arg.item.answer) {\n\t\t\t\t// Respuesta correcta\n\t\t\t\tself.rightAnswer(arg.item);\n\t\t\t\tself.rightAnswers++;\n\n\t\t\t\t// Llama a la función de respuesta buena\n\t\t\t\tif (typeof opt.rightAnswerCallback !== \"undefined\") opt.rightAnswerCallback();\n\n\t\t\t} else {\n\t\t\t\t// Respuesta Incorrecta\n\t\t\t\tself.wrongAnswer(arg.item);\n\t\t\t\targ.cancelDrop = true; // Devuelve el elemento a su posición origina\n\t\t\t}\n\n\t\t\t// Reducimos las posibilidades\n\t\t\tself.chances--;\n\n\t\t\t// Fin de la actividad\n\t\t\tif (self.chances === 0 || self.rightAnswers >= self.totalRightAnswer ) {\n\t\t\t\tif(self.rightAnswers >= opt.minRightAnswers) {\n\t\t\t\t\t// éxito\n\t\t\t\t\tself.success(true);\n\n\t\t\t\t\t// Llama a la función de éxito\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback();\n\n\t\t\t\t\t// Eliminamos beforeGoNext, si existe\n\t\t\t\t\tif(self.priority){\n\t\t\t\t\t\t$rootScope.beforeGoNext = undefined; // Limpiamos la función\t\n\t\t\t\t\t}\n\n\t\t\t\t\t// Activamos la siguiente ruta\n\t\t\t\t\t$rootScope.isNextEnabled = true;\n\n\t\t\t\t} else {\n\t\t\t\t\t// Fracaso\n\t\t\t\t\tself.failure(true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Si hay prioridad, activa/desactiva el botón de siguiente\n\t\t\tif(self.priority){\n\t\t\t\tif(self.rightAnswers >= opt.minRightAnswers) $rootScope.isNextEnabled = true;\n\t\t\t\telse $rootScope.isNextEnabled = false;\n\n\t\t\t\t$rootScope.$apply();\n\t\t\t}\n\t\t};\n\n\t\t// ===========================================================================\n\t\t// Si se a decidido usar la prioridad\n\t\t// ===========================================================================\n\t\tif(self.priority){\n\n\t\t\t$rootScope.beforeGoNext = function () {\n\t\t\t\t// Si el número de elementos es mayor al número de respuestas requeridas: ÉXITO!!!\n\t\t\t\tif(self.target().length >= opt.minRightAnswers){\n\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback();\n\t\t\t\t\tself.success(true);\n\t\t\t\t\treturn true; \n\n\t\t\t\t} else {\n\n\t\t\t\t\tself.failure(true);\n\t\t\t\t\treturn false; \n\n\t\t\t\t}\n\t\t\t};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con oneGroupActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\toneGroupRuleActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn oneGroupRuleActivity;\n\n});\n\nlizOneGroupRule.directive('oneGroupRule', function  (oneGroupRuleActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\taudio: '@',\n\t\t\tdescription: '@',\n\t\t\ttitle: '@',\n\t\t},\n\t\ttemplateUrl: '../views/activities/one_group_rule.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\t// Añadimos el audio a options\n\t\t\tscope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n\n\t\t\toneGroupRuleActivity.run(oneGroupRuleActivity.create(scope.options));\n\t\t}\n\t}; \n});\n\n","var lizOneGroupShape = angular.module('lizOneGroupShape', []);\n\nlizOneGroupShape.factory('oneGroupShapeActivity', function ($rootScope) {\n\n\tvar oneGroupShapeActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\toneGroupShapeActivity.create = function (options) {\n\t\treturn new oneGroupShapeActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\toptions\t\t\t\t\t\tOpciones a utilizar.\n\t *\n\t * @param {integer}\t\toptions.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\toptions.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {function}\toptions.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\toptions.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\toneGroupShapeActivity._ViewModel = function (options) {\n\t\tvar self = this;\n\n\t\tself.items = ko.observableArray(options.items); // Elementos a arrastrar\n\t\tself.canvas = options.canvas; // Forma del grupo\n\t\tself.canvasAlt = options.canvasAlt; // texto alternativo de la forma\n\n\t\tko.utils.arrayForEach(self.items(), function (item) {\n\t\t\tif(! item.hasOwnProperty('answer')) item.answer = true; // Define si el objeto es una respuesta correcta\n\t\t\tif(! item.hasOwnProperty('startsInGroup')) item.startsInGroup = false; // Define si el objeto empieza insertado en el grupo\n\t\t});\n\n\t\t// Insertamos los elementos marcados en el grupo, removiéndolos de self.items\n\t\tself.group = ko.observableArray(self.items.remove(function(item){\n\t\t\treturn item.startsInGroup;\n\t\t}));\n\n\t\t// Ruta a la carpeta de imágenes\n\t\tself.resources = $rootScope.resources;\n\n\t\t// Disparador de preguntas correctas/incorrectas\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\tself.success = ko.observable(false);\n\t\tself.failure = ko.observable(false);\n\n\t\tself.rightAnswers = 0;\n\n\t\tself.chances = options.chances ? options.chances : options.items.length;\n\n\t\t/**\n\t\t * Obtiene los estilos de cada elemento\n\t\t */\n\t\tself.getStyles = function (item) {\n\t\t\tvar styles = '';\n\n\t\t\tif(! item.answer) return;\n\n\t\t\tstyles += 'width: ' + item.w + '%;';\n\t\t\tstyles += 'height: ' + item.h + '%;';\n\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\tstyles += 'left: ' + item.l + '%;';\n\n\t\t\treturn styles;\n\t\t}\n\n\t\t/**\n\t\t *\tFunción que se ejecuta al soltar el objeto dentro del contenedor\n\t\t */\n\t\tself.verifyAnswer = function (arg) {\n\n\t\t\t// No hacer nada y salir de la función, si el elemento se soltó en el mismo grupo inicial\n\t\t\tif(arg.sourceParent() == arg.targetParent()) return;\n\n\t\t\t// Calculamos si la respuesta es correcta o no usando la propiedad 'answer'\n\t\t\tif (arg.item.answer) {\n\t\t\t\t// Respuesta correcta\n\t\t\t\tself.rightAnswer(arg.item);\n\t\t\t\tself.rightAnswers++;\n\n\t\t\t\t// Llama a la función de respuesta buena\n\t\t\t\tif (typeof options.rightAnswerCallback !== \"undefined\") options.rightAnswerCallback();\n\n\t\t\t} else {\n\t\t\t\t// Respuesta Incorrecta\n\t\t\t\tself.wrongAnswer(arg.item);\n\t\t\t\targ.cancelDrop = true; // Devuelve el elemento a su posición origina\n\t\t\t}\n\n\t\t\t// Reducimos las posibilidades\n\t\t\tself.chances--;\n\n\t\t\t// Fin de la actividad\n\t\t\tif (self.chances === 0) {\n\t\t\t\tif(self.rightAnswers >= options.minRightAnswers) {\n\t\t\t\t\t// éxito\n\t\t\t\t\tself.success(true);\n\n\t\t\t\t\t// Llama a la función de éxito\n\t\t\t\t\tif (typeof options.successCallback !== \"undefined\") options.successCallback();\n\n\t\t\t\t\t// Activamos la siguiente ruta\n\t\t\t\t\t$rootScope.isNextEnabled = true;\n\t\t\t\t} else {\n\t\t\t\t\t// Fracaso\n\t\t\t\t\tself.failure(true);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t};\n\n\t\t/**\n\t\t * Inicializa la instancia del ViewModel creado con oneGroupShapeActivity.create\n\t\t *\n\t\t * @param {object} instance Intancia del VM de knockout\n\t\t */\n\t\toneGroupShapeActivity.run = function (instance) {\n\t\t\tko.cleanNode($('#main-container')[0]);\n\t\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t\t};\n\n\t\treturn oneGroupShapeActivity;\n});\n\nlizOneGroupShape.directive('oneGroupShape', function  (oneGroupShapeActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/one_group_shape.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\toneGroupShapeActivity.run(oneGroupShapeActivity.create(scope.options));\n\t\t}\n\t}; \n});\n\n","var lizOneGroupToogle = angular.module('lizOneGroupToogle', []);\n\n// Knockout Pairs Factory\nlizOneGroupToogle.factory('oneGroupActivity', function ($rootScope) {\n\n\tvar oneGroupActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\toneGroupActivity.create = function (options) {\n\t\treturn new oneGroupActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\topt\t\t\t\t\t\tOpciones a utilizar.\n\t * @param {Array}\t\topt.data\t\t\t\tInformación de los elementos. Es necesario que cada una tenga la propiedad:\n\t *\n\t * \tanswer: {boolean} define si la respuesta es correcta o incorrecta y puede ser soltada en el contenedor\n\t * \tsrc: {string} imagen para el elemento\n\t * \talt: {string} texto alternativo\n\t *\n\t * @param {integer}\t\topt.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\topt.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {function}\topt.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\topt.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t * @param {integer}\t\topt.itemsPerRow\t\t\tNúmero de elementos por fila. 3 por defecto\n\t * @param {boolean}\t\topt.priority\t\t\tDefine si el botón de siguiente estará activo desde el inicio\n\t *\n\t */\n\toneGroupActivity._ViewModel = function (opt) {\n\t\tvar self = this;\n\n\t\tself.groupImg = opt.hasOwnProperty('groupImg') ? opt.groupImg : false;\n\t\tself.groupAlt = opt.hasOwnProperty('groupAlt') ? opt.groupAlt : false;\n\n\t\t// Observables \n\t\tself.items = ko.observableArray(opt.data);\n\t\tself.target = ko.observableArray();\n\n\t\t// Propiedades por defecto, si no existen\n\t\tko.utils.arrayForEach(self.items(), function(item){\n\t\t\tif(! item.hasOwnProperty('answer')) item.answer = true;\n\t\t\tif(! item.hasOwnProperty('title')) item.title = ''; \n\t\t\tif(! item.hasOwnProperty('text')) item.text = false; \n\t\t});\n\n\t\t// Ruta a la carpeta de imágenes\n\t\tself.resources = $rootScope.resources;\n\t\tself.itemsPerRow = typeof opt.itemsPerRow !== \"undefined\" ? opt.itemsPerRow : 3;\n\n\t\t// Disparador de preguntas correctas/incorrectas\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\tself.success = ko.observable(false);\n\t\tself.failure = ko.observable(false);\n\n\t\tself.rightAnswers = 0;\n\n\t\tself.chances = opt.chances ? opt.chances : opt.data.length;\n\t\tself.totalRightAnswer = opt.totalRightAnswer ? opt.totalRightAnswer : opt.data.length;\n\t\tself.priority = opt.priority\n\n\t\t// audio\n\t\tself.audio = ko.observable(opt.audio);\n\n\t\t/**\n\t\t * Reproduce el audio de la instrucción.\n\t\t */\n\t\tself.playAudio = function () {\n\t\t\t$('#audio-instruction')[0].play();\n\t\t};\n\n\t\t/**\n\t\t *\tFunción que se ejecuta al soltar el objeto dentro del contenedor\n\t\t */\n\t\tself.verifyAnswer = function (arg) {\n\n\t\t\t// No hacer nada y salir de la función, si el elemento se soltó en el mismo grupo inicial\n\t\t\tif(arg.sourceParent() == arg.targetParent()) return;\n\n\t\t\t// Calculamos si la respuesta es correcta o no usando la propiedad 'answer'\n\t\t\tif (arg.item.answer) {\n\t\t\t\t// Respuesta correcta\n\t\t\t\tself.rightAnswer(arg.item);\n\t\t\t\tself.rightAnswers++;\n\n\t\t\t\t// Llama a la función de respuesta buena\n\t\t\t\tif (typeof opt.rightAnswerCallback !== \"undefined\") opt.rightAnswerCallback();\n\n\t\t\t} else {\n\t\t\t\t// Respuesta Incorrecta\n\t\t\t\tself.wrongAnswer(arg.item);\n\t\t\t\targ.cancelDrop = true; // Devuelve el elemento a su posición origina\n\t\t\t}\n\n\t\t\t// Reducimos las posibilidades\n\t\t\tself.chances--;\n\n\t\t\t// Fin de la actividad\n\t\t\tif (self.chances === 0 || self.rightAnswers >= self.totalRightAnswer ) {\n\t\t\t\tif(self.rightAnswers >= opt.minRightAnswers) {\n\t\t\t\t\t// éxito\n\t\t\t\t\tself.success(true);\n\n\t\t\t\t\t// Llama a la función de éxito\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback();\n\n\t\t\t\t\t// Eliminamos beforeGoNext, si existe\n\t\t\t\t\tif(self.priority){\n\t\t\t\t\t\t$rootScope.beforeGoNext = undefined; // Limpiamos la función\t\n\t\t\t\t\t}\n\n\t\t\t\t\t// Activamos la siguiente ruta\n\t\t\t\t\t$rootScope.isNextEnabled = true;\n\n\t\t\t\t} else {\n\t\t\t\t\t// Fracaso\n\t\t\t\t\tself.failure(true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Si hay prioridad, activa/desactiva el botón de siguiente\n\t\t\tif(self.priority){\n\t\t\t\tif(self.rightAnswers >= opt.minRightAnswers) $rootScope.isNextEnabled = true;\n\t\t\t\telse $rootScope.isNextEnabled = false;\n\n\t\t\t\t$rootScope.$apply();\n\t\t\t}\n\t\t};\n\n\t\t// ===========================================================================\n\t\t// Si se a decidido usar la prioridad\n\t\t// ===========================================================================\n\t\tif(self.priority){\n\n\t\t\t$rootScope.beforeGoNext = function () {\n\t\t\t\t// Si el número de elementos es mayor al número de respuestas requeridas: ÉXITO!!!\n\t\t\t\tif(self.target().length >= opt.minRightAnswers){\n\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback();\n\t\t\t\t\tself.success(true);\n\t\t\t\t\treturn true; \n\n\t\t\t\t} else {\n\n\t\t\t\t\tself.failure(true);\n\t\t\t\t\treturn false; \n\n\t\t\t\t}\n\t\t\t};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con oneGroupActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\toneGroupActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn oneGroupActivity;\n\n});\n\nlizOneGroupToogle.directive('oneGroupToogle', function  (oneGroupActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\taudio: '@',\n\t\t\tdescription: '@',\n\t\t\ttitle: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/one_group_toogle.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\t// Añadimos el audio a options\n\t\t\tscope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n\n\t\t\toneGroupActivity.run(oneGroupActivity.create(scope.options));\n\t\t}\n\t}; \n});\n\n","var lizOperationInput = angular.module('lizOperationInput', []);\n\nlizOperationInput.directive('operationInput', function  () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\taudio: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/operation_input.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\tvar opt = scope.options,\n\t\t\t\tminRightAnswers = opt.minRightAnswers,\n\t\t\t\trightAnswers = 0,\n\t\t\t\tcompletedInputs = 0, // Contador para encontrar el fin de la actividad\n\t\t\t\ttotalInputs = opt.units.length + 1, // Unidades + total\n\t\t\t\tinputWidth = opt.hasOwnProperty('inputWidth') ? opt.inputWidth : false;\n\n\t\t\t// Remotamos las variables desde el controlador\n\t\t\tscope.units = opt.units;\n\t\t\tscope.total = opt.total;\n\n\t\t\tscope.rightAnswer = false; \n\t\t\tscope.wrongAnswer = false; \n\t\t\tscope.success = false; \n\t\t\tscope.failure = false;\n\n\t\t\t// Constructor de items\n\t\t\tscope.units.forEach(function (item) {\n\t\t\t\titem._input = ''; // Modelo que se vincula al input \n\t\t\t\titem.chances = opt.chancesPerInput; // Posibilidades por cada input\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\tscope.verify = function (item) {\n\t\t\t\tif(item._input === '') return; \n\n\t\t\t\t// Si se ha llenado el input con los dígitos necesarios\n\t\t\t\tif(item.input.length === item._input.length){\n\n\t\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\n\t\t\t\t\tif(item.input === item._input){\n\t\t\t\t\t\trightAnswers++; // aumenta las respuestas correctas\n\t\t\t\t\t\tscope.rightAnswer = Math.random(); // Disparador de respuesta\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\titem._input = '';\n\t\t\t\t\t\tscope.wrongAnswer = Math.random(); // Disparador de respuesta\n\t\t\t\t\t\titem.chances--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Termina y bloquea\n\t\t\t\t\tif(item.chances === 0 || item.right){\n\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\tcompletedInputs++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(totalInputs === completedInputs){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t\t} // if\n\t\t\t}; // verify()\n\n\n\t\t\t/*\n\t\t\t * Devuelve los estilos de los inputs\n\t\t\t */\n\t\t\tscope.getInputStyles = function () {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tif(inputWidth){\n\t\t\t\t\tstyles += \"width: \" + inputWidth + ';';\n\t\t\t\t}\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t}\n\t}; \n});\n","var lizPairs = angular.module('lizPairs', []);\n\n// Knockout Pairs Factory\nlizPairs.factory('pairsActivity', function ($rootScope) {\n\n\tvar pairsActivity = {};\n\n  /**\n   * Crea el ViewModel\n   */\n  pairsActivity.create = function (options) {\n    return new pairsActivity._ViewModel(options);\n  };\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\topt\t\t\t\t\t\tOpciones a utilizar.\n\t * @param {Array}\t\t\topt.data\t\t\t\tInformación de los elementos. Dentro de cada objeto, se pueden definir las propiedades:\n\t *\n\t *\ttarget: Permite darle un orden apropiado a los targets. Debe empezar desde 0 y la propiedad opt.randomTargets debe estar desactivada\n\t *\n\t * @param {integer}\t\topt.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\topt.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {boolean}\t\topt.randomItems\t\t\tDefine si los elementos deben ser puestos en forma aleatoria\n\t * @param {boolean}\t\topt.randomTargets\t\tDefine si los objetivos debe ser puestos en forma aleatoria\n\t * @param {function}\topt.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\topt.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\tpairsActivity._ViewModel = function (opt) {\n\t\tvar self = this;\n\n\t\t// ordena el array de forma aleatoria usando el algoritmo de Fisher-Yates\n\t\tself.shuffleArray = function(array) {\n\t\t\tfor (var i = array.length - 1; i > 0; i--) {\n\t\t\t\tvar j = Math.floor(Math.random() * (i + 1));\n\t\t\t\tvar temp = array[i];\n\t\t\t\tarray[i] = array[j];\n\t\t\t\tarray[j] = temp;\n\t\t\t}\n\t\t\treturn array;\n\t\t};\n\n\t\t// Inicializa las opciones\n\t\tvar data = opt.data,\n      minRightAnswers = opt.minRightAnswers ? opt.minRightAnswers : data.length,\n      randomItems = opt.randomItems ? true : false,\n      randomTargets = opt.randomTargets ? true : false,\n      chances = opt.chances ? opt.chances : data.length,\n      targets_data = data.slice(0),   // Clonamos el array para empezar a trabajar\n      completedItems = 0, // contador de elementos completos\n      border = opt.hasOwnProperty('border') ? opt.border : true,\n      padding = opt.hasOwnProperty('padding') ? opt.padding : true;\n\n\t\t// Objetos aleatorios\n\t\tif(randomItems) {\n\t\t\tdata = self.shuffleArray(data);\n\t\t}\n\n\t\t// Creamos los índices para la posición absoluta\n\t\tfor(var i = 0; i < data.length; i++){\n\t\t\tdata[i]._index = i;\n\t\t}\n\n\t\tself.itemsPerRow = (opt.hasOwnProperty(\"itemsPerRow\")) ? opt.itemsPerRow : opt.data.length;\n\n\t\t// audio\n\t\tself.audio = ko.observable(opt.audio);\n\n\t\t// Definimos los observableArrays para items y targets\n\t\tself.items = ko.observableArray(data);\n\t\tself.targets = ko.observableArray();\n\n\t\t// Carpeta de recursos desde angular\n\t\tself.resources = $rootScope.resources;\n\n\t\tself.maximumElements = 1; // IMPORTANTE: Requerido para que los sortables no acepten más de un elemento\n\t\tself.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\t\tself.failure = ko.observable(false);\n\t\tself.success = ko.observable(false);\n\n\t\t// ======================================================================================\n\t\t// Constructor de los targets\n\t\t// ======================================================================================\n\n\t\t// Si la opción de randomTargets está activada, aplicamos el orden aleatorio\n\t\tif(randomTargets){\n\t\t\ttargets_data = self.shuffleArray(targets_data);\n\t\t} else {\n\t\t\t// En caso contrario, se utiliza la propiedad target, dentro del array de data\n\t\t\ttargets_data.sort(function (a, b) {\n\t\t\t\treturn ((a.target < b.target) ? -1 : ((a.target > b.target) ? 1 : 0));\n\t\t\t});\n\t\t}\n\n\t\tvar _index = 1; // índice que se le asignará a cada uno de los elementos\n\n\t\tko.utils.arrayForEach(targets_data, function (item) {\n\t\t\t// Creamos el nuevo target. Añadimos un índice para hacer la relación 1 a 1\n\t\t\titem._items = ko.observableArray();\n\t\t\tif (opt.hasOwnProperty(\"chancesPerItem\")) {\n\t\t\t\titem.chances = opt.chancesPerItem - 1;\n\t\t\t}\n\t\t\titem._items._id = _index++;\n\n\t\t\tself.targets.push(item);\n\t\t});\n\t\t// ======================================================================================\n\t\t// FIN Constructor\n\t\t// ======================================================================================\n\n\t\t/**\n\t\t * Reproduce el audio de la instrucción.\n\t\t */\n\t\tself.playAudio = function () {\n\t\t\t$('#audio-instruction')[0].play();\n\t\t};\n\n\t\t// Define si el target esta lleno utilizando self.maximumElements\n\t\tself.isContainerFull = function (parent) {\n\t\t\treturn parent().length < self.maximumElements;\n\t\t};\n\n\t\t// Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\n\t\tself.verifyAnswer = function (arg) {\n\t\t\tvar parent = arg.targetParent,\n\t\t\titem = arg.item;\n\n\t\t\t// Si el target es igual al contenedor inicial, se devuelve a su posición original\n\t\t\tif(typeof parent._id === \"undefined\") {\n\t\t\t\targ.cancelDrop = true;\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// Compara el _id para encontrar la pareja idéntica. Si es igual, la respuesta es correcta\n\t\t\t\tif(parent._id === item._items._id){\n\n\t\t\t\t\t// RESPUESTA CORRECTA\n\t\t\t\t\tself.rightAnswers++;\n\t\t\t\t\tself.rightAnswer(item);\n          \t\t\tcompletedItems += 1;\n          \t\t\t// Reducimos en 1 las posibilidades\n\t\t\t\t\tchances -= 1;\n\n\t\t\t\t\t// Si se definió una función cuando la respuesta es correcta, se corre\n\t\t\t\t\tif(typeof opt.rightAnswerCallback !== \"undefined\" ) opt.rightAnswerCallback(item);\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// RESPUESTA INCORRECTA\n\t\t\t\t\tself.wrongAnswer(item);\n\t\t\t\t\targ.cancelDrop = true;\n\n\t\t\t\t\tif (item.hasOwnProperty(\"chances\")) {\n\t\t\t\t\t\tif(item.chances === 0){\n\t\t\t\t\t\t\t// Reducimos en 1 las posibilidades\n\t\t\t\t\t\t\tchances -= 1;\n\t\t\t\t\t\t\t$(\"#\" + item._items._id).hide(200);\n\t\t\t        \t}else{item.chances--;}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Reducimos en 1 las posibilidades\n\t\t\t\t\t\tchances -= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// La actividad termina cuando el número de posibilidades se termina\n\t\t\tif(chances === 0 || completedItems === self.targets().length) {\n\t\t\t\t// Si el número de respuestas correctas es mayor o igual al requerido inicialmente\n\t\t\t\tif(self.rightAnswers >= minRightAnswers) {\n\t\t\t\t\tself.success(true); // Trigger de éxito\n\n\t\t\t\t\t// Se llama la función de éxito, definida por el desarrollador\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback();\n\n\t\t\t\t\t$rootScope.isNextEnabled = true; // Activamos el siguiente\n\t\t\t\t} else {\n\t\t\t\t\tself.failure(true); // Trigger de fracaso\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n    /**\n     * Estilos de los elementos.\n     */\n     var _itemIndex = 0;\n    self.getItemStyles = function (item) {\n      var styles = '';\n\n     //  if (opt.hasOwnProperty(\"itemsPerRow\")) {\n     //  \tif (_itemIndex === opt.itemsPerRow) {\n     //  \t\t_itemIndex = 0;\n     //  \t}\n\n     //  \tif (item._index >= opt.itemsPerRow) {\n  \t\t\t// styles += 'top: 33%;';\n     //  \t}\n     //  \tstyles += 'width: ' + (100 / opt.itemsPerRow) + '%;';\n     //  \tstyles += 'left: ' + ((100 / opt.itemsPerRow) * _itemIndex ) + '%;';\n     //  \t_itemIndex++\n     //  } else {\n      \tstyles += 'width: ' + (100 / self.targets().length) + '%;';\n      \n\n      \n      \tstyles += 'left: ' + ((100 / self.targets().length) * item._index ) + '%;';\n      // }\n      \n      styles += 'position: absolute;';\n      return styles;\n    };\n\n    /**\n     * Estilos de cada objetivo.\n     * @returns {string}\n     */\n    self.getTargetStyles = function () {\n      var styles = '';\n\n      if (opt.hasOwnProperty(\"itemsPerRow\")) {\n  \t\tstyles += 'width: ' + (100 / opt.itemsPerRow) + '%;';\n      } else {\n      \tstyles += 'width: ' + (100 / self.targets().length) + '%;';\n      }\n      \n      if(typeof opt.targetStyles !== \"undefined\") styles += opt.targetStyles;\n\n      return styles;\n    };\n\n\t\t/**\n\t\t * Estilos para elementos internos de target e item.\n\t\t */\n\t\tself.getInnerStyles = function (item) {\n\t\t\tvar styles = '';\n\n\t\t\t// Estilos Opcionales\n\t\t\tif(border) styles += 'border: 4px solid #000;';\n\t\t\tif(padding) styles += 'padding: 4px;';\n\n\t\t\treturn styles;\n\t\t}\n\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con pairsActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\tpairsActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn pairsActivity;\n\n});\n\nlizPairs.directive('pairs', function  (pairsActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\ttitletop: '@',\n\t\t\tcustomClass: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/pairs.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\tif(typeof scope.customClass !== \"undefined\"){\n\t\t\t\tscope.$root.customClass = scope.customClass;\n\t\t\t}\n\n\t\t\t// Definimos los contenedores y los elementos transcluídos\n\t\t\tvar itemChildren = element.find('.transcluded item').children(),\n\t\t\titemContainer = element.find('.item'),\n\t\t\ttargetChildren = element.find('.transcluded target').children(),\n\t\t\ttargetContainer = element.find('.target')\n\t\t\titemTargetChildren = element.find('.transcluded item-target').children(),\n\t\t\titemTargetContainer = element.find('.item-target');\n\n\t\t\t// Se añade cada uno de los hijos a la plantilla en la posición adecuada\n\t\t\tangular.forEach(itemChildren, function (elem) { itemContainer.append(elem); });\n\t\t\tangular.forEach(targetChildren, function (elem) { targetContainer.append(elem); });\n\t\t\tangular.forEach(itemTargetChildren, function (elem) { itemTargetContainer.append(elem); });\n\n\t\t\t// Se elimina el elemento transcluded del DOM\n\t\t\telement.find('.transcluded').remove();\n\n\t\t\t// Añadimos el audio a options\n\t\t\tscope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n\n\t\t\t// Corremos la aplicación\n\t\t\tvar vm = pairsActivity.create(scope.options);\n\t\t\tpairsActivity.run(vm);\n\t\t}\n\t}; \n});\n","var lizPairsInputs = angular.module('lizPairsInputs', []);\n\nlizPairsInputs.directive('pairsInputs', function ($timeout) {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/activities/pairs_inputs.html',\n\t\tscope: {\n\t\t\toptions: \"=\",\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\timg: '@',\n\t\t\talt: '@',\n\t\t\taudio:'@',\n\t\t\ttheme: '@'\n\t\t},\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\tvar opt = scope.options,\n\t\t\t\tminRightAnswers = opt.minRightAnswers,\n\t\t\t\trightAnswers = 0,\n\t\t\t\tcompletedInputs = 0, // Contador para encontrar el fin de la actividad\n\t\t\t\tinputWidth = opt.hasOwnProperty('inputWidth') ? opt.inputWidth : false;\n\n\t\t\tattrs.$observe( 'theme', function(val) {\n\t\t\t\tif ( !angular.isDefined( val ) ) {\n\t\t\t\t\tscope.theme = 'default';\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tscope.items = opt.items; // parejas de inputs\n\t\t\tscope.success = false; \n\t\t\tscope.failure = false;\n\n\t\t\t// Constructor de items\n\t\t\tscope.items.forEach(function (item) {\n\t\t\t\titem._input = ''; // Modelo que se vincula al input \n\t\t\t\titem.chances = opt.chancesPerInput; // Posibilidades por cada input\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\tscope.verify = function (item) {\n\t\t\t\tif(item._input === '') return; \n\n\t\t\t\t// Si se ha llenado el input con los dígitos necesarios\n\t\t\t\tif(item.input.length === item._input.length){\n\n\t\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\n\t\t\t\t\tif(item.input === item._input){\n\t\t\t\t\t\trightAnswers++; // aumenta las respuestas correctas\n\t\t\t\t\t\titem.wrong = false; // Pasa a falso, para ocultarlo\n\t\t\t\t\t\titem.right = true; \n\t\t\t\t\t} else {\n\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t\titem._input = '';\n\t\t\t\t\t\titem.chances--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Termina y bloquea\n\t\t\t\t\tif(item.chances === 0 || item.right){\n\t\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\t\tcompletedInputs++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(scope.items.length === completedInputs){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t\t} // if\n\t\t\t}; // verify()\n\n\n\t\t\t/*\n\t\t\t * Devuelve los estilos de los inputs\n\t\t\t */\n\t\t\tscope.getInputStyles = function () {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tif(inputWidth){\n\t\t\t\t\tstyles += \"width: \" + inputWidth + ';';\n\t\t\t\t}\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t}\n\t};\n});\n","var lizPairsSquares = angular.module('lizPairsSquares', []);\n\n// Knockout Pairs Factory\nlizPairsSquares.factory('pairsSquaresActivity', function ($rootScope, shuffleArrayFactory) {\n\n\tvar pairsSquaresActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tpairsSquaresActivity.create = function (options) {\n\t\treturn new pairsSquaresActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\toptions\t\t\t\t\t\tOpciones a utilizar.\n\t * @param {Array}\t\toptions.data\t\t\t\tInformación de los elementos. Dentro de cada objeto, se pueden definir las propiedades:\n\t *\n\t *\ttarget: Permite darle un orden apropiado a los targets. Debe empezar desde 0 y la propiedad options.randomTargets debe estar desactivada\n\t *\n\t * @param {integer}\t\toptions.pairs\t\t\t\tNúmero de parejas a colocar\n\t * @param {integer}\t\toptions.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\toptions.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {function}\toptions.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\toptions.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\tpairsSquaresActivity._ViewModel = function (options) {\n\t\tvar self = this;\n\n\t\t/**\n\t\t * Usamos una clase especial para poder definir las parejas\n\t\t */\n\t\tself.Pair = function (options) {\n\t\t\tthis.container1 = ko.observableArray();\n\t\t\tthis.container2 = ko.observableArray();\n\n\t\t\tthis.container1._id = 1;\n\t\t\tthis.container2._id = 2;\n\n\t\t\tthis.container1._parent = this;\n\t\t\tthis.container2._parent = this;\n\t\t}\n\n\t\t// Inicializa las opciones\n\t\tvar chances = options.chances ? options.chances : options.items.lenght,\n\t\t\tcounter = 0, // Contador para poner los id en los elementos de stack\n\t\t\tpairs = options.pairs,\n\t\t\titem_clone = {}, // Variable auxiliar para clonar el índice\n\t\t\ttempStack = []; // array temporal para stack\n\n\t\tself.pairsArray = ko.observableArray(); // Conjunto de parejas\n\n\t\tself.stack = ko.observableArray(); // Pila de elementos arrastrables\n\n\t\t// Alimentamos el array de parejas\n\t\tfor (var i=0; i < pairs; i++) {\n\t\t\tself.pairsArray.push(new self.Pair({}));\n\t\t}\n\n\t\t// tomamos los items para crear el stack\n\t\tko.utils.arrayForEach(options.items, function(item){\n\t\t\t// Si no tiene la propiedad answer, se define en falso\n\t\t\tif(! item.hasOwnProperty('answer')) item.answer = false;\n\n\n\t\t\tif(item.answer){\n\t\t\t\titem._id = ++counter;\n\n\t\t\t\t// Creamos un clon del elemento para añadirlo con otro serial\n\t\t\t\titem_clone = $.extend(true, {}, item);\n\n\t\t\t\tdelete item_clone.answer;\n\t\t\t\titem_clone.serial = (Math.random() + 1).toString(36).substring(7);\n\t\t\t\ttempStack.push(item_clone); // Debemos agregarlo dos veces para así crear la pareja\n\n\t\t\t} else {\n\t\t\t\titem._id = -1;\n\t\t\t}\n\n\t\t\tdelete item.answer; // Elimina el elemento answer\n\t\t\titem.serial = (Math.random() + 1).toString(36).substring(7); // añade una clave única\n\t\t\ttempStack.push(item);\n\n\t\t});\n\n\t\t// Añadimos los elementos al stack (observableArray)\n\t\tself.stack(shuffleArrayFactory.run(tempStack));\n\n\t\t// Carpeta de recursos desde angular\n\t\tself.resources = $rootScope.resources;\n\n\t\tself.maximumElements = 1; // IMPORTANTE: Requerido para que los sortables no acepten más de un elemento\n\t\tself.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\t\tself.failure = ko.observable(false);\n\t\tself.success = ko.observable(false);\n\n\t\t// Define si el target esta lleno utilizando self.maximumElements\n\t\tself.isContainerFull = function (parent) {\n\t\t\treturn parent().length < self.maximumElements;\n\t\t};\n\n\t\t// Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\n\t\tself.verifyAnswer = function (arg) {\n\t\t\tvar item = arg.item,\n\t\t\tparent = arg.targetParent._parent,\n\t\t\tcomparedItem = {};\n\n\t\t\t// Si se trata del stack, salimos\n\t\t\tif(arg.targetParent === arg.sourceParent) return;\n\n\t\t\t// si el elemento pertenece a una pareja\n\t\t\tif(item._id > 0){\n\t\t\t\t// Si ambos cuadros tienen elementos\n\t\t\t\tif(parent.container1().length || parent.container2().length){\n\t\t\t\t\t// Aquí, comparamos los elementos para ver si la respuesta es correcta o incorrecta\n\t\t\t\t\tif(parent.container1().length) comparedItem = parent.container1()[0];\n\t\t\t\t\tif(parent.container2().length) comparedItem = parent.container2()[0];\n\n\t\t\t\t\tif(comparedItem._id === item._id){\n\t\t\t\t\t\t// Respuesta Correcta\n\t\t\t\t\t\tself.rightAnswer(item);\n\t\t\t\t\t\tself.rightAnswers++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Respuesta Incorrecta\n\t\t\t\t\t\tself.wrongAnswer(item);\n\t\t\t\t\t\targ.cancelDrop = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// respuesta mala desde el inicio\n\t\t\t\tself.wrongAnswer(item);\n\t\t\t\targ.cancelDrop = true;\n\t\t\t}\n\n\t\t\t// Reducimos en 1 las posibilidades\n\t\t\tchances--;\n\n\t\t\t// La actividad termina cuando el número de posibilidades se termina\n\t\t\tif(chances === 0) {\n\t\t\t\t// Si el número de respuestas correctas es mayor o igual al requerido inicialmente\n\t\t\t\tif(self.rightAnswers >= options.minRightAnswers) {\n\t\t\t\t\t// Trigger de éxito\n\t\t\t\t\tself.success(true);\n\n\t\t\t\t\t// Se llama la función de éxito, definida por el desarrollador\n\t\t\t\t\tif (typeof options.successCallback !== \"undefined\") options.successCallback();\n\n\t\t\t\t\t// Activamos el siguiente\n\t\t\t\t\t$rootScope.isNextEnabled = true;\n\n\t\t\t\t} else {\n\t\t\t\t\t// Trigger de fracaso\n\t\t\t\t\tself.failure(true);\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t};\n\n};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con pairsSquaresActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\tpairsSquaresActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn pairsSquaresActivity;\n\n});\n\n\nlizPairsSquares.directive('pairsSquares', function  (pairsSquaresActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/pairs_squares.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\t// Definimos los contenedores y los elementos transcluídos\n\t\t\tvar square1Container = element.find('.square1 .item'),\n\t\t\tsquare2Container = element.find('.square2 .item'),\n\t\t\titemContainer = element.find('.stack .item');\n\n\t\t\t// Se añade cada uno de los hijos a la plantilla en la posición adecuada\n\t\t\tangular.forEach(element.find('.transcluded item').clone().children(), function (elem) { square1Container.append(elem); });\n\t\t\tangular.forEach(element.find('.transcluded item').clone().children(), function (elem) { square2Container.append(elem); });\n\t\t\tangular.forEach(element.find('.transcluded item').clone().children(), function (elem) { itemContainer.append(elem); });\n\n\t\t\t// Se elimina el elemento transcluded del DOM\n\t\t\telement.find('.transcluded').remove();\n\n\t\t\t// Corremos la aplicación\n\t\t\tvar vm = pairsSquaresActivity.create(scope.options);\n\t\t\tpairsSquaresActivity.run(vm);\n\t\t}\n\t}; \n});\n","var lizPairsWithMessage = angular.module('lizPairsWithMessage', []);\n\n// Knockout Pairs Factory\nlizPairsWithMessage.factory('pairsActivity', function ($rootScope) {\n\n    var pairsActivity = {};\n\n    /**\n     * Crea el ViewModel\n     */\n    pairsActivity.create = function (options) {\n        return new pairsActivity._ViewModel(options);\n    };\n\n    /**\n     * Genera el ViewModel de las parejas con sus funcionalidades\n     *\n     * Recibe un objeto con las siguientes propiedades\n     *\n     * @param {object}\t\topt\t\t\t\t\t\tOpciones a utilizar.\n     * @param {Array}\t\t\topt.data\t\t\t\tInformación de los elementos. Dentro de cada objeto, se pueden definir las propiedades:\n     *\n     *\ttarget: Permite darle un orden apropiado a los targets. Debe empezar desde 0 y la propiedad opt.randomTargets debe estar desactivada\n     *\n     * @param {integer}\t\topt.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n     * @param {integer}\t\topt.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n     * @param {boolean}\t\topt.randomItems\t\t\tDefine si los elementos deben ser puestos en forma aleatoria\n     * @param {boolean}\t\topt.randomTargets\t\tDefine si los objetivos debe ser puestos en forma aleatoria\n     * @param {function}\topt.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n     * @param {function}\topt.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n     *\n     */\n    pairsActivity._ViewModel = function (opt) {\n        var self = this;\n\n        // ordena el array de forma aleatoria usando el algoritmo de Fisher-Yates\n        self.shuffleArray = function(array) {\n            for (var i = array.length - 1; i > 0; i--) {\n                var j = Math.floor(Math.random() * (i + 1));\n                var temp = array[i];\n                array[i] = array[j];\n                array[j] = temp;\n            }\n            return array;\n        };\n\n        // Inicializa las opciones\n        var data = opt.data,\n            minRightAnswers = opt.minRightAnswers ? opt.minRightAnswers : data.length,\n            randomItems = opt.randomItems ? true : false,\n            randomTargets = opt.randomTargets ? true : false,\n            chances = opt.chances ? opt.chances : data.length,\n            targets_data = data.slice(0),   // Clonamos el array para empezar a trabajar\n            completedItems = 0, // contador de elementos completos\n            border = opt.hasOwnProperty('border') ? opt.border : true,\n            padding = opt.hasOwnProperty('padding') ? opt.padding : true;\n\n        // Objetos aleatorios\n        if(randomItems) {\n            data = self.shuffleArray(data);\n        }\n\n        // Creamos los índices para la posición absoluta\n        for(var i = 0; i < data.length; i++){\n            data[i]._index = i;\n        }\n\n        self.itemsPerRow = (opt.hasOwnProperty(\"itemsPerRow\")) ? opt.itemsPerRow : opt.data.length;\n\n        // audio\n        self.audio = ko.observable(opt.audio);\n\n        // Definimos los observableArrays para items y targets\n        self.items = ko.observableArray(data);\n        self.targets = ko.observableArray();\n\n        // Carpeta de recursos desde angular\n        self.resources = $rootScope.resources;\n\n        self.maximumElements = 1; // IMPORTANTE: Requerido para que los sortables no acepten más de un elemento\n        self.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n\n        // Triggers que se activan cuando la respuesta es correcta/incorrecta\n        self.rightAnswer = ko.observable();\n        self.wrongAnswer = ko.observable();\n\n        // Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n        self.failure = ko.observable(false);\n        self.success = ko.observable(false);\n\n        // ======================================================================================\n        // Constructor de los targets\n        // ======================================================================================\n\n        // Si la opción de randomTargets está activada, aplicamos el orden aleatorio\n        if(randomTargets){\n            targets_data = self.shuffleArray(targets_data);\n        } else {\n            // En caso contrario, se utiliza la propiedad target, dentro del array de data\n            targets_data.sort(function (a, b) {\n                return ((a.target < b.target) ? -1 : ((a.target > b.target) ? 1 : 0));\n            });\n        }\n\n        var _index = 1; // índice que se le asignará a cada uno de los elementos\n\n        ko.utils.arrayForEach(targets_data, function (item) {\n            // Creamos el nuevo target. Añadimos un índice para hacer la relación 1 a 1\n            item._items = ko.observableArray();\n            if (opt.hasOwnProperty(\"chancesPerItem\")) {\n                item.chances = opt.chancesPerItem - 1;\n            }\n            item._items._id = _index++;\n\n            self.targets.push(item);\n        });\n        // ======================================================================================\n        // FIN Constructor\n        // ======================================================================================\n\n        /**\n         * Reproduce el audio de la instrucción.\n         */\n        self.playAudio = function () {\n            $('#audio-instruction')[0].play();\n        };\n\n        // Define si el target esta lleno utilizando self.maximumElements\n        self.isContainerFull = function (parent) {\n            return parent().length < self.maximumElements;\n        };\n\n        // Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\n        self.verifyAnswer = function (arg) {\n\n            var parent = arg.targetParent,\n                item = arg.item;\n\n            // Si el target es igual al contenedor inicial, se devuelve a su posición original\n            if(typeof parent._id === \"undefined\") {\n                arg.cancelDrop = true;\n                return;\n            } else {\n                // Compara el _id para encontrar la pareja idéntica. Si es igual, la respuesta es correcta\n                if(parent._id === item._items._id){\n\n                    // RESPUESTA CORRECTA\n                    self.rightAnswers++;\n                    self.rightAnswer(item);\n                    completedItems += 1;\n                    // Reducimos en 1 las posibilidades\n                    chances -= 1;\n\n                    // Si se definió una función cuando la respuesta es correcta, se corre\n                    if(typeof opt.rightAnswerCallback !== \"undefined\" ) opt.rightAnswerCallback(item);\n\n                } else {\n\n                    // RESPUESTA INCORRECTA\n                    self.wrongAnswer(item);\n                    arg.cancelDrop = true;\n\n                    if (item.hasOwnProperty(\"chances\")) {\n                        if(item.chances === 0){\n                            // Reducimos en 1 las posibilidades\n                            chances -= 1;\n                            $(\"#\" + item._items._id).hide(200);\n                        }else{item.chances--;}\n                    } else {\n                        // Reducimos en 1 las posibilidades\n                        chances -= 1;\n                    }\n                }\n            }\n\n            // La actividad termina cuando el número de posibilidades se termina\n            if(chances === 0 || completedItems === self.targets().length) {\n                // Si el número de respuestas correctas es mayor o igual al requerido inicialmente\n                if(self.rightAnswers >= minRightAnswers) {\n                    self.success(true); // Trigger de éxito\n\n                    // Se llama la función de éxito, definida por el desarrollador\n                    if (typeof opt.successCallback !== \"undefined\") opt.successCallback();\n\n                    $rootScope.isNextEnabled = true; // Activamos el siguiente\n                } else {\n                    self.failure(true); // Trigger de fracaso\n                }\n            }\n        };\n\n        /**\n         * Estilos de los elementos.\n         */\n        var _itemIndex = 0;\n        self.getItemStyles = function (item) {\n            var styles = '';\n\n            //  if (opt.hasOwnProperty(\"itemsPerRow\")) {\n            //  \tif (_itemIndex === opt.itemsPerRow) {\n            //  \t\t_itemIndex = 0;\n            //  \t}\n\n            //  \tif (item._index >= opt.itemsPerRow) {\n            // styles += 'top: 33%;';\n            //  \t}\n            //  \tstyles += 'width: ' + (100 / opt.itemsPerRow) + '%;';\n            //  \tstyles += 'left: ' + ((100 / opt.itemsPerRow) * _itemIndex ) + '%;';\n            //  \t_itemIndex++\n            //  } else {\n            styles += 'width: ' + (100 / self.targets().length) + '%;';\n\n\n\n            styles += 'left: ' + ((100 / self.targets().length) * item._index ) + '%;';\n            // }\n\n            styles += 'position: absolute;';\n            return styles;\n        };\n\n        /**\n         * Estilos de cada objetivo.\n         * @returns {string}\n         */\n        self.getTargetStyles = function () {\n            var styles = '';\n\n            if (opt.hasOwnProperty(\"itemsPerRow\")) {\n                styles += 'width: ' + (100 / opt.itemsPerRow) + '%;';\n            } else {\n                styles += 'width: ' + (100 / self.targets().length) + '%;';\n            }\n\n            if(typeof opt.targetStyles !== \"undefined\") styles += opt.targetStyles;\n\n            return styles;\n        };\n\n        /**\n         * Estilos para elementos internos de target e item.\n         */\n        self.getInnerStyles = function (item) {\n            var styles = '';\n\n            // Estilos Opcionales\n            if(border) styles += 'border: 4px solid #000;';\n            if(padding) styles += 'padding: 4px;';\n\n            return styles;\n        }\n\n    };\n\n    /**\n     * Inicializa la instancia del ViewModel creado con pairsActivity.create\n     *\n     * @param {object} instance Intancia del VM de knockout\n     */\n    pairsActivity.run = function (instance) {\n        ko.cleanNode($('#main-container')[0]);\n        ko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n        ko.applyBindings(instance, $('#main-container')[0]);\n    };\n\n    return pairsActivity;\n\n});\n\nlizPairsWithMessage.directive('pairsWithMessage', function  (pairsActivity) {\n    return {\n        restrict: 'E',\n        transclude: true,\n        scope: {\n            options: '=',\n            description: '@',\n            audio:'@',\n            titletop: '@',\n            customClass: '@'\n        },\n        templateUrl: '../views/activities/pairs_with_message.html',\n        link: function postLink(scope, element, attrs) {\n\n            if(typeof scope.customClass !== \"undefined\"){\n                scope.$root.customClass = scope.customClass;\n            }\n\n            // Definimos los contenedores y los elementos transcluídos\n            var itemChildren = element.find('.transcluded item').children(),\n                itemContainer = element.find('.item'),\n                targetChildren = element.find('.transcluded target').children(),\n                targetContainer = element.find('.target')\n            itemTargetChildren = element.find('.transcluded item-target').children(),\n                itemTargetContainer = element.find('.item-target');\n\n            // Se añade cada uno de los hijos a la plantilla en la posición adecuada\n            angular.forEach(itemChildren, function (elem) { itemContainer.append(elem); });\n            angular.forEach(targetChildren, function (elem) { targetContainer.append(elem); });\n            angular.forEach(itemTargetChildren, function (elem) { itemTargetContainer.append(elem); });\n\n            // Se elimina el elemento transcluded del DOM\n            element.find('.transcluded').remove();\n\n            // Añadimos el audio a options\n            scope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n\n            // Corremos la aplicación\n            var vm = pairsActivity.create(scope.options);\n            pairsActivity.run(vm);\n        }\n    };\n});\n","var lizPuzzle1 = angular.module('lizPuzzle1', []);\n\n// Knockout Puzzle1 Factory\nlizPuzzle1.factory('puzzle1Activity', function ($rootScope) {\n\n  var puzzle1Activity = {};\n\n  /**\n   * Crea el ViewModel\n   */\n  puzzle1Activity.create = function (options) {\n    return new puzzle1Activity._ViewModel(options);\n  }\n\n  /**\n   * Genera el ViewModel de las parejas con sus funcionalidades\n   *\n   * Recibe un objeto con las siguientes propiedades\n   *\n   * @param {object}    options            Opciones a utilizar.\n   * @param {Array}    options.data        Información de los elementos. Dentro de cada objeto, se pueden definir las propiedades:\n   *\n   *  target: Permite darle un orden apropiado a los targets. Debe empezar desde 0 y la propiedad options.randomTargets debe estar desactivada\n   *\n   * @param {integer}    options.chances        Número de posibilidades que tiene el usuario de hacer la actividad\n   * @param {integer}    options.minRightAnswers    Número mínimo de respuestas correctas\n   * @param {boolean}    options.randomItems      Define si los elementos deben ser puestos en forma aleatoria\n   * @param {boolean}    options.randomTargets    Define si los objetivos debe ser puestos en forma aleatoria\n   * @param {function}  options.successCallback    Función que se llama cuando se termina la actividad de forma satisfactoria\n   * @param {function}  options.rightAnswerCallback  Función que se llama cuando la respuesta es correcta\n   *\n   */\n  puzzle1Activity._ViewModel = function (options) {\n    var self = this;\n\n    // Inicializa las opciones\n    var items = options.items,\n      minRightAnswers = options.minRightAnswers ? options.minRightAnswers : items.length,\n      chances = options.chances ? options.chances : items.length;\n\n    // Definimos los observableArrays para items\n    self.items = ko.observableArray(items);\n\n    // Añadimos a cada item la propiedad answer: true si no está definida. (por defecto)\n    ko.utils.arrayForEach(self.items(), function (item) {\n      if (typeof item.answer === \"undefined\")\n        item.answer = true;\n    });\n\n    self.canvas = ko.observableArray(); // Donde caen las imágenes\n\n    self.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n\n    self.resources = $rootScope.resources;\n    self.audio = ko.observable(options.audio);\n\n    // Triggers que se activan cuando la respuesta es correcta/incorrecta\n    self.rightAnswer = ko.observable();\n    self.wrongAnswer = ko.observable();\n\n    // Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n    self.failure = ko.observable(false);\n    self.success = ko.observable(false);\n\n    /**\n     * Reproduce el audio de la instrucción.\n     */\n    self.playAudio = function () {\n      $('#audio-instruction')[0].play();\n    };\n\n    // Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\n    self.verifyAnswer = function (arg) {\n      var item = arg.item;\n\n      if (arg.sourceParent === arg.targetParent) return;\n\n      if (item.answer === true) {\n\n        // RESPUESTA CORRECTA\n        self.rightAnswers++;\n        self.rightAnswer(item);\n\n        // Si se definió una función cuando la respuesta es correcta, se corre\n        if (typeof options.rightAnswerCallback !== \"undefined\") options.rightAnswerCallback(item);\n\n      } else {\n\n        // RESPUESTA INCORRECTA\n        self.wrongAnswer(item);\n        arg.cancelDrop = true;\n\n      }\n\n      // Reducimos en 1 las posibilidades\n      chances--;\n\n      // La actividad termina cuando el número de posibilidades se termina\n      if (chances === 0) {\n        // Si el número de respuestas correctas es mayor o igual al requerido inicialmente\n        if (self.rightAnswers >= minRightAnswers) {\n\n          // Trigger de éxito\n          self.success(true);\n\n          $rootScope.isNextEnabled = true;\n\n          // Se llama la función de éxito, definida por el desarrollador\n          if (typeof options.successCallback !== \"undefined\") options.successCallback();\n\n        } else {\n\n          // Trigger de fracaso\n          self.failure(true);\n\n        }\n      }\n    };\n  };\n\n  /**\n   * Inicializa la instancia del ViewModel creado con puzzle1Activity.create\n   *\n   * @param {object} instance Intancia del VM de knockout\n   */\n  puzzle1Activity.run = function (instance) {\n    ko.cleanNode($('#main-container')[0]);\n    ko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n    ko.applyBindings(instance, $('#main-container')[0]);\n  };\n\n  return puzzle1Activity;\n\n});\n\n\nlizPuzzle1.directive('puzzle1', function (puzzle1Activity) {\n  return {\n    restrict: 'E',\n    transclude: true,\n    scope: {\n      options: '=',\n      description: '@',\n      audio: '@'\n    },\n    templateUrl: '../views/activities/puzzle1.html',\n    link: function postLink(scope, element, attrs) {\n      // Añadimos el audio a options\n      scope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n\n      // Corremos la aplicación\n      puzzle1Activity.run(puzzle1Activity.create(scope.options));\n    }\n  };\n});\n\n\n","var lizPuzzle2 = angular.module('lizPuzzle2', []);\n\n// Knockout Puzzle2 Factory\nlizPuzzle2.factory('puzzle2Activity', function ($rootScope) {\n\n\tvar puzzle2Activity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tpuzzle2Activity.create = function (options) {\n\t\treturn new puzzle2Activity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\toptions\t\t\t\t\t\tOpciones a utilizar.\n\t * @param {Array}\t\toptions.data\t\t\t\tInformación de los elementos. Dentro de cada objeto, se pueden definir las propiedades:\n\t *\n\t *\ttarget: Permite darle un orden apropiado a los targets. Debe empezar desde 0 y la propiedad options.randomTargets debe estar desactivada\n\t *\n\t * @param {integer}\t\toptions.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\toptions.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {boolean}\t\toptions.randomItems\t\t\tDefine si los elementos deben ser puestos en forma aleatoria\n\t * @param {boolean}\t\toptions.randomTargets\t\tDefine si los objetivos debe ser puestos en forma aleatoria\n\t * @param {function}\toptions.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\toptions.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\tpuzzle2Activity._ViewModel = function (options) {\n\t\tvar self = this;\n\n\t\t// Inicializa las opciones\n\t\tvar targets = options.targets,\n\t\t\t\tminRightAnswers = options.minRightAnswers ? options.minRightAnswers : targets.length,\n\t\t\t\tchances = options.chances ? options.chances : targets.length;\n\n\t\t// Main Observables\n\t\tself.trap = ko.observableArray([]); // Capa base donde caen los elementos si no aciertan los targets\n\t\tself.trap._id = 'trap';\n\n\t\tself.canvas = options.canvas; // La imagen en sí\n\t\tself.items = ko.observableArray(options.targets); // Sortable de círculos arrastrar\n\t\tself.targets = ko.observableArray(options.targets); // Sortable de targets\n\n\t\t// Constructor para los targets\n\t\tko.utils.arrayForEach(self.targets(), function(target){\n\t\t\t\ttarget._targets = ko.observableArray();\n\t\t\t\ttarget._targets._id = 'target';\n\t\t});\n\n\t\tself.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n\t\tself.maximumElements = 1; // Número máximo de elementos\n\n\t\tself.resources = $rootScope.resources;\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\t\tself.failure = ko.observable(false);\n\t\tself.success = ko.observable(false);\n\n\t\t/**\n\t\t * Previene la posibilidad de lanzar más de un elemento\n\t\t */\n\t\tself.isContainerFull = function (parent) {\n\t\t\treturn parent().length < self.maximumElements;\n\t\t};\n\n\t\t/**\n\t\t * Devuelve los estilos según el elemento\n\t\t */\n\t\tself.getStyles = function (item) {\n\t\t\tvar styles = '';\n\n\t\t\tstyles += 'width: ' + item.w + '%;';\n\t\t\tstyles += 'height: ' + item.h + '%;';\n\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\tstyles += 'left: ' + item.l + '%;';\n\n\t\t\treturn styles;\n\t\t}\n\n\t\t// Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\n\t\tself.verifyAnswer = function (arg) {\n\t\t\tvar item = arg.item;\n\n\t\t\t// Si es el mismo elemento inicial, salimos de la función\n\t\t\tif(arg.sourceParent === arg.targetParent) return;\n\n\t\t\t// Si cae en la trampa, esta malo\n\t\t\tif(arg.targetParent._id === 'trap'){\n\t\t\t\t// RESPUESTA INCORRECTA\n\t\t\t\tself.wrongAnswer(item);\n\t\t\t\targ.cancelDrop = true;\n\t\t\t}\n\n\t\t\t// Si cae en un target, es correcto\n\t\t\tif(arg.targetParent._id === 'target'){\n\t\t\t\t// RESPUESTA CORRECTA\n\t\t\t\tself.rightAnswers++;\n\t\t\t\tself.rightAnswer(item);\n\n\t\t\t\t// Si se definió una función cuando la respuesta es correcta, se corre\n\t\t\t\tif(typeof options.rightAnswerCallback !== \"undefined\" ) options.rightAnswerCallback(item);\n\t\t\t}\n\n\t\t\t// Reducimos en 1 las posibilidades\n\t\t\tchances--;\n\n\t\t\t// La actividad termina cuando el número de posibilidades se termina\n\t\t\tif(chances === 0) {\n\t\t\t\t// Si el número de respuestas correctas es mayor o igual al requerido inicialmente\n\t\t\t\tif(self.rightAnswers >= minRightAnswers) {\n\t\t\t\t\tself.success(true); // Trigger de éxito\n\t\t\t\t\t$rootScope.isNextEnabled = true;\n\t\t\t\t\tif (typeof options.successCallback !== \"undefined\") options.successCallback(); // Se llama la función de éxito, definida por el desarrollador\n\t\t\t\t} else {\n\t\t\t\t\t// Trigger de fracaso\n\t\t\t\t\tself.failure(true);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t};\n\n\t\t/**\n\t\t * Inicializa la instancia del ViewModel creado con puzzle2Activity.create\n\t\t *\n\t\t * @param {object} instance Intancia del VM de knockout\n\t\t */\n\t\tpuzzle2Activity.run = function (instance) {\n\t\t\tko.cleanNode($('#main-container')[0]);\n\t\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t\t};\n\n\t\treturn puzzle2Activity;\n\n});\n\n\nlizPuzzle2.directive('puzzle2', function  (puzzle2Activity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/puzzle2.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\t// Corremos la aplicación\n\t\t\tpuzzle2Activity.run(puzzle2Activity.create(scope.options));\n\t\t}\n\t}; \n});\n\n\n","var lizPuzzle3 = angular.module('lizPuzzle3', []);\n\n// Knockout Puzzle2 Factory\nlizPuzzle3.factory('puzzle3Activity', function ($rootScope, shuffleArrayFactory) {\n\n\tvar puzzle3Activity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tpuzzle3Activity.create = function (options) {\n\t\treturn new puzzle3Activity._ViewModel(options);\n\t}\n\n    /**\n     * Genera el ViewModel de las parejas con sus funcionalidades\n     *\n     * Recibe un objeto con las siguientes propiedades\n     *\n     * @param {object}\t\toptions\t\t\t\t\t\tOpciones a utilizar.\n     * @param {Array}\t\toptions.data\t\t\t\tInformación de los elementos. Dentro de cada objeto, se pueden definir las propiedades:\n     *\n     *\ttarget: Permite darle un orden apropiado a los targets. Debe empezar desde 0 y la propiedad options.randomTargets debe estar desactivada\n     *\n     * @param {integer}\t\toptions.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n     * @param {integer}\t\toptions.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n     * @param {boolean}\t\toptions.randomItems\t\t\tDefine si los elementos deben ser puestos en forma aleatoria\n     * @param {boolean}\t\toptions.randomTargets\t\tDefine si los objetivos debe ser puestos en forma aleatoria\n     * @param {function}\toptions.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n     * @param {function}\toptions.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n     *\n      */\n    puzzle3Activity._ViewModel = function (options) {\n        var self = this,\n\t\t\tcoordinates = [],\n\t\t\trows = options.rows,\n\t\t\tcols = options.cols,\n\t\t\tcells = rows * cols;\n\n\t\t/**\n\t\t * Clase para los sortables\n\t\t */\n\t\tself.Sortable = function (row, col) {\n\t\t\tthis.row = row;\n\t\t\tthis.col = col;\n\t\t\tthis.puzzleBlock = ko.observableArray([ { row: i, col: j } ]);\n\t\t\tthis.puzzleBlock._id = 'sortable';\n\t\t}\n\n\t\t/**\n\t\t * Clase para los sortables\n\t\t */\n\t\tself.Target = function (row, col) {\n\t\t\tthis.row = row;\n\t\t\tthis.col = col;\n\t\t\tthis.puzzleBlock = ko.observableArray([]);\n\n\t\t\t// Necesarios para la comparación en beforeMove\n\t\t\tthis.puzzleBlock.row = row;\n\t\t\tthis.puzzleBlock.col = col;\n\t\t}\n\n        // Inicializa las opciones\n\t\tvar minRightAnswers = options.minRightAnswers ? options.minRightAnswers : cells,\n\t\t\tchances = options.chances ? options.chances : cells;\n\n\t\t// Constructor para las celdas\n\t\tself.items = ko.observableArray();\n\t\tself.targets = ko.observableArray();\n\t\tself.image = options.image;\n\n\t\t// Creamos los objetos para definir su posición en cada fila\n\t\tfor(var i = 0; i < rows; i++){\n\t\t\tfor(var j = 0; j < cols; j++){\n\t\t\t\t// Las propiedades son fila y columna, usadas para definir posteriormente los estilos\n\t\t\t\tself.items.push(new self.Sortable(i, j));\n\t\t\t\tself.targets.push(new self.Target(i, j));\n\n\t\t\t\t// almacenamos las coordenadas en un array que después desorganizaremos\n\t\t\t\tcoordinates.push({ row: i, col: j });\n\t\t\t}\n\t\t}\n\n\t\t// Organizamos aleatoriamente el array\n\t\tcoordinates = shuffleArrayFactory.run(coordinates);\n\n\t\t// Procedemos a cambiar las coordenadas\n\t\tfor(var i = 0; i < self.items().length; i++){\n\t\t\tself.items()[i].row = coordinates[i].row;\n\t\t\tself.items()[i].col = coordinates[i].col;\n\t\t}\n\n\n        self.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n        self.maximumElements = 1; // Número máximo de elementos\n\n        self.resources = $rootScope.resources;\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n        self.rightAnswer = ko.observable();\n        self.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n        self.failure = ko.observable(false);\n        self.success = ko.observable(false);\n\n\t\t/**\n\t\t * Previene la posibilidad de lanzar más de un elemento\n\t\t */\n        self.isContainerFull = function (parent) {\n            return parent().length < self.maximumElements;\n        };\n\n        /**\n         * Devuelve los estilos del sortable\n         */\n        self.getSortableStyles = function (sortable) {\n        \tvar styles = '';\n\n\t\t\t// El tamaño se divide según el número de columnas y filas\n        \tstyles += 'width: ' + (100 / cols) + '%;';\n        \tstyles += 'height: ' + (100 / rows) + '%;';\n\n\t\t\t// Top y Left\n        \tstyles += 'left: ' + (sortable.col * (100 / cols)) + '%;';\n        \tstyles += 'top: ' + (sortable.row * (100 / rows)) + '%;';\n\n        \treturn styles;\n        }\n\n        /**\n         * Devuelve los estilos según el elemento\n         */\n        self.getItemStyles = function (item) {\n        \tvar styles = '';\n\n        \tstyles += 'background: url(' + self.resources + '/' + self.image  + '.png) no-repeat;'; // Recurso\n            //styles += 'background-size: ' + (100 * cols) + '% ' + (100 * rows) + '%;'; // porcentajes según el número de elementos\n        \t\n            //styles += 'background-position: ' + (( item.col + 1 ) * (100 / cols)) + '% ' + (( item.row + 1 ) * (100 / rows)) + '%;';\n        \tstyles += 'background-position: ';\n\n\t\t\tif(item.col === 0){\n\t\t\t\tstyles += '0% ';\n\t\t\t} else {\n\t\t\t\tstyles += (item.col * (100 / (cols - 1) )) + '% ';\n\t\t\t}\n\n\t\t\tif(item.row === 0){\n\t\t\t\tstyles += '0%;';\n\t\t\t} else {\n\t\t\t\tstyles += (item.row * (100 / (rows - 1) )) + '%;';\n\t\t\t}\n        \t\n        \treturn styles;\n        }\n\n\t\t/**\n\t\t * Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\n\t\t */\n\t\tself.verifyAnswer = function (arg) {\n\t\t\tvar item = arg.item,\n\t\t\t\tparent = arg.targetParent;\n\n\t\t\t// Si es el mismo elemento inicial, salimos de la función\n\t\t\tif(arg.sourceParent === parent) return;\n\n\t\t\t// Si se trata de los elementos iniciales, que vuelvan al padre\n\t\t\tif(parent._id === 'sortable'){\n\t\t\t\targ.cancelDrop = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Si es target, comparamos los valores\n\t\t\tif (parent.row === item.row && parent.col === item.col) {\n\t\t\t\t\n\t\t\t\t// RESPUESTA CORRECTA\n\t\t\t\tself.rightAnswers++;\n\t\t\t\tself.rightAnswer(item);\n\n\t\t\t\t// Si se definió una función cuando la respuesta es correcta, se corre\n\t\t\t\tif(typeof options.rightAnswerCallback !== \"undefined\" ) options.rightAnswerCallback(item);\n\t\t\t\t\n\t\t\t} else {\n\n\t\t\t\t// RESPUESTA INCORRECTA\n\t\t\t\tself.wrongAnswer(item);\n\t\t\t\targ.cancelDrop = true;\n\n\t\t\t}\n\n\t\t\t// Reducimos en 1 las posibilidades\n\t\t\tchances--;\n\n\t\t\t// La actividad termina cuando el número de posibilidades se termina\n\t\t\tif(chances === 0 || self.rightAnswers === self.items.length) {\n\t\t\t\t// Si el número de respuestas correctas es mayor o igual al requerido inicialmente\n\t\t\t\tif(self.rightAnswers >= minRightAnswers) {\n\n\t\t\t\t\t// Trigger de éxito\n\t\t\t\t\tself.success(true);\n\n\t\t\t\t\t$rootScope.isNextEnabled = true;\n\n\t\t\t\t\t// Se llama la función de éxito, definida por el desarrollador\n\t\t\t\t\tif (typeof options.successCallback !== \"undefined\") options.successCallback();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Trigger de fracaso\n\t\t\t\t\tself.failure(true);\n\n\t\t\t\t}\n\t\t\t}\n\t\t};\n    };\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con puzzle3Activity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n    puzzle3Activity.run = function (instance) {\n    \tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n    };\n\n\treturn puzzle3Activity;\n    \n});\n\n\nlizPuzzle3.directive('puzzle3', function  (puzzle3Activity) {\n    return {\n        restrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@'\n\t\t},\n        templateUrl: '../views/activities/puzzle3.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\t// Corremos la aplicación\n\t\t\tpuzzle3Activity.run(puzzle3Activity.create(scope.options));\n        }\n    }; \n});\n\n\n","var lizPuzzle4 = angular.module('lizPuzzle4', []);\n\n// Knockout Puzzle2 Factory\nlizPuzzle4.factory('puzzle4Activity', function ($rootScope,$sce) {\n\n\tvar puzzle4Activity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tpuzzle4Activity.create = function (options) {\n\t\treturn new puzzle4Activity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\topt\t\t\t\t\t\tOpciones a utilizar.\n\t * @param {Array}\t\topt.data\t\t\t\tInformación de los elementos. Dentro de cada objeto, se pueden definir las propiedades:\n\t *\n\t *\ttarget: Permite darle un orden apropiado a los targets. Debe empezar desde 0 y la propiedad opt.randomTargets debe estar desactivada\n\t *\n\t * @param {integer}\t\topt.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\topt.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {boolean}\t\topt.randomItems\t\t\tDefine si los elementos deben ser puestos en forma aleatoria\n\t * @param {boolean}\t\topt.randomTargets\t\tDefine si los objetivos debe ser puestos en forma aleatoria\n\t * @param {function}\topt.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\topt.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\tpuzzle4Activity._ViewModel = function (opt) {\n\t\tvar self = this;\n\n\t\t// Inicializa las opciones\n\t\tvar targets = opt.targets,\n\t\t\t\tminRightAnswers = opt.minRightAnswers ? opt.minRightAnswers : targets.length,\n\t\t\t\tchances = opt.chances ? opt.chances : targets.length;\n\n\t\t// audio\n\t\tself.audio = ko.observable(opt.audio);\n\n\t\tself.canvas = opt.canvas ? opt.canvas : false; // La imagen en sí\n\t\tself.extcanvas = opt.extcanvas ? opt.extcanvas : '.png'; // La imagen en sí\n\t\tself.altcanvas = opt.altcanvas ? opt.altcanvas : false;//texto alternativo de la imagen principal \n\t\tself.maintext = opt.maintext ? opt.maintext : false; // el texto q remplaza la imagen \n\t\tself.maintextstyle = opt.maintextstyle ? opt.maintextstyle : opt.maintext ? false : 'display: none;';\n\t\tself.items = ko.observableArray(opt.targets); // Sortable de targets\n\t\tself.targets = ko.observableArray(opt.targets); // Sortable de targets\n\t\tself.noDrag = opt.noDrag ? opt.noDrag : false;\n\t\tself.preserveText = ko.observable(opt.hasOwnProperty('preserveText') ? true : false);\n\t\tself.preserveimg = opt.preserveimg ? true : false;\n\n    // Recorremos los items para definir los valores\n    self.items().forEach(function (item) {\n      item.text = item.hasOwnProperty('text') ? item.text : false;\n      item.img = item.hasOwnProperty('img') ? item.img : false;\n      item.alt = item.hasOwnProperty('alt') ? item.alt : false;\n    });\n\n\t\t// Constructor para los targets\n\t\tko.utils.arrayForEach(self.targets(), function(target){\n\t\t\t\ttarget._id = (Math.random() + 1).toString(36).substring(7); // Genera un código aleatorio como id\n\t\t\t\ttarget.preserveimg = self.preserveimg;\n\t\t\t\t\n\t\t\t\t// Creamos el lugar a donde cae el elemento\n\t\t\t\ttarget._targets = ko.observableArray();\n\t\t\t\ttarget._targets._id = target._id;\n\t\t\t\ttarget._targets._acept= target.acept ? target.acept : false;\n\n\t\t});\n\n\t\tself.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n\t\tself.targetslength= targets.length - self.noDrag; // numero de items \n\t\tself.maximumElements = 1; // Número máximo de elementos\n\n\t\tself.resources = $rootScope.resources;\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\t\tself.failure = ko.observable(false);\n\t\tself.success = ko.observable(false);\n\n\n\t\t/**\n\t\t * Reproduce el audio de la instrucción.\n\t\t */\n\t\tself.playAudio = function () {\n\t\t\t$('#audio-instruction')[0].play();\n\t\t};\n\n\t\t// Para usar el html en angular\n\t\tself.sanitize = function (item) {\n\t\t\treturn $sce.trustAsHtml(item);\n\t\t}\n\n\t\t/**\n\t\t * Previene la posibilidad de lanzar más de un elemento\n\t\t */\n\t\tself.isContainerFull = function (parent) {\n\t\t\treturn parent().length < self.maximumElements;\n\t\t};\n\n\n\t\t/**\n\t\t * Devuelve los estilos según el elemento\n\t\t */\n\t\tself.getItemsContainerStyles = function () {\n\t\t\tvar styles = '';\n\n\t\t\tif(opt.hasOwnProperty('itemsWidth')) styles += \"width: \" + opt.itemsWidth + \";\";\n\n\t\t\treturn styles;\n\t\t}\n\n\n\t\t/**\n\t\t * Devuelve los estilos según el elemento\n\t\t */\n\t\tself.getItemsStyles = function (item) {\n\t\t\tvar styles = '';\n\n\t\t\tif(opt.hasOwnProperty('itemsPerRow')){\n\t\t\t\tstyles += \"width: \" + (98 / opt.itemsPerRow) + \"%;\";\n\t\t\t} \n\n\t\t\tif(opt.hasOwnProperty('itemCustomStyles')) styles += opt.itemCustomStyles;\n     \t\tif(item.hasOwnProperty('style')) styles += item.style;\n\n\t\t\treturn styles;\n\t\t}\n\n\n\t\tself.getDroppedStyles = function () {\n\t\t\tvar styles = '';\n\n\t\t\tif(!self.preserveText()) styles += \"color: transparent;\";\n\t\t\t// agrega solo el tamaño de la fuente de los estilos personalizados (debe estar la propiedad font-size al final de la cadena)\n\t\t\tif(opt.hasOwnProperty('customStyles')){\n\t\t\t\tif(/font-size/.test(opt.customStyles)) styles += 'font-size:'+ opt.customStyles.substring(opt.customStyles.length - 5,opt.customStyles.length);\n\t\t\t};\n\n\t\t\treturn styles;\n\t\t}\n\n\t\t/**\n\t\t * Devuelve los estilos según el elemento\n\t\t */\n\t\tself.getTargetsStyles = function (item) {\n\t\t\tvar styles = '';\n\n\t\t\tif(opt.hasOwnProperty('borderColor')) styles += \"box-shadow: 0px 0px 0px 3px \" + opt.borderColor + \";\";\n\t\t\tstyles += 'width: ' + item.w + '%;';\n\t\t\tstyles += 'height: ' + item.h + '%;';\n\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\tstyles += 'left: ' + item.l + '%;';\n\t\t\tif(item.hasOwnProperty('z')) styles += 'z-index: ' + item.z + ';';\n\n\t\t\t// estilos personalizados\n\t\t\tif(opt.hasOwnProperty('customStyles')) styles += opt.customStyles;\n\n\t\t\treturn styles;\n\t\t}\n\n\n\t\t/**\n\t\t * Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\n\t\t */\n\t\tself.verifyAnswer = function (arg) {\n\t\t\tvar item = arg.item,\n\t\t\t\tparent = arg.targetParent;\n\t\t\t\tconsole.log(parent._acept);\n\t\t\t// Si es el mismo elemento inicial, salimos de la función\n\t\t\tif(arg.sourceParent === arg.targetParent) return;\n\n\t\t\t// Si cae en el mismo elemento, es correcto\n\t\t\tif(parent._id === item._id || (parent._acept!= false && parent._acept.indexOf(item.text) > -1)){\n\t\t\t\t// RESPUESTA CORRECTA\n\t\t\t\tself.rightAnswers++;\n\t\t\t\tself.rightAnswer(item);\n\t\t\t\tconsole.log(arg);\n\n\t\t\t\t// Si se definió una función cuando la respuesta es correcta, se corre\n\t\t\t\tif(typeof opt.rightAnswerCallback !== \"undefined\" ) opt.rightAnswerCallback(item);\n\t\t\t} else {\n\t\t\t\t// RESPUESTA INCORRECTA\n\t\t\t\tself.wrongAnswer(item);\n\t\t\t\targ.cancelDrop = true;\n\t\t\t}\n\n\t\t\t// Reducimos en 1 las posibilidades\n\t\t\tchances--;\n\t\t\t// La actividad termina cuando el número de posibilidades se termina\n\t\t\tif(chances === 0 || (self.rightAnswers === self.targetslength)) {\n\t\t\t\t// Si el número de respuestas correctas es mayor o igual al requerido inicialmente\n\t\t\t\tif(self.rightAnswers >= minRightAnswers) {\n\t\t\t\t\tself.success(true); // Trigger de éxito\n\t\t\t\t\t$rootScope.isNextEnabled = true;\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback(); // Se llama la función de éxito, definida por el desarrollador\n\t\t\t\t} else {\n\t\t\t\t\t// Trigger de fracaso\n\t\t\t\t\tself.failure(true);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con puzzle4Activity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\tpuzzle4Activity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn puzzle4Activity;\n\n});\n\nlizPuzzle4.directive('puzzle4', function  (puzzle4Activity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\ttitletop: '@',\n\t\t\taudio:'@',\n\t\t},\n\t\ttemplateUrl: '../views/activities/puzzle4.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\t// Añadimos el audio a options\n\t\t\tscope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n\n\t\t\t// Corremos la aplicación\n\t\t\tpuzzle4Activity.run(puzzle4Activity.create(scope.options));\n\t\t}\n\t}; \n});\n\n\n","var lizPuzzle5 = angular.module('lizPuzzle5', []);\n\n// Knockout Puzzle2 Factory\nlizPuzzle5.factory('puzzle5Activity', function ($rootScope) {\n\n\tvar puzzle5Activity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tpuzzle5Activity.create = function (options) {\n\t\treturn new puzzle5Activity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\toptions\t\t\t\t\t\tOpciones a utilizar.\n\t * @param {Array}\t\toptions.data\t\t\t\tInformación de los elementos. Dentro de cada objeto, se pueden definir las propiedades:\n\t *\n\t *\ttarget: Permite darle un orden apropiado a los targets. Debe empezar desde 0 y la propiedad options.randomTargets debe estar desactivada\n\t *\n\t * @param {integer}\t\toptions.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\toptions.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {boolean}\t\toptions.randomItems\t\t\tDefine si los elementos deben ser puestos en forma aleatoria\n\t * @param {boolean}\t\toptions.randomTargets\t\tDefine si los objetivos debe ser puestos en forma aleatoria\n\t * @param {function}\toptions.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\toptions.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\tpuzzle5Activity._ViewModel = function (options) {\n\t\tvar self = this,\n\t\t\ttempItem = {}, // variable auxiliar para añadir nuevos elementos al stack\n\t\t\tstackCounter = 0, // Variable para poner Id's a elementos clonados\n\t\t\ttempStack = []; // Array auxiliar que después será ordenado aleatoriamente\n\n\t\t// Inicializa las opciones\n\t\tvar targets = options.targets,\n\t\t\t\tminRightAnswers = options.minRightAnswers ? options.minRightAnswers : targets.length,\n\t\t\t\tchances = options.chances ? options.chances : targets.length;\n\n\t\tself.canvas = options.canvas; // La imagen en sí\n\t\tself.canvasAlt = options.canvasAlt;\n\t\tself.items = ko.observableArray(options.targets); // Sortable de targets\n\t\tself.targets = ko.observableArray(options.targets); // Sortable de targets\n\n\t\tko.utils.arrayForEach(self.items(), function (item) {\n\t\t\titem.chances = options.chancesPerItem - 1;\n\t\t});\n\t\t\n\n\t\t// Constructor para los targets\n\t\tko.utils.arrayForEach(self.targets(), function(target){\n\t\t\t\ttarget._id = (Math.random() + 1).toString(36).substring(7); // Genera un código aleatorio como id\n\n\t\t\t\t// Creamos el lugar a donde cae el elemento\n\t\t\t\ttarget._targets = ko.observableArray();\n\t\t\t\ttarget._targets._id = target._id;\n\t\t});\n\n\t\tself.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n\t\tself.maximumElements = 1; // Número máximo de elementos\n\n\t\tself.resources = $rootScope.resources;\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\t\tself.failure = ko.observable(false);\n\t\tself.success = ko.observable(false);\n\n\t\t/**\n\t\t * Previene la posibilidad de lanzar más de un elemento\n\t\t */\n\t\tself.isContainerFull = function (parent) {\n\t\t\treturn parent().length < self.maximumElements;\n\t\t};\n\n\t\tself.playAudio = function () {\n\t\t\t$('#puzzle5-instruction')[0].play();\n\t\t};\n\n\t\t/**\n\t\t * Devuelve los estilos según el elemento\n\t\t */\n\t\tself.getStyles = function (item) {\n\t\t\tvar styles = '';\n\t\t\tvar itemWidth = (item.hasOwnProperty(\"w\")) ? item.w + '%;' : \"auto;\";\n\t\t\tvar itemHeight = (item.hasOwnProperty(\"h\")) ? item.h + '%;' : \"auto;\";\n\t\t\tstyles += 'width: ' + itemWidth;\n\t\t\tstyles += 'height: ' + itemHeight;\n\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\tstyles += 'left: ' + item.l + '%;';\n\n\t\t\treturn styles;\n\t\t};\n\n\t\tvar counter = 0,\n\t\t\tnumItems = self.items().length;\n\t\t// Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\n\t\tself.verifyAnswer = function (arg) {;\n\t\t\tvar item = arg.item,\n\t\t\t\tparent = arg.targetParent;\n\n\t\t\t// Si es el mismo elemento inicial, salimos de la función\n\t\t\tif(arg.sourceParent === arg.targetParent) return;\n\n\t\t\t// Si cae en el mismo elemento, es correcto\n\t\t\tif(parent._id === item._id){\n\t\t\t\t// RESPUESTA CORRECTA\n\t\t\t\tself.rightAnswers++;\n\t\t\t\tself.rightAnswer(item);\n\t\t\t\tcounter++;\n\t\t\t\t// Si se definió una función cuando la respuesta es correcta, se corre\n\t\t\t\tif(typeof options.rightAnswerCallback !== \"undefined\" ) options.rightAnswerCallback(item);\n\t\t\t} else {\n\t\t\t\t// RESPUESTA INCORRECTA\n\t\t\t\tself.wrongAnswer(item);\n\t\t\t\targ.cancelDrop = true;\n\n\t\t\t\tif(item.chances === 0){\n\t            \tcounter++;\n\t            \t$('#' + item._id).hide(200);\n            \t}else{item.chances--;}\n\t\t\t}\n\n\t\t\t// La actividad termina cuando el número de posibilidades se termina\n\t\t\tif(numItems === counter) {\n\t\t\t\t// Si el número de respuestas correctas es mayor o igual al requerido inicialmente\n\t\t\t\tif(self.rightAnswers >= minRightAnswers) {\n\t\t\t\t\tself.success(true); // Trigger de éxito\n\t\t\t\t\t$rootScope.isNextEnabled = true;\n\t\t\t\t\tif (typeof options.successCallback !== \"undefined\") options.successCallback(); // Se llama la función de éxito, definida por el desarrollador\n\t\t\t\t} else {\n\t\t\t\t\t// Trigger de fracaso\n\t\t\t\t\tself.failure(true);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con puzzle5Activity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\tpuzzle5Activity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn puzzle5Activity;\n\n});\n\n\nlizPuzzle5.directive('puzzle5', function  (puzzle5Activity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\taudio: \"@\",\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/puzzle5.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\t// Corremos la aplicación\n\t\t\tpuzzle5Activity.run(puzzle5Activity.create(scope.options));\n\t\t}\n\t}; \n});\n\n\n","/**\r\n * Actividad donde se arma una palabra en orden y luego se valida usando un botón.\r\n */\r\nvar lizPuzzleWord = angular.module('lizPuzzleWord', ['factories']);\r\n\r\n// Knockout Pairs Factory\r\nlizPuzzleWord.factory('puzzleWordActivity', function ($rootScope, shuffleArrayFactory) {\r\n\r\n  var puzzleWordActivity = {};\r\n\r\n  /**\r\n   * Crea el ViewModel\r\n   */\r\n  puzzleWordActivity.create = function (options) {\r\n    return new puzzleWordActivity._ViewModel(options);\r\n  };\r\n\r\n  /**\r\n   * Modelo de la actividad.\r\n   */\r\n  puzzleWordActivity._ViewModel = function (opt) {\r\n    var self = this,\r\n      chances = opt.hasOwnProperty('chances') ? opt.chances : opt.word.length,\r\n      minRightAnswers = opt.hasOwnProperty('minRightAnswers') ? opt.minRightAnswers : opt.word.length,\r\n      rightAnswers = 0,\r\n      word = opt.word.split(\"\");\r\n\r\n\r\n    self.Letter = function (id) {\r\n      this.sortable = ko.observableArray();\r\n      this.sortable.id = id;\r\n    };\r\n\r\n    self.audio = ko.observable(opt.audio); // audio\r\n    self.resources = $rootScope.resources; // Carpeta de recursos desde angular\r\n    self.maximumElements = 1; // número máximo de elementos\r\n\r\n    self.rightAnswer = ko.observable();\r\n    self.wrongAnswer = ko.observable();\r\n    self.failure = ko.observable(false);\r\n    self.success = ko.observable(false);\r\n\r\n    self.img = opt.img; // imagen adicional\r\n    self.letters = ko.observableArray([]);\r\n    self.finalWord = ko.observableArray([]);\r\n\r\n    // Constructor\r\n    word.forEach(function (l) {\r\n      var id = (Math.random() + 1).toString(36).substring(7);\r\n\r\n      // añadimos cada una de las letras (stack)\r\n      self.letters.push({\r\n        id: id,\r\n        letter: l\r\n      });\r\n\r\n      self.finalWord.push(new self.Letter(l));\r\n    });\r\n\r\n    // Barajamos el array de letras, mientras que las letras sea diferentes a la respuesta\r\n    var shuffledWord = '';\r\n\r\n    do {\r\n      shuffleArrayFactory.run(self.letters());\r\n      shuffledWord = self.letters().map(function (l) {\r\n        return l.letter;\r\n      });\r\n    } while(shuffledWord.join(\"\") === word.join(\"\"));\r\n\r\n    /**\r\n     * Reproduce el audio de la instrucción.\r\n     */\r\n    self.playAudio = function () {\r\n      $('#audio-instruction')[0].play();\r\n    };\r\n\r\n    /**\r\n     * Define si el target esta lleno utilizando self.maximumElements\r\n     */\r\n    self.isContainerFull = function (parent) {\r\n      return parent().length < self.maximumElements;\r\n    };\r\n\r\n    /**\r\n     * Verifica la respuesta después de soltar cada uno de los elementos.\r\n     */\r\n    self.verifyAnswer = function (arg) {\r\n      var parent = arg.targetParent,\r\n        item = arg.item;\r\n\r\n      // Si es el mismo padre\r\n      if(parent === arg.sourceParent) return;\r\n\r\n      // Si el target es igual al contenedor inicial, se devuelve a su posición original\r\n      // Compara el _id para encontrar la pareja idéntica. Si es igual, la respuesta es correcta\r\n      if(parent.id === item.letter){\r\n        // RESPUESTA CORRECTA\r\n        rightAnswers += 1;\r\n        self.rightAnswer(item);\r\n      } else {\r\n        // RESPUESTA INCORRECTA\r\n        self.wrongAnswer(item);\r\n        arg.cancelDrop = true;\r\n      }\r\n\r\n      // Reducimos en 1 las posibilidades\r\n      chances -= 1;\r\n\r\n      // La actividad termina cuando el número de posibilidades se termina\r\n      if(chances === 0 || word.length === rightAnswers) {\r\n        // Si el número de respuestas correctas es mayor o igual al requerido inicialmente\r\n        if(rightAnswers >= minRightAnswers) {\r\n          self.success(true); // Trigger de éxito\r\n          $rootScope.isNextEnabled = true; // Activamos el siguiente\r\n        } else {\r\n          self.failure(true); // Trigger de fracaso\r\n        }\r\n      }\r\n    };\r\n\r\n  };\r\n\r\n  /**\r\n   * Inicializa la instancia del ViewModel creado con puzzleWordActivity.create\r\n   *\r\n   * @param {object} instance Intancia del VM de knockout\r\n   */\r\n  puzzleWordActivity.run = function (instance) {\r\n    ko.cleanNode($('#main-container')[0]);\r\n    ko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\r\n    ko.applyBindings(instance, $('#main-container')[0]);\r\n  };\r\n\r\n  return puzzleWordActivity;\r\n\r\n});\r\n\r\nlizPuzzleWord.directive('puzzleWord', function  (puzzleWordActivity) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      options: '=',\r\n      description: '@',\r\n      audio:'@',\r\n      customClass: '@'\r\n    },\r\n    templateUrl: '../views/activities/puzzle_word.html',\r\n    link: function postLink(scope, element, attrs) {\r\n      // Añadimos el audio a options\r\n      scope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\r\n\r\n      // Corremos la aplicación\r\n      puzzleWordActivity.run(puzzleWordActivity.create(scope.options));\r\n    }\r\n  };\r\n});\r\n","var lizQuestionsImages = angular.module('lizQuestionsImages', ['factories']);\r\n\r\nlizQuestionsImages.directive('questionsImages', function  (shuffleArrayFactory) {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            options: '=',\r\n            audio: '@',\r\n            description: '@'\r\n        },\r\n        templateUrl: '../views/activities/questions_images.html',\r\n        link: function (scope, element, attrs) {\r\n\r\n            var opt = scope.options,\r\n                rightAnswers = 0;\r\n\r\n\r\n            // variables básicas de la acividad de angular\r\n            scope.rightAnswer = false;\r\n            scope.wrongAnswer = false;\r\n            scope.success = false;\r\n            scope.failure = false;\r\n            scope.$root.isNextEnabled = false;\r\n            scope.imgwidth = (opt.imgwidth) ? opt.imgwidth : 60;\r\n            scope.chancesPerItem = (opt.chancesPerItem) ? opt.chancesPerItem : 2;\r\n            scope.minRightAnwers = opt.minRightAnwers;\r\n            scope.randomItems = (scope.options.randomItems) ? true:false;\r\n\r\n            // Imagen principal\r\n            scope.src = opt.src;\r\n            scope.alt = opt.alt;\r\n\r\n            // Preguntas\r\n            scope.questions = opt.questions;\r\n\r\n            // añadimos el número de posibilidades\r\n            scope.questions.forEach(function (q) {\r\n                q.chances = scope.chancesPerItem;\r\n                if (scope.randomItems === true) {\r\n                    shuffleArrayFactory.run(q.answers);\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Verifica la respuesta.\r\n             */\r\n            scope.verify = function (item, select) {\r\n\r\n                console.log(\"item \");\r\n                console.log(item);\r\n\r\n                if ( item.completed) return ;\r\n\r\n                if (select.answer)    {\r\n                    console.log(\"bien\");\r\n\r\n                    scope.rightAnswer = Math.random();\r\n                    item.wrong = false;\r\n                    item.right = true;\r\n                    rightAnswers += 1;\r\n                    item.completed = true;\r\n                }\r\n                else {\r\n                    item.wrong = true;\r\n                    scope.wrongAnswer = Math.random();\r\n                    item.chances -= 1;\r\n                    if(item.chances === 0) {item.completed = true;console.log(item);item.feedback = item.answers.filter(function (a) {\r\n                        return a.answer;\r\n                    })[0].text}\r\n                }\r\n\r\n                /*\r\n\r\n                if(item.selectedAnswer.answer) {\r\n                    scope.rightAnswer = Math.random();\r\n                    item.wrong = false;\r\n                    item.right = true;\r\n                    rightAnswers += 1;\r\n                    item.completed = true;\r\n                } else {\r\n                    item.wrong = true;\r\n                    scope.wrongAnswer = Math.random();\r\n                    item.chances -= 1;\r\n                    if(item.chances === 0) {item.completed = true;console.log(item);item.feedback = item.answers.filter(function (a) {\r\n                        return a.answer;\r\n                    })[0].text}\r\n                }*/\r\n\r\n                // Contamos los elementos terminados\r\n                var completedItems = scope.questions.filter(function (q) {\r\n                    return q.completed;\r\n                }).length;\r\n\r\n                if(completedItems === scope.questions.length) {\r\n                    scope.$root.isNextEnabled = true;\r\n\r\n                    scope.$root.beforeGoNext = function () {\r\n                        // solo pasa la actividad si todas las respuestas son correctas\r\n                        if(rightAnswers === scope.questions.length || rightAnswers >= scope.minRightAnwers) {\r\n                            scope.success = true;\r\n                            return true;\r\n                        } else {\r\n                            scope.failure = true;\r\n                            return true;\r\n                        }\r\n\r\n                    };\r\n\r\n                }\r\n\r\n            };\r\n        }\r\n    };\r\n});\r\n","var lizRadioQuestions = angular.module('lizRadioQuestions', ['factories']);\r\n\r\nlizRadioQuestions.directive('radioQuestions', function  (shuffleArrayFactory,$sce) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      options: '=',\r\n      audio: '@',\r\n      description: '@'\r\n    },\r\n    templateUrl: '../views/activities/radio_questions.html',\r\n    link: function (scope, element, attrs) {\r\n      var opt = scope.options,\r\n        rightAnswers = 0;\r\n\r\n      // variables básicas de la acividad de angular\r\n      scope.rightAnswer = false;\r\n      scope.wrongAnswer = false;\r\n      scope.success = false;\r\n      scope.failure = false;\r\n      scope.$root.isNextEnabled = false;\r\n      scope.imgwidth = (opt.imgwidth) ? opt.imgwidth : 60;\r\n      scope.chancesPerItem = (opt.chancesPerItem) ? opt.chancesPerItem : 2;\r\n      scope.minRightAnwers = opt.minRightAnwers;\r\n      scope.randomItems = (scope.options.randomItems) ? true:false;\r\n\r\n      // Imagen principal\r\n      scope.src = opt.src;\r\n      scope.alt = opt.alt;\r\n      scope.imgTitle = opt.imgTitle ? opt.imgTitle : false;\r\n      scope.maintext = opt.maintext ? opt.maintext : false;\r\n\r\n      // Preguntas\r\n      scope.questions = opt.questions;\r\n\r\n      // añadimos el número de posibilidades\r\n      scope.questions.forEach(function (q) {\r\n        q.chances = scope.chancesPerItem;\r\n        if (scope.randomItems === true) {\r\n          shuffleArrayFactory.run(q.answers);\r\n        }\r\n      });\r\n\r\n      // Para usar el html en angular\r\n      scope.sanitize = function (item) {\r\n        return $sce.trustAsHtml(item);\r\n      }\r\n\r\n      /**\r\n       * Verifica la respuesta.\r\n       */\r\n      scope.verify = function (item) {\r\n        if(item.selectedAnswer.answer) {\r\n          scope.rightAnswer = Math.random();\r\n          item.wrong = false;\r\n          item.right = true;\r\n          rightAnswers += 1;\r\n          item.completed = true;\r\n        } else {\r\n          item.wrong = true;\r\n          scope.wrongAnswer = Math.random();\r\n          item.chances -= 1;\r\n          if(item.chances === 0) {item.completed = true;console.log(item);item.feedback = item.answers.filter(function (a) {\r\n          return a.answer;\r\n          })[0].text}\r\n        }\r\n\r\n        // Contamos los elementos terminados\r\n        var completedItems = scope.questions.filter(function (q) {\r\n          return q.completed;\r\n        }).length;\r\n\r\n        if(completedItems === scope.questions.length) {\r\n          scope.$root.isNextEnabled = true;\r\n\r\n          scope.$root.beforeGoNext = function () {\r\n            // solo pasa la actividad si todas las respuestas son correctas\r\n            if(rightAnswers === scope.questions.length || rightAnswers >= scope.minRightAnwers) {\r\n              scope.success = true;\r\n              return true;\r\n            } else {\r\n              scope.failure = true;\r\n              return true;\r\n            }\r\n           \r\n          };\r\n          \r\n        }\r\n\r\n      };\r\n    }\r\n  };\r\n});\r\n","var lizRadioQuestionsImages = angular.module('lizRadioQuestionsImages', ['factories']);\r\n\r\nlizRadioQuestionsImages.directive('radioQuestionsImages', function  (shuffleArrayFactory) {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            options: '=',\r\n            audio: '@',\r\n            description: '@'\r\n        },\r\n        templateUrl: '../views/activities/radio_questions_images.html',\r\n        link: function (scope, element, attrs) {\r\n\r\n            console.log(\"hola\");\r\n            var opt = scope.options,\r\n                rightAnswers = 0;\r\n\r\n\r\n            // variables básicas de la acividad de angular\r\n            scope.rightAnswer = false;\r\n            scope.wrongAnswer = false;\r\n            scope.success = false;\r\n            scope.failure = false;\r\n            scope.$root.isNextEnabled = false;\r\n            scope.imgwidth = (opt.imgwidth) ? opt.imgwidth : 60;\r\n            scope.chancesPerItem = (opt.chancesPerItem) ? opt.chancesPerItem : 2;\r\n            scope.minRightAnwers = opt.minRightAnwers;\r\n            scope.randomItems = (scope.options.randomItems) ? true:false;\r\n\r\n            // Imagen principal\r\n            scope.src = opt.src;\r\n            scope.alt = opt.alt;\r\n\r\n            // Preguntas\r\n            scope.questions = opt.questions;\r\n\r\n            // añadimos el número de posibilidades\r\n            scope.questions.forEach(function (q) {\r\n                q.chances = scope.chancesPerItem;\r\n                if (scope.randomItems === true) {\r\n                    shuffleArrayFactory.run(q.answers);\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Verifica la respuesta.\r\n             */\r\n            scope.verify = function (item) {\r\n                if(item.selectedAnswer.answer) {\r\n                    scope.rightAnswer = Math.random();\r\n                    item.wrong = false;\r\n                    item.right = true;\r\n                    rightAnswers += 1;\r\n                    item.completed = true;\r\n                } else {\r\n                    item.wrong = true;\r\n                    scope.wrongAnswer = Math.random();\r\n                    item.chances -= 1;\r\n                    if(item.chances === 0) {item.completed = true;console.log(item);item.feedback = item.answers.filter(function (a) {\r\n                        return a.answer;\r\n                    })[0].text}\r\n                }\r\n\r\n                // Contamos los elementos terminados\r\n                var completedItems = scope.questions.filter(function (q) {\r\n                    return q.completed;\r\n                }).length;\r\n\r\n                if(completedItems === scope.questions.length) {\r\n                    scope.$root.isNextEnabled = true;\r\n\r\n                    scope.$root.beforeGoNext = function () {\r\n                        // solo pasa la actividad si todas las respuestas son correctas\r\n                        if(rightAnswers === scope.questions.length || rightAnswers >= scope.minRightAnwers) {\r\n                            scope.success = true;\r\n                            return true;\r\n                        } else {\r\n                            scope.failure = true;\r\n                            return true;\r\n                        }\r\n\r\n                    };\r\n\r\n                }\r\n\r\n            };\r\n        }\r\n    };\r\n});\r\n","var lizReplaceWithInputs = angular.module('lizReplaceWithInputs', []);\r\n\r\nlizReplaceWithInputs.directive('replaceWithInputs', function  ($compile) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      options: '=',\r\n      audio: '@',\r\n      description: '@'\r\n    },\r\n    templateUrl: '../views/activities/replace_with_inputs.html',\r\n    link: function postLink(scope, element, attrs) {\r\n      var opt = scope.options,\r\n        rightAnswers = 0,\r\n        minRightAnswers = opt.minRightAnswers,\r\n        cnt = opt.content, // Content to process\r\n        placeholders = [], // Array con los placeholders\r\n        placeholderCounter = 0; // Contador para crear scope.answers\r\n\r\n      // imagen - audio\r\n      scope.src = opt.src;\r\n      scope.alt = opt.alt;\r\n      scope.addAudio = opt.audio;\r\n\r\n      scope.title = opt.title;\r\n      scope.answers = [];\r\n\r\n      // Busca los placeholders\r\n      cnt.replace(/\\$\\{(\\d+)\\}/g, function (a, b) {\r\n        a = a.substr(2, a.length - 3); // Remueve los elementos que producen la interpolación\r\n        placeholders.push(a);\r\n      });\r\n\r\n      // En base a los placeholders, creamos cada uno de los targets\r\n      placeholders.forEach(function (p) {\r\n        var a = {},\r\n          _data = null,\r\n          answer = opt.answers[p];\r\n\r\n        a.input = ''; // modelo\r\n        a.chances = 2; // oportunidades\r\n\r\n        if(typeof answer === 'object') {\r\n          _data = answer.data\r\n        } else {\r\n          _data = answer;\r\n        }\r\n\r\n        if(_data instanceof Array) {\r\n          a.answer = _data;\r\n        } else {\r\n          a.answer = _data.toString();\r\n        }\r\n\r\n        a.customClass = answer.hasOwnProperty('customClass') ? answer.customClass : '';\r\n        a.placeholder = answer.hasOwnProperty('placeholder') ? answer.placeholder : '';\r\n\r\n        scope.answers.push(a); // Añade a las respuestas\r\n      });\r\n\r\n      // Reemplaza los placeholders con los elementos funcionales (inputs)\r\n      cnt = cnt.replace(/\\$\\{(\\d+)\\}/g, function (a, b) {\r\n        a = \"answers[\" + placeholderCounter + \"]\";\r\n        placeholderCounter += 1;\r\n\r\n        var elem = '<span class=\"input-container\">\\n    <input style=\"_s_\" class=\"input-primary {{ _x_.customClass }}\" type=\"text\" ng-model=\"_x_.input\" ng-disabled=\"_x_.completed\" ng-blur=\"verify(_x_)\" placeholder=\"{{ _x_.placeholder }}\"/>\\n    <span class=\"icon-right\" ng-show=\"_x_.right\"></span>\\n    <span class=\"icon-wrong\" ng-show=\"_x_.wrong\"></span>\\n</span>\\n';\r\n\r\n        elem = elem.replace(/_s_/g, opt.inputStyles);\r\n        return elem.replace(/_x_/g, a);\r\n      });\r\n\r\n      // Compilación\r\n      element.find('.operation-content').append($compile(cnt)(scope));\r\n\r\n      /**\r\n       * Verifica cada campo de texto. Si hay errores, lo limpia instantáneamente.\r\n       * @param item\r\n       */\r\n      scope.verify = function (item) {\r\n        // Si esta completo o si el input no tiene el tamaño de la respuesta, salimos\r\n        if(item.completed || item.input.trim() === \"\") return false;\r\n\r\n        var completedItems = null,\r\n          condition = null;\r\n\r\n        if(item.answer instanceof Array) {\r\n          condition = item.answer.indexOf(item.input.trim()) >= 0;\r\n        } else {\r\n          condition = item.answer === item.input.trim();\r\n        }\r\n\r\n        if(condition) {\r\n          // Respuesta correcta\r\n          delete item.wrong;\r\n\r\n          item.right = true;\r\n          item.completed = true; // Marca el item como terminado\r\n          rightAnswers += 1; // Incrementa las respuestas correctas\r\n        } else {\r\n          // Respuesta incorrecta\r\n          item.wrong = true;\r\n          item.chances -= 1;\r\n\r\n          if(item.chances === 0) {\r\n            item.completed = true;\r\n          } else {\r\n            item.input = ''; // Limpia el input\r\n          }\r\n        }\r\n\r\n        // Contamos los elementos completos\r\n        completedItems = scope.answers.filter(function (a) {\r\n          return a.completed;\r\n        }).length;\r\n\r\n        // Fin de la actividad\r\n        if(completedItems === scope.answers.length) {\r\n          // Hacemos la realimentación, poniendo todas las respuestas correctas\r\n          scope.answers.forEach(function (answer) {\r\n            answer.input = answer.answer;\r\n          });\r\n\r\n          scope.$root.isNextEnabled = true;\r\n        }\r\n\r\n      };\r\n\r\n      // Función especial que se ejecuta al dar click en la flecha de siguiente\r\n      scope.$root.beforeGoNext = function () {\r\n        if(rightAnswers >= minRightAnswers) {\r\n          scope.success = true;\r\n          return true;\r\n        } else {\r\n          scope.failure = true;\r\n          return false;\r\n        }\r\n      };\r\n\r\n    }\r\n  };\r\n});\r\n","var lizReplaceWithInputsMat = angular.module('lizReplaceWithInputsMat', []);\r\n\r\nlizReplaceWithInputsMat.directive('replaceWithInputsMat', function  ($compile) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      options: '=',\r\n      audio: '@',\r\n      description: '@',\r\n    },\r\n    templateUrl: '../views/activities/replace_with_inputs_mat.html',\r\n    link: function postLink(scope, element, attrs) {\r\n      var opt = scope.options,\r\n        rightAnswers = 0,\r\n        minRightAnswers = opt.minRightAnswers,\r\n        cnt = opt.content, // Content to process\r\n        placeholders = [], // Array con los placeholders\r\n        placeholderCounter = 0; // Contador para crear scope.answers\r\n\r\n      // imagen - audio\r\n      scope.src = opt.src;\r\n      scope.alt = opt.alt;\r\n      scope.addAudio = opt.audio;\r\n\r\n      scope.title = opt.title;\r\n      scope.answers = [];\r\n\r\n      // Busca los placeholders\r\n      cnt.replace(/\\$\\{(\\d+)\\}/g, function (a, b) {\r\n        a = a.substr(2, a.length - 3); // Remueve los elementos que producen la interpolación\r\n        placeholders.push(a);\r\n      });\r\n      // En base a los placeholders, creamos cada uno de los targets\r\n      placeholders.forEach(function (p) {\r\n        var a = {},\r\n          _data = null,\r\n          answer = opt.answers[p];\r\n\r\n        a.input = ''; // modelo\r\n        a.chances = 2; // oportunidades\r\n\r\n        if(typeof answer === 'object') {\r\n          _data = answer.data\r\n        } else {\r\n          _data = answer;\r\n        }\r\n\r\n        if(_data instanceof Array) {\r\n          a.answer = _data;\r\n        } else {\r\n          a.answer = _data.toString();\r\n        }\r\n\r\n        a.customClass = answer.hasOwnProperty('customClass') ? answer.customClass : '';\r\n        a.placeholder = answer.hasOwnProperty('placeholder') ? answer.placeholder : '';\r\n\r\n        scope.answers.push(a); // Añade a las respuestas\r\n      });\r\n\r\n      // Reemplaza los placeholders con los elementos funcionales (inputs)\r\n      cnt = cnt.replace(/\\$\\{(\\d+)\\}/g, function (a, b) {\r\n        a = \"answers[\" + placeholderCounter + \"]\";\r\n        placeholderCounter += 1;\r\n\r\n        var elem = '<span class=\"input-container\">\\n    <input style=\"_s_\" class=\"input-primary {{ _x_.customClass }}\" type=\"text\" ng-model=\"_x_.input\" ng-disabled=\"_x_.completed\" ng-blur=\"verify(_x_)\" placeholder=\"{{ _x_.placeholder }}\"/>\\n    <span class=\"icon-right\" ng-show=\"_x_.right\"></span>\\n    <span class=\"icon-wrong\" ng-show=\"_x_.wrong\"></span>\\n</span>\\n';\r\n\r\n        elem = elem.replace(/_s_/g, opt.inputStyles);\r\n        return elem.replace(/_x_/g, a);\r\n      });\r\n       cnt = cnt.replace(/\\$\\{(\\d+)\\}/g, function (a, b) {\r\n        a = \"answers[\" + placeholderCounter + \"]\";\r\n        placeholderCounter += 1;\r\n\r\n        var elem = '<span class=\"input-container\">\\n    <input style=\"_s_\" class=\"input-primary {{ _x_.customClass }}\" type=\"text\" ng-model=\"_x_.input\" ng-disabled=\"_x_.completed\" ng-blur=\"verify(_x_)\" placeholder=\"{{ _x_.placeholder }}\"/>\\n    <span class=\"icon-right\" ng-show=\"_x_.right\"></span>\\n    <span class=\"icon-wrong\" ng-show=\"_x_.wrong\"></span>\\n</span>\\n';\r\n\r\n        elem = elem.replace(/_s_/g, opt.inputStyles);\r\n        return elem.replace(/_x_/g, a);\r\n      });\r\n\r\n       \r\n\r\n\r\n      // Compilación\r\n      element.find('.operation-content').append($compile(cnt)(scope));\r\n       \r\n\r\n      /**\r\n       * Verifica cada campo de texto. Si hay errores, lo limpia instantáneamente.\r\n       * @param item\r\n       */\r\n      scope.verify = function (item) {\r\n        // Si esta completo o si el input no tiene el tamaño de la respuesta, salimos\r\n        if(item.completed || item.input.trim() === \"\") return false;\r\n\r\n        var completedItems = null,\r\n          condition = null;\r\n\r\n        if(item.answer instanceof Array) {\r\n          condition = item.answer.indexOf(item.input.trim()) >= 0;\r\n        } else {\r\n          condition = item.answer === item.input.trim();\r\n        }\r\n\r\n        if(condition) {\r\n          // Respuesta correcta\r\n          delete item.wrong;\r\n\r\n          item.right = true;\r\n          item.completed = true; // Marca el item como terminado\r\n          rightAnswers += 1; // Incrementa las respuestas correctas\r\n        } else {\r\n          // Respuesta incorrecta\r\n          item.wrong = true;\r\n          item.chances -= 1;\r\n\r\n          if(item.chances === 0) {\r\n            item.completed = true;\r\n          } else {\r\n            item.input = ''; // Limpia el input\r\n          }\r\n        }\r\n\r\n        // Contamos los elementos completos\r\n        completedItems = scope.answers.filter(function (a) {\r\n          return a.completed;\r\n        }).length;\r\n\r\n        // Fin de la actividad\r\n        if(completedItems === scope.answers.length) {\r\n          // Hacemos la realimentación, poniendo todas las respuestas correctas\r\n          scope.answers.forEach(function (answer) {\r\n            answer.input = answer.answer;\r\n          });\r\n\r\n          scope.$root.isNextEnabled = true;\r\n        }\r\n\r\n      };\r\n\r\n      // Función especial que se ejecuta al dar click en la flecha de siguiente\r\n      scope.$root.beforeGoNext = function () {\r\n        if(rightAnswers >= minRightAnswers) {\r\n          scope.success = true;\r\n          return true;\r\n        } else {\r\n          scope.failure = true;\r\n          return false;\r\n        }\r\n      };\r\n\r\n    }\r\n  };\r\n});\r\n","/**\n * La actividad permite seleccionar varias opciones hubicadas en una o varias imagenes.\n */\nvar lizSelectAllCorrectImageOption = angular.module('lizSelectAllCorrectImageOption', []);\n\nlizSelectAllCorrectImageOption.directive('selectAllCorrectImageOption', function () {\n\treturn {\n\t\trestrict: 'E',\n        templateUrl: '../views/activities/select_all_correct_image_option.html',\n        scope: {\n            options: '=',\n            instruction: '@',\n            title: '@',\n            description: '@',\n            audio: '@'\n        },\n\t\tlink: function ($scope, iElement, iAttrs) {\n\n\t\t\t$scope.items = $scope.options.items;\n\n\t\t\t$scope.rightAnswers = 0;\n\t\t\t$scope.complete = false; // Cuando termina la actividad\n\t\t\t$scope.block = false;\n\t\t\t$scope.success = false;\n\t\t\t$scope.failure = false;\n\t\t\t$scope.rightAnswer = false;\n  \t\t\t$scope.wrongAnswer = false;\n  \t\t\t$scope.classComplete = $scope.options.classComplete;\n\t\t\t$scope.itemsPerRow = $scope.options.itemsPerRow;\n\t\t\t$scope.minRightAnswers = $scope.options.minRightAnswers;\n\n\n\t\t\tangular.forEach($scope.items, function (value, key) {\n\t\t\t\tvalue.chances = $scope.options.chancesPerItem;\n\t\t\t});\n\n\t\t\t// watch if the activity is finished\n\t\t\t$scope.$watch('complete', function(complete) {\n\t\t\t\tif (complete) {\n\t\t\t\t\tif ($scope.rightAnswers >= $scope.minRightAnswers) {\n\t\t\t\t\t\t// éxito\n\t\t\t\t\t\t$scope.success = true;\n\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\n\t\t\t\t\t\t$scope.$root.isNextEnabled = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// fracaso\n\t\t\t\t\t\t$scope.failure = true;\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t});\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\n\t\t\t$scope.isBottom = $scope.title || $scope.description;\n\n\t\t\tvar counter = 0;\n\n\t\t\t$scope.verify = function (item, opt) {\n\t\t\tif (opt.complete){return}\n\n\t\t\t\tif (true === opt.correct) {\n\t\t\t\t\t$scope.rightAnswers++;\n\t\t\t\t\t$scope.rightAnswer = Math.random();\n\t\t\t\t\topt.complete = true; // marcamos el item como completo\n\t\t\t\t\topt.right = true\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t// obj.wrong ? obj.chances=$scope.options.chancesPerItem-2: obj.chances=$scope.options.chancesPerItem-1;\n\n                \titem.wrong = true;\n                \t$scope.wrongAnswer = Math.random();\n                \topt.complete = true; // marcamos el item como completo\n                \topt.wrong = true\n\n                    \t\n\t\t\t\t}\n\n\t\t\t\tif(item.chances === 1 || $scope.rightAnswers === $scope.minRightAnswers){\n                    \tcounter++;\n                }else{item.chances--;}\n\n\t\t\t\tif(counter === $scope.items.length){\n                    $scope.complete = true;\n                }\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\t$scope.getStyles = function (item) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif($scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / $scope.itemsPerRow) + \"%;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / $scope.items.length) + \"%;\";\n\t\t\t\t}\n\n\t\t\t\tif(item.style){\n\t\t\t\t\tstyles += item.style;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos de cada elemento\n\t\t\t */\n\t\t\t$scope.getOptionStyles = function (opt) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += \"width: \" + opt.w + \"px;\";\n\t\t\t\tstyles += \"height: \" + opt.h + \"px;\";\n\t\t\t\tstyles += \"top: \" + opt.t + \"%;\";\n\t\t\t\tstyles += \"left: \" + opt.l + \"%;\";\n\t\t\t\t\n\t\t\t\treturn styles;\n\t\t\t};\n\t\t}\n\t};\n});","var lizSelectCheckbox = angular.module('lizSelectCheckbox', []);\r\n\r\nlizSelectCheckbox.directive('selectCheckbox', function ($sce) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      options: '=',\r\n      audio: '@',\r\n      title: '@',\r\n      description: '@'\r\n    },\r\n    templateUrl: '../views/activities/select_checkbox.html',\r\n    link: function (scope, element, attrs) {\r\n      var opt = scope.options,\r\n        rightAnswers = 0,\r\n        chances = opt.chances,\r\n        minRightAnswers = opt.minRightAnswers;\r\n\r\n      scope.rightAnswers = false;\r\n      scope.wrongAnswer = false;\r\n      scope.success = false;\r\n      scope.failure = false;\r\n\r\n      scope.showFeedback = false; // Realimentación\r\n\r\n      scope.questions = opt.questions;\r\n      scope.answerwidth = opt.answerwidth;\r\n\r\n      //configuramos las opciones para cada pregunta\r\n      scope.questions.forEach(function (q) {\r\n\r\n        q.maxRightAnswers = q.items.filter(function (i) {\r\n          return i.answer;\r\n        }).length;//numero de respustas buenas\r\n        q.chances = opt.chancesperitem // posibilidades por pregunta\r\n         q.showFeedback = false; // Realimentación\r\n         q.feedback = \"Las respuestas correctas son:\";\r\n         \r\n      });\r\n\r\n\r\n      scope.$root.beforeGoNext = function () {\r\n        if (rightAnswers >= minRightAnswers) {\r\n          scope.success = true;\r\n          return true;\r\n        } else {\r\n          scope.failure = true;\r\n          return true;\r\n        }\r\n      };\r\n\r\n      // Permite el uso de html\r\n      scope.sanitize = function (item) {\r\n        return $sce.trustAsHtml(item);\r\n      };\r\n\r\n      /**\r\n       * Verifica el elemento.\r\n       * @param item\r\n       */\r\n      scope.verify = function (item,q) {\r\n        if(item.answer === item.selectedAnswer) {\r\n          scope.rightAnswer = Math.random();\r\n          rightAnswers += 1;\r\n          q.maxRightAnswers -= 1;\r\n        } else {\r\n          scope.wrongAnswer = Math.random();\r\n        }\r\n\r\n        item.completed = true;\r\n        q.chances -= 1;\r\n\r\n        if (q.chances === 0 || q.maxRightAnswers === 0) {\r\n          q.items.forEach(function (i,index) {\r\n            if(i.answer){\r\n              var coma = index > 1 ? ',' : ''\r\n              q.feedback += coma + \" \" + '<strong>'+i.text+'<strong>'\r\n            }\r\n          }); \r\n          q.disableAll = true;\r\n          q.showFeedback = true;\r\n          chances -= 1;\r\n        }\r\n\r\n        if (chances === 0) {\r\n          scope.$root.isNextEnabled = true;\r\n        }\r\n\r\n      };\r\n\r\n    }\r\n  };\r\n});\r\n","/**\n * La actividad permite seleccionar varias opciones hubicadas en una o varias imagenes.\n */\nvar lizSelectCorrectImageOption = angular.module('lizSelectCorrectImageOption', []);\n\nlizSelectCorrectImageOption.directive('selectCorrectImageOption', function () {\n\treturn {\n\t\trestrict: 'E',\n        templateUrl: '../views/activities/select_correct_image_option.html',\n        scope: {\n            options: '=',\n            instruction: '@',\n            title: '@',\n            description: '@',\n            audio: '@'\n        },\n\t\tlink: function ($scope, iElement, iAttrs) {\n\n\t\t\t$scope.items = $scope.options.items;\n\n\t\t\t$scope.rightAnswers = 0;\n\t\t\t$scope.complete = false; // Cuando termina la actividad\n\t\t\t$scope.block = false;\n\t\t\t$scope.success = false;\n\t\t\t$scope.failure = false;\n\t\t\t$scope.itemsPerRow = $scope.options.itemsPerRow;\n\t\t\t$scope.minRightAnswers = $scope.options.minRightAnswers;\n\n\t\t\tangular.forEach($scope.items, function (value, key) {\n\t\t\t\tvalue.chances = $scope.options.chancesPerItem-1;\n\t\t\t});\n\n\t\t\t// watch if the activity is finished\n\t\t\t$scope.$watch('complete', function(complete) {\n\t\t\t\tif (complete) {\n\t\t\t\t\tif ($scope.rightAnswers >= $scope.minRightAnswers) {\n\t\t\t\t\t\t// éxito\n\t\t\t\t\t\t$scope.success = true;\n\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\n\t\t\t\t\t\t$scope.$root.isNextEnabled = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// fracaso\n\t\t\t\t\t\t$scope.failure = true;\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t});\n\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\n\t\t\t$scope.isBottom = $scope.title || $scope.description;\n\n\t\t\tvar counter = 0;\n\n\t\t\t$scope.verify = function (item, opt) {\n\n\t\t\t\tif (true === opt.correct) {\n\t\t\t\t\t$scope.rightAnswers++;\n\t\t\t\t\titem.wrong = false;\n\t\t\t\t\titem.right = true;\n\t\t\t\t\titem.block = true; // marcamos el item como completo\n\t\t\t\t\tcounter++;\n\t\t\t\t} else {\n\t\t\t\t\t// obj.wrong ? obj.chances=$scope.options.chancesPerItem-2: obj.chances=$scope.options.chancesPerItem-1;\n\n                \titem.wrong = true;\n                \t\n\n                    \tif(item.chances === 0){\n                    \titem.block = true;\n                    \tcounter++;\n                    \t}else{chances--;}\n\t\t\t\t}\n\n\t\t\t\tif(counter === $scope.items.length){\n                    $scope.complete = true;\n                }\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\t$scope.getStyles = function (item) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif($scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / $scope.itemsPerRow) + \"%;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / $scope.items.length) + \"%;\";\n\t\t\t\t}\n\n\t\t\t\tif(item.style){\n\t\t\t\t\tstyles += item.style;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos de cada elemento\n\t\t\t */\n\t\t\t$scope.getOptionStyles = function (opt) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += \"width: \" + opt.w + \"px;\";\n\t\t\t\tstyles += \"height: \" + opt.h + \"px;\";\n\t\t\t\tstyles += \"top: \" + opt.t + \"%;\";\n\t\t\t\tstyles += \"left: \" + opt.l + \"%;\";\n\t\t\t\t\n\t\t\t\treturn styles;\n\t\t\t};\n\t\t}\n\t};\n});","/**\r\n * La actividad permite completar palabras en inputs\r\n */\r\nvar lizSelectOptionsImg = angular.module('lizSelectOptionsImg', ['factories']);\r\n\r\nlizSelectOptionsImg.directive('selectOptionsImg', function(shuffleArrayFactory){\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\ttemplateUrl: '../views/activities/select_options_img.html',\r\n\t\tscope: {\r\n\t\t\toptions: \"=\",\r\n\t\t\ttitle: '@',\r\n\t\t\tcorrectAnswer: '@',\r\n\t\t\tdescription: '@',\r\n\t\t\tinstruction: '@',\r\n\t\t\taudio:'@'\r\n\t\t},\r\n\t\tlink: function(scope, element, attrs){\r\n\t\t\tvar opt = scope.options, // alias\r\n        random = opt.hasOwnProperty('random') ? opt.random : true,\r\n\t\t\t\tminRightAnswers = opt.minRightAnswers,\r\n\t\t\t\trightAnswers = 0; // contador de respuestas correctas\r\n\r\n\t\t\t// Inputs procesados\r\n\t\t\tscope.words = [];\r\n\t\t\tscope.extension = opt.extension ? opt.extension : '.png';\r\n\r\n\t\t\t// Procesamos cada elemento del array entrante\r\n\t\t\tangular.forEach(scope.inputs, function (input) {\r\n\t\t\t\tscope.words.push({ word: input, right: false, wrong: false });\r\n\t\t\t});\r\n\r\n\t\t\tscope.chancesPerItem = opt.chancesPerItem;\r\n\t\t\tscope.hideDescription = opt.hideDescription;\r\n\t\t\tscope.itemsPerRow = opt.itemsPerRow;\r\n\t\t\tscope.items = opt.items;\r\n\t\t\tscope.block = false;\r\n\r\n\t\t\tscope.success = false;\r\n\t\t\tscope.failure = false;\r\n\r\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\r\n\t\t\tscope.isBottom = scope.title || scope.description;\r\n\r\n\r\n\t\t\t// Añadimos las variables necesarias para la funcionalidad\r\n\t\t\tscope.items.forEach(function(item){\r\n\r\n        if(random) shuffleArrayFactory.run(item.options); // Barajamos las opciones\r\n\r\n\t\t\t\titem.options.unshift({\r\n\t\t\t\t\ttext: 'Elige una repuesta',\r\n\t\t\t\t\tfirstElement: true\r\n\t\t\t\t});\r\n\r\n\t\t\t\titem.selected = item.options[0];\r\n\r\n\t\t\t\titem.chances = scope.chancesPerItem; // ponemos el número de oportunidades de cada pregunta\r\n\t\t\t});\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Verifica cada una de las respuestas\r\n\t\t\t */\r\n\t\t\tscope.verify = function (item) {\r\n\t\t\t\t// Si es el primer elemento, ocultamos los íconos de respuesta\r\n\t\t\t\tif(item.selected.firstElement) {\r\n\t\t\t\t\tdelete item.right;\r\n\t\t\t\t\tdelete item.wrong;\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(item.selected.answer) {\r\n\t\t\t\t\t// respuesta correcta\r\n\t\t\t\t\tdelete item.wrong;\r\n\r\n\t\t\t\t\titem.right = true;\r\n\t\t\t\t\titem.disabled = true;\r\n\t\t\t\t\trightAnswers += 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// respuesta incorrecta\r\n\t\t\t\t\titem.wrong = true;\r\n\t\t\t\t\titem.chances -= 1;\r\n\t\t\t\t\tif (item.chances === 0) item.disabled = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Hay que mirar que la actividad haya sido completada\r\n\t\t\t\tvar completedItems = scope.items.filter(function(item){\r\n\t\t\t\t\treturn item.disabled;\r\n\t\t\t\t}).length;\r\n\r\n\t\t\t\tif(completedItems === scope.items.length) {\r\n\t\t\t\t\tif(rightAnswers >= minRightAnswers) {\r\n\t\t\t\t\t\t// éxito\r\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t\t\tscope.success = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tscope.failure = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\r\n\t\t\t */\r\n\t\t\tscope.getStyles = function () {\r\n\t\t\t\tvar styles = \"\";\r\n\r\n\t\t\t\tif(scope.itemsPerRow){\r\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyles += \"width: \" + (100 / (scope.options.data.length + 2)) + \"%;\";\r\n\t\t\t\t\tstyles += \"margin-left: \" + (100 / (scope.options.data.length * 4)) + \"%;\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn styles;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t};\r\n});\r\n\r\n","var lizSelectOptionsPositions = angular.module('lizSelectOptionsPositions', ['factories']);\n\nlizSelectOptionsPositions.directive('selectOptionsPositions', function  (shuffleArrayFactory) {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/select_options_positions.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@'\n\t\t\t\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.canvas = scope.options.canvas; // La imagen principal\n\t\t\tscope.canvasStyle = scope.options.canvasStyle; // La imagen principal\n\t\t\tscope.titlecanvas = scope.options.titlecanvas; // title de La imagen principal\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\tscope.selectindividual = scope.options.selectindividual //separa cada respuesta en un recuadro individual\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\tcompletedItems = 0;\n\n\t\t\t/**\n\t\t\t * Definimos nuestra función beforeGoNext para que muestre el cuadro de felicitaciones\n\t\t\t */\n\t\t\tscope.$root.beforeGoNext = function () {\n\t\t\t\tconsole.log(rightAnswers);\n\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\tscope.success = true;\n\t\t\t\t\treturn true; \n\t\t\t\t}else{scope.failure = true;}\n\n\t\t\t\treturn true; \n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getTargetsStyles = function (item) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += 'width: ' + item.w + 'px;';\n\t\t\t\tstyles += 'height: ' + item.h + 'px;';\n\t\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\t\tstyles += 'left: ' + item.l + '%;';\n\n\t\t\t\t/*// estilos personalizados\n\t\t\t\tif(opt.hasOwnProperty('customStyles')) styles += opt.customStyles;*/\n\n\t\t\t\treturn styles;\n\t\t\t};\n\t\t\t/**\n\t\t\t * Para obtener los estilos las calificaciones de los targets \n\t\t\t */\n\t\t\tscope.getTargetsStyles2 = function (item) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += 'width: ' + item.w + 'px;';\n\t\t\t\tstyles += 'height: ' + item.h + 'px;';\n\t\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\t\tstyles += 'left: ' + item.l + '%;';\n\t\t\t\tstyles += 'background-size: ' + item.w + 'px;' + item.w + 'px;';\n\t\t\t\t/*// estilos personalizados\n\t\t\t\tif(opt.hasOwnProperty('customStyles')) styles += opt.customStyles;*/\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t\n\n      // añadimos algunas opciones\n      scope.items.forEach(function (q) {\n        q.chances = scope.options.chances; // posibilidades por pregunta\n\n        if(scope.options.optionsrandom){\n        shuffleArrayFactory.run(q.options); // baraja\n    \t}\n    \tif(!scope.selectindividual){\n\t        q.options.unshift({\n\t          text: \"Elige una respuesta\",\n\t          default: true\n\t        });\n        }\n\n        q.selectedAnswer = q.options[0]; // elige la primera, en este caso, \"elige una respuesta\"\n\n        q.rightAnswer = q.options.filter(function (answer) {\n          return answer.answer;\n        })[0];\n      });\n\n\t\t\t/**\n\t\t\t * Marca los elementos y verifica el final\n\t\t\t */\n\t\t\tscope.verify = function (item) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t if(item.selectedAnswer.default) return; // Es \"Elige una respuesta\"\n\t\t\t\t\n\t\t\t\tif(item.selectedAnswer.answer) {\n\t\t          /*scope.rightAnswer = Math.random();*/\n\t\t          if(item.freeanswer){\n\t\t\t          \tif(item.chances === scope.options.chances){\n\t\t\t          \t\titem.wrong = false;\n\t\t\t\t\t\t\titem.right = true;\n\t\t\t          \t\trightAnswers += 1;\n\t\t\t          \t\titem.chances -= 1;\n\t\t\t          \t}else{item.chances -= 1;}\n\n\t\t\t\t          \tif(item.chances === 0){\n\t\t\t\t          \t\t item.completed = true;\n\t\t\t\t          \t}\n\t\t\t        }else{\n\t\t\t        \titem.wrong = false;\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t        rightAnswers += 1;\n\t\t\t\t        item.completed = true;\n\t\t     \t\t}\n\n\t       \t\t} else {\n\t\t          scope.wrongAnswer = Math.random();\n\t\t          item.chances -= 1;\n\t\t          item.wrong = true;\n\t\t          \tif(item.chances === 0){\n\t\t\t\t        item.completed = true;\n\t\t\t\t        item.right = false;\n\t\t\t\t\t\titem.wrong = true;\t\t\t\t        \n\t\t\t\t\t}\n\t        \t}\n\n\t\t\t\tvar countCompleted = scope.items.filter(function(item){\n\t\t\t\t\treturn item.completed;\n\t\t\t\t}).length;\n\t\t\n\t\t\t\tif(countCompleted === scope.items.length || rightAnswers === scope.items.length ) {\n\t\t\t\t\tscope.$root.isNextEnabled = true; // Activa la flecha de siguiente\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Marca los elementos y verifica el final\n\t\t\t */\n\t\t\tscope.verify2 = function (a,item) {\n\n\t\t\t\tif(item.completed) return; // Es \"Elige una respuesta\"\n\t\t\t\tconsole.log(item);\t\n\n\t\t\t\tif(a.answer) {\n\t\t          \n\t\t\t        \titem.wrong = false;\n\t\t\t\t\t\titem.right = true;\n\t\t\t\t        rightAnswers += 1;\n\t\t\t\t        item.completed = true;\n\t\t\t\t        a.istrue = true\n\n\t       \t\t} else {\n\t\t          scope.wrongAnswer = Math.random();\n\t\t          item.chances -= 1;\n\t\t          item.wrong = true;\n\t\t          \tif(item.chances === 0){\n\t\t\t\t        item.completed = true;\n\t\t\t\t        item.right = false;\n\t\t\t\t\t\titem.wrong = true;\t\n\t\t\t\t\t\t a.isfalse = true\t\t\t        \n\t\t\t\t\t}\n\t        \t}\n\n\t\t\t\tvar countCompleted = scope.items.filter(function(item){\n\t\t\t\t\treturn item.completed;\n\t\t\t\t}).length;\n\t\t\n\t\t\t\tif(countCompleted === scope.items.length || rightAnswers === scope.items.length ) {\n\t\t\t\t\tscope.$root.isNextEnabled = true; // Activa la flecha de siguiente\n\t\t\t\t}\n\t\t\t};\n\n\t\t}\n\n    }; \n});\n\n\n\n\n","var lizSelectOptionsTable = angular.module('lizSelectOptionsTable', []);\n\nlizSelectOptionsTable.directive('selectOptionsTable', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/activities/select_options_table.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\ttitle:'@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.rowsstyle = scope.options.rowsstyle;\n\t\t\tscope.mainimg = scope.options.mainimg;\n\t\t\tscope.minRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tscope.chancesPerItem = (scope.options.chancesPerItem)\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\t\n\t\t\tscope.questions = [];\n\n\t\t\t// añadimos el número de posibilidades\n\t\t    scope.items.forEach(function (q) {\n\t\t      q.list.forEach(function (i) {\n\t\t\t       if(i.hasOwnProperty('answers')) {\n\n\t\t\t       \t\tscope.questions.push({\n\t\t\t\t\t\t\titem: i.answers,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t  \t});\n\n\t\t\t       \tif(i.default){\n\t\t\t       \t\ti.answers.completed = true\n\t\t\t       \t\ti.answers.right = true\n\t\t\t       \t\trightAnswers += 1\n\t\t\t       \t\ti.answers.forEach(function (a) {\n\n\t\t\t       \t\t\tif (a.answer) {\n\n\t\t\t       \t\t\t\ti.answers.selectedAnswer = a\n\t\t\t       \t\t\t};\n\n\t\t       \t\t\t});\n\t\t\t       \t}\n\t\t\t       \ti.answers.chances = scope.chancesPerItem;\n\t\t\t       }\n\t\t       });\n\t\t    });\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-right: \" + (10 / scope.itemsPerRow) + \"%!important;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\t/**\n\t       * Verifica la respuesta.\n\t       */\n\t\t    scope.verify = function (item,a) {\n\t\t        if(item.selectedAnswer.answer) {\n\t\t          rightAnswers += 1;\n\t\t          item.right = true;\n\t\t          item.wrong = false;\n\t\t          item.completed = true;\n\t\t        } else {\n\t\t          item.chances -= 1;\n\t\t          item.right = false;\n\t\t          item.wrong = true;\n\t\t          if(item.chances === 0){ item.completed = true };\n\t\t        }\n\n\t\t        // Contamos los elementos terminados\n\t\t        var completedItems = scope.questions.filter(function (q) {\n\t\t          return q.item.completed;\n\t\t        }).length;\n\n\t\t        if(completedItems === scope.questions.length) {\n\t\t          // solo pasa la actividad si todas las respuestas son correctas\n\t\t          console.log(rightAnswers,scope.minRightAnswers);\n\t\t          if(rightAnswers === scope.questions.length || rightAnswers >= scope.minRightAnswers) {\n\t\t            scope.$root.isNextEnabled = true;\n\t\t            scope.success = true;\n\t\t          } else {\n\t\t            scope.failure = true;\n\t\t          }\n\t\t        }\n\t\t    };\n\n\n\t\t}\n\n\n    }; \n});\n\n","var lizSelectQuestions = angular.module('lizSelectQuestions', ['factories']);\r\n\r\nlizSelectQuestions.directive('selectQuestions', function  (shuffleArrayFactory,$sce) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      options: '=',\r\n      audio: '@',\r\n      description: '@',\r\n      titletop: '@'\r\n    },\r\n    templateUrl: '../views/activities/select_questions.html',\r\n    link: function (scope, element, attrs) {\r\n      var opt = scope.options,\r\n        rightAnswers = 0,\r\n        minRightAnswers = opt.minRightAnswers,\r\n        random = opt.hasOwnProperty('random') ? opt.random : true; // Verdadero por defecto\r\n\r\n      // variables básicas de la acividad de angular\r\n      scope.rightAnswer = false;\r\n      scope.wrongAnswer = false;\r\n      scope.success = false;\r\n      scope.failure = false;\r\n\r\n      // Imagen principal\r\n      scope.src = opt.hasOwnProperty('src') ? opt.src : false;\r\n      scope.text = opt.hasOwnProperty('text') ? opt.text : false;\r\n      scope.bigImg = opt.hasOwnProperty('bigImg') ? opt.bigImg : false;\r\n      scope.alt = opt.alt;\r\n      scope.title = opt.title;\r\n      scope.stylequestions = opt.stylequestions;\r\n\r\n      // Preguntas\r\n      scope.questions = opt.questions;\r\n\r\n      // añadimos algunas opciones\r\n      scope.questions.forEach(function (q) {\r\n        q.chances = 2; // posibilidades por pregunta\r\n\r\n        if(random) shuffleArrayFactory.run(q.answers); // baraja\r\n\r\n        q.answers.unshift({\r\n          text: \"Elige una respuesta\",\r\n          default: true\r\n        });\r\n\r\n        q.selectedAnswer = q.answers[0]; // elige la primera, en este caso, \"elige una respuesta\"\r\n\r\n        q.rightAnswer = q.answers.filter(function (answer) {\r\n          return answer.answer;\r\n        })[0];\r\n\r\n      });\r\n\r\n      /**\r\n       * Cuando se da click en la flecha de siguiente\r\n       */\r\n      scope.$root.beforeGoNext = function () {\r\n        if(rightAnswers >= minRightAnswers) {\r\n          scope.success = true;\r\n          return true;\r\n        }\r\n\r\n        scope.failure = true;\r\n        return true;\r\n      };\r\n\r\n      // Para usar el html en angular\r\n      scope.sanitize = function (item) {\r\n        return $sce.trustAsHtml(item);\r\n      }\r\n      \r\n      /**\r\n       * abre el zoom \r\n       */\r\n      scope.zoom = function () {\r\n        if(scope.bigImg){\r\n          scope.showBig = true;\r\n        }\r\n      };\r\n\r\n      /**\r\n       * Cierra el zoom \r\n       */\r\n      scope.complete = function () {\r\n        \r\n          scope.showBig = false;\r\n      };\r\n\r\n      /**\r\n       * Verifica la respuesta.\r\n       */\r\n      scope.verify = function (item) {\r\n        if(item.selectedAnswer.default) return; // Es \"Elige una respuesta\"\r\n\r\n        if(item.selectedAnswer.answer) {\r\n          scope.rightAnswer = Math.random();\r\n          rightAnswers += 1;\r\n          item.completed = true;\r\n        } else {\r\n          scope.wrongAnswer = Math.random();\r\n          item.chances -= 1;\r\n          if(item.chances === 0){ item.completed = true;item.feedback = true;console.log(item);}\r\n        }\r\n\r\n        // Contamos los elementos terminados\r\n        var completedItems = scope.questions.filter(function (q) {\r\n          return q.completed;\r\n        }).length;\r\n\r\n        if(completedItems === scope.questions.length) {\r\n          scope.$root.isNextEnabled = true;\r\n          scope.feedback = true; // muestra la realimentación\r\n        }\r\n      };\r\n    }\r\n  };\r\n});\r\n","/**\n * La actividad permite seleccionar varias opciones hubicadas en imagenes\n * de acuerdo a una imagen principal.\n */\nvar lizSelectTableImageMultiple = angular.module('lizSelectTableImageMultiple', []);\n\nlizSelectTableImageMultiple.directive('selectTableImageMultiple', function () {\n\treturn {\n\t\trestrict: 'E',\n        templateUrl: '../views/activities/select_table_image_multiple.html',\n        scope: {\n            options: '=',\n            instruction: '@',\n            title: '@',\n            description: '@',\n            audio: '@'\n        },\n\t\tlink: function ($scope, iElement, iAttrs) {\n\n\t\t\t$scope.items = $scope.options.items;\n\n\t\t\t$scope.mainImageTitle = $scope.options.mainImageTitle;\n\t\t\t$scope.imageTitle2 = $scope.options.imageTitle2;\n\t\t\t$scope.imageTitle3 = $scope.options.imageTitle3;\n\t\t\t$scope.itemsLength = 0;\n\t\t\t$scope.rightAnswers = 0;\n\t\t\t$scope.complete = false; // Cuando termina la actividad\n\t\t\t$scope.block = false;\n\t\t\t$scope.success = false;\n\t\t\t$scope.failure = false;\n\t\t\t$scope.minRightAnswers = $scope.options.minRightAnswers;\n\n\t\t\tangular.forEach($scope.items, function (value, key) {\n\t\t\t\t$scope.itemsLength += value.cols.length;\n\n\t\t\t\tangular.forEach(value.cols, function (v, k) {\n\t\t\t\t\tv.chances = $scope.options.chancesPerItem-1;\n\t\t\t\t})\n\t\t\t})\n\n\t\t\t// watch if the activity is finished\n\t\t\t$scope.$watch('complete', function(complete) {\n\t\t\t\tif (complete) {\n\t\t\t\t\tif ($scope.rightAnswers >= $scope.minRightAnswers) {\n\t\t\t\t\t\t// éxito\n\t\t\t\t\t\t$scope.success = true;\n\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\n\t\t\t\t\t\t$scope.$root.isNextEnabled = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// fracaso\n\t\t\t\t\t\t$scope.failure = true;\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t});\n\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\n\t\t\t$scope.isBottom = $scope.title || $scope.description;\n\n\t\t\tvar counter = 0,\n\t\t\t\tchances = $scope.options.chancesPerItem-1;\n\n\t\t\t$scope.verify = function (obj, item) {\n\n\t\t\t\tif (true === item.correct) {\n\t\t\t\t\t$scope.rightAnswers++;\n\t\t\t\t\tobj.wrong = false;\n\t\t\t\t\tobj.right = true;\n\t\t\t\t\tobj.disabled = true; // marcamos el item como completo\n\t\t\t\t\tcounter++;\n\t\t\t\t} else {\n\t\t\t\t\t// obj.wrong ? obj.chances=$scope.options.chancesPerItem-2: obj.chances=$scope.options.chancesPerItem-1;\n\n                \tobj.wrong = true;\n                \t\n\n                    \tif(obj.chances === 0){\n                    \tobj.disabled = true;\n                    \tcounter++;\n                    \t}else{chances--;}\n\t\t\t\t}\n\n\t\t\t\tconsole.log(obj);\n\n\t\t\t\tif(counter === $scope.itemsLength){\n                    $scope.complete = true;\n                }\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos de cada elemento\n\t\t\t */\n\t\t\t$scope.getStyles = function (opt) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += \"-webkit-border-radius: \" + opt.bdrs + \";\"\n\t\t\t\tstyles += \"-moz-border-radius: \" + opt.bdrs + \";\"\n\t\t\t\tstyles += \"border-radius: \" + opt.bdrs + \";\"\n\t\t\t\tstyles += \"width: \" + opt.w + \"px;\";\n\t\t\t\tstyles += \"height: \" + opt.h + \"px;\";\n\t\t\t\tstyles += \"top: \" + opt.t + \"%;\";\n\t\t\t\tstyles += \"left: \" + opt.l + \"%;\";\n\t\t\t\t\n\t\t\t\treturn styles;\n\t\t\t};\n\t\t}\n\t};\n});","var lizSelectWords = angular.module('lizSelectWords', ['factories']);\n\nlizSelectWords.directive('selectWords', function  (shuffleArrayFactory) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio: '@',\n\t\t\timg: '@',\n\t\t\talt: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/select_words.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\ttext = opt.text.split(\" \"), // texto inicial\n\t\t\t\tchangeWords = opt.words.slice(0), // Palabras a reemplazar\n\t\t\t\trightAnswers = 0, // Contador de respuestas correctas\n\t\t\t\tminRightAnswers = opt.minRightAnswers, // Número mínimo de respuestas correctas\n\t\t\t\tchances = opt.chances; // posibilidades de realizar la actividad\n\n\t\t\tscope.words = []; // Palabras que se usarán al final\n\t\t\tscope.wordsOptions = []; // Opciones a usar en cada uno de los desplegables\n\n\t\t\t// variables de calificación\n\t\t\tscope.rightAnswer = false;\n\t\t\tscope.wrongAnswer = false;\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\n\t\t\t// ============================================================================\n\t\t\t// Constructor de wordsOptions\n\t\t\t// ============================================================================\n\t\t\t// Añadimos la opción por defecto\n\t\t\tscope.wordsOptions.push({\n\t\t\t\tid: 0,\n\t\t\t\ttext: \"Elige una respuesta\"\n\t\t\t});\n\n\t\t\t// Cargamos las demás opciones\n\t\t\tfor(var i=0; i < changeWords.length; i++){\n\t\t\t\tscope.wordsOptions.push({\n\t\t\t\t\tid: i,\n\t\t\t\t\ttext: changeWords[i]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// ============================================================================\n\t\t\t// Constructor de scope.words\n\t\t\t// ============================================================================\n\t\t\tfor(var i=0; i < text.length; i++){\n\t\t\t\t// Encuentra la expresión ${x}, donde x es el índice dentro del array de palabras\n\t\t\t\tif( text[i].match(/(^\\$\\{)\\d(\\}$)/) ){\n\t\t\t\t\t// Input\n\t\t\t\t\t// Recuperamos el índice del patrón\n\t\t\t\t\tvar index = text[i].replace(/\\D/g,'');\n\n\t\t\t\t\tscope.words.push({\n\t\t\t\t\t\tisInput: true,\n\t\t\t\t\t\tinput: scope.wordsOptions[0],  // Se pone como valor inicial la respuesta\n\t\t\t\t\t\tword: changeWords[index] // Palabra a comparar\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Palabra normal\n\t\t\t\t\tscope.words.push({\n\t\t\t\t\t\tisInput: false,\n\t\t\t\t\t\tword: text[i] + \" \"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ============================================================================\n\t\t\t// Función de verificación\n\t\t\t// ============================================================================\n\t\t\tscope.verify = function (item) {\n\n\t\t\t\tif(item.word === item.input.text){\n\t\t\t\t\t// Respuesta Correcta\n\t\t\t\t\tscope.rightAnswer = Math.random(); // Disparador de respuesta\n\t\t\t\t\titem.completed = true;\n\t\t\t\t\trightAnswers++;\n\t\t\t\t} else {\n\t\t\t\t\t// Respuesta Incorrecta\n\t\t\t\t\tscope.wrongAnswer = Math.random(); // Disparador de respuesta\n\t\t\t\t}\n\n\t\t\t\tchances--;\n\n\t\t\t\t// Si se acaban las oportunidades o \n\t\t\t\tif(chances === 0 || changeWords.length === rightAnswers){\n\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t// Éxito\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Fracaso\n\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\t\t\t\n\t\t}\n\t}; \n});\n","var lizSequences = angular.module('lizSequences', []);\n\n// Knockout Pairs Factory\nlizSequences.factory('sequencesActivity', function ($rootScope, shuffleArrayFactory) {\n\n\tvar sequencesActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tsequencesActivity.create = function (options) {\n\t\treturn new sequencesActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\toptions\t\t\t\t\t\tOpciones a utilizar.\n\t *\n\t *\n\t * @param {integer}\t\toptions.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\toptions.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {function}\toptions.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\toptions.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\tsequencesActivity._ViewModel = function (options) {\n\t\tvar self = this;\n\n\t\t// Clase para sortables en la secuencia\n\t\tself.sequenceSortable = function (id) {\n\t\t\tthis._sortable = ko.observableArray([]);\n\t\t\tthis._sortable._id = id;\n\t\t};\n\n\t\t// Inicializa las opciones\n\t\tvar chances = options.hasOwnProperty('chances') ? options.chances : options.spaces,\n\t\t minRightAnswers = options.hasOwnProperty('minRightAnswers') ? options.minRightAnswers : options.spaces,\n\t\t sequence = options.sequence,\n\t\t tempId = 0, // id temporal que se añade a la secuencia\n\t\t tempSequenceSortable = {}, // Variable Auxiliar\n\t\t spaces = options.spaces; // Espacios en blanco\n\n\n\t\t// Antes que nada, debemos generar los id de los items\n\t\toptions.items.forEach(function(item, index){\n\t\t\titem._id = index;\n\t\t});\n\n\t\tself.draggables = ko.observableArray( shuffleArrayFactory.run(options.items.slice(0)) ); // Elementos usados para el arrastre\n\t\tself.sequence = ko.observableArray([]);\n\n\t\t// Configuramos la secuencia\n\t\tfor(var i=0; i < self.draggables().length + spaces; i++){\n\t\t\t// Alargamos la secuencia, usando tempId\n\t\t\ttempId = sequence[i - (sequence.length * Math.floor(i / sequence.length))];\n\n\t\t\t// Creamos el objeto\n\t\t\ttempSequenceSortable = new self.sequenceSortable(tempId);\n\n\t\t\t// Añadimos la muestra\n\t\t\tif(sequence.length > i){\n\t\t\t\ttempSequenceSortable._sortable.push( options.items[i] );\n\t\t\t}\n\t\t\t\n\t\t\tself.sequence.push(tempSequenceSortable); // añadimos a la secuencia\n\t\t}\n\n\t\t// Carpeta de recursos desde angular\n\t\tself.resources = $rootScope.resources;\n\n\t\tself.maximumElements = 1; // IMPORTANTE: Requerido para que los sortables no acepten más de un elemento\n\t\tself.rightAnswers = 0; // Inicializamos el número de respuestas buenas a 0\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\t\tself.failure = ko.observable(false);\n\t\tself.success = ko.observable(false);\n\n\n\t\t/**\n\t\t * Define si el target esta lleno utilizando self.maximumElements\n\t\t */\n\t\tself.isContainerFull = function (parent) {\n\t\t\treturn parent().length < self.maximumElements;\n\t\t};\n\n\t\t/**\n\t\t * Estilos de los items de secuencia\n\t\t */\n\t\tself.getItemStyles = function () {\n\t\t\treturn \"width: \" + (100 / self.sequence().length) + \"%;\";\n\t\t};\n\n\t\t/**\n\t\t * Función que se ejecuta cuando se suelta el elemento y hace toda la funcionalidad\n\t\t */\n\t\tself.verifyAnswer = function (arg) {\n\n\t\t\tvar parent = arg.targetParent,\n\t\t\t\titem = arg.item;\n\n\t\t\tif(parent._id === item._id){\n\t\t\t\t// RESPUESTA CORRECTA\n\t\t\t\tself.rightAnswers++;\n\t\t\t\tself.rightAnswer(item);\n\n\t\t\t\tspaces--; // Reducimos los espacios para poder definir el fin de la actividad\n\n\t\t\t\t// Si se definió una función cuando la respuesta es correcta, se corre\n\t\t\t\tif(typeof options.rightAnswerCallback !== \"undefined\" ) options.rightAnswerCallback(item);\n\n\t\t\t} else {\n\t\t\t\t// RESPUESTA INCORRECTA\n\t\t\t\tself.wrongAnswer(item);\n\t\t\t\targ.cancelDrop = true;\n\t\t\t}\n\n\t\t\t// Reducimos en 1 las posibilidades\n\t\t\tchances--;\n\n\t\t\t// La actividad termina cuando el número de posibilidades se termina\n\t\t\tif(chances === 0 || spaces === 0) {\n\n\t\t\t\t// Si el número de respuestas correctas es mayor o igual al requerido inicialmente\n\t\t\t\tif(self.rightAnswers >= minRightAnswers) {\n\t\t\t\t\tself.success(true); // Trigger de éxito\n\t\t\t\t\t$rootScope.isNextEnabled = true; // Activamos el siguiente\n\n\t\t\t\t\t// Se llama la función de éxito, definida por el desarrollador\n\t\t\t\t\tif (typeof options.successCallback !== \"undefined\") options.successCallback();\n\t\t\t\t} else {\n\t\t\t\t\tself.failure(true); // Trigger de fracaso\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con sequencesActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\tsequencesActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn sequencesActivity;\n\n});\n\n\nlizSequences.directive('sequences', function  (sequencesActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/sequences.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\t// Corremos la aplicación\n\t\t\tvar vm = sequencesActivity.create(scope.options);\n\t\t\tsequencesActivity.run(vm);\n\t\t}\n\t}; \n});\n","var lizSideNumbers = angular.module('lizSideNumbers', []);\n\nlizSideNumbers.directive('sideNumbers', function  () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/side_numbers.html',\n\t\tlink: function (scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\ttotalNumbers = opt.numbers.length,\n\t\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\t\tchances = totalNumbers * 2, // el doble, ya que es izquierda y derecha\n\t\t\t\tminRightAnswers = opt.minRightAnswers;\n\n\t\t\tscope.numbers = []; // Listado de números\n\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.example = opt.example;\n\n\t\t\t// Constructor de numbers\n\t\t\topt.numbers.forEach(function(num){\n\t\t\t\t// Anadimos un objeto con prev y next. Cada uno tiene una variable para el modelo y el número a comparar\n\t\t\t\tif (opt.allowAll) {\n\t\t\t\t\tvar prev = '';\n\t\t\t\t\tvar next = '';\n\n\t\t\t\t\tfor(i=0; i <= num.length-1; i = i+1){\n\t\t\t\t\tif(i === num.length-1){prev = prev + (parseInt(num.charAt(i)) - 1).toString()}else{prev = prev + num.charAt(i)};\n\t\t\t\t\tif(i === num.length-1){next = next + (parseInt(num.charAt(i)) + 1).toString()}else{next = next + num.charAt(i)};  \n\t\t\t\t};\n\n\t\t\t\t\tscope.numbers.push({\n\t\t\t\t\t\tprev: {\n\t\t\t\t\t\t\tinput: '',\n\t\t\t\t\t\t\tnumber: (prev).toString()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcentral: num,\n\t\t\t\t\t\tnext: {\n\t\t\t\t\t\t\tinput: '',\n\t\t\t\t\t\t\tnumber: (next).toString()\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}else{\n\t\t\t\t\tscope.numbers.push({\n\t\t\t\t\t\tprev: {\n\t\t\t\t\t\t\tinput: '',\n\t\t\t\t\t\t\tnumber: (parseInt(num) - 1).toString()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcentral: num,\n\t\t\t\t\t\tnext: {\n\t\t\t\t\t\t\tinput: '',\n\t\t\t\t\t\t\tnumber: (parseInt(num) + 1).toString()\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t//si se nesecita q el primer item sea el ejemplo \n\t\t\t\tvar index = 0\n\t\t\t\tif(index === 0 && scope.example === true){\n\n\t\t\t\t\trightAnswers++;\n\t\t\t\t\tscope.numbers[index].prev.right = true;\n\t\t\t\t\tscope.numbers[index].next.right = true;\n\t\t\t\t\tscope.numbers[index].prev.input = scope.numbers[index].prev.number;\n\t\t\t\t\tscope.numbers[index].next.input = scope.numbers[index].next.number;\n\t\t\t\t\tscope.numbers[index].prev.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\tscope.numbers[index].next.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\tchances -= 1;\n\t\t\t\t\trightAnswers++;\n\t\t\t\t\tindex ++;\n\n\n\t\t\t\t};\n\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Verifica si el input cumple con las condiciones del número \n\t\t\t */\n\t\t\tscope.verify = function (item) {\n\t\t\t\tif(item.input === '') return;\n\n\t\t\t\t// Si no es un número, borramos el último caractér\n\t\t\t\tif(!opt.allowAll) {\n\t\t\t\t\tif(!item.input.match(/^\\d+$/)){\n\t\t\t\t\t\titem.input = item.input.slice(0, -1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\t\t\n\t\t\t\t}\n\n\t\t\t\t// Si se ha llenado el input con los dígitos necesarios\n\t\t\t\tif(item.input.length === item.number.length){\n\n\t\t\t\t\t// Verificamos la respuesta. Añadimos una propiedad right o wrong para definir si el item es correcto o no\n\t\t\t\t\tif(item.input === item.number){\n\t\t\t\t\t\trightAnswers++;\n\t\t\t\t\t\titem.right = true; \n\t\t\t\t\t} else {\n\t\t\t\t\t\titem.wrong = true;\n\t\t\t\t\t}\n\n\t\t\t\t\titem.completed = true; // marcamos el item como completo, para desactivar el input\n\t\t\t\t\tchances -= 1;\n\n\t\t\t\t\t// fin de la actividad\n\t\t\t\t\tif(chances === 0){\n\t\t\t\t\t\tif(rightAnswers >= minRightAnswers){\n\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t\t} // if\n\t\t\t}; // verify()\n\n\t\t}\n\t}; \n});\n","var lizSoundGroup = angular.module('lizSoundGroup', []);\n\nlizSoundGroup.factory('soundGroupActivity', function ($rootScope) {\n\n\tvar soundGroupActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tsoundGroupActivity.create = function (options) {\n\t\treturn new soundGroupActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\toptions\t\t\t\t\t\tOpciones a utilizar.\n\t *\n\t * @param {integer}\t\toptions.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\toptions.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {function}\toptions.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\toptions.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\tsoundGroupActivity._ViewModel = function (options) {\n\t\tvar self = this;\n\n\t// Sonido de grupo\n\tself.sound = ko.observable(options.sound);\n\n\t// Variables para sortables\n\tself.items = ko.observableArray(options.items);\n\n\tko.utils.arrayForEach(self.items(), function (item) {\n\t\tif(! item.hasOwnProperty('answer')) item.answer = true;\n\t\tif(! item.hasOwnProperty('startsInGroup')) item.startsInGroup = false;\n\t});\n\n\tself.group = ko.observableArray(self.items.remove(function(item){\n\t\treturn item.startsInGroup;\n\t}));\n\n\t// Ruta a la carpeta de imágenes\n\tself.resources = $rootScope.resources;\n\n\t// Disparador de preguntas correctas/incorrectas\n\tself.rightAnswer = ko.observable();\n\tself.wrongAnswer = ko.observable();\n\n\tself.success = ko.observable(false);\n\tself.failure = ko.observable(false);\n\n\tself.rightAnswers = 0;\n\n\tself.chances = options.chances ? options.chances : options.items.length;\n\n\t/**\n\t * reproducir sonido\n\t */\n\tself.playSound = function () {\n\t\t$('#audio-group')[0].play();\n\t};\n\n\n\t/**\n\t * Obtiene los estilos de cada elemento\n\t */\n\tself.getStyles = function (item) {\n\t\tvar styles = '';\n\n\t\tif(! item.answer) return;\n\n\t\tstyles += 'width: ' + item.w + '%;';\n\t\tstyles += 'height: ' + item.h + '%;';\n\t\tstyles += 'top: ' + item.t + '%;';\n\t\tstyles += 'left: ' + item.l + '%;';\n\n\t\treturn styles;\n\t}\n\n/**\n *\tFunción que se ejecuta al soltar el objeto dentro del contenedor\n */\nself.verifyAnswer = function (arg) {\n\n\t// No hacer nada y salir de la función, si el elemento se soltó en el mismo grupo inicial\n\tif(arg.sourceParent() == arg.targetParent()) return;\n\n\t// Calculamos si la respuesta es correcta o no usando la propiedad 'answer'\n\tif (arg.item.answer) {\n\t\t// Respuesta correcta\n\t\tself.rightAnswer(arg.item);\n\t\tself.rightAnswers++;\n\n\t\t// Llama a la función de respuesta buena\n\t\tif (typeof options.rightAnswerCallback !== \"undefined\") options.rightAnswerCallback();\n\n\t} else {\n\t\t// Respuesta Incorrecta\n\t\tself.wrongAnswer(arg.item);\n\t\targ.cancelDrop = true; // Devuelve el elemento a su posición origina\n\t}\n\n\t// Reducimos las posibilidades\n\tself.chances--;\n\n\t// Fin de la actividad\n\tif (self.chances === 0) {\n\t\tif(self.rightAnswers >= options.minRightAnswers) {\n\t\t\t// éxito\n\t\t\tself.success(true);\n\n\t\t\t// Llama a la función de éxito\n\t\t\tif (typeof options.successCallback !== \"undefined\") options.successCallback();\n\n\t\t\t// Activamos la siguiente ruta\n\t\t\t$rootScope.isNextEnabled = true;\n\t\t} else {\n\t\t\t// Fracaso\n\t\t\tself.failure(true);\n\t\t}\n\t}\n};\n\n\t\t};\n\n\t\t/**\n\t\t * Inicializa la instancia del ViewModel creado con soundGroupActivity.create\n\t\t *\n\t\t * @param {object} instance Intancia del VM de knockout\n\t\t */\n\t\tsoundGroupActivity.run = function (instance) {\n\t\t\tko.cleanNode($('#main-container')[0]);\n\t\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t\t};\n\n\t\treturn soundGroupActivity;\n});\n\nlizSoundGroup.directive('soundGroup', function  (soundGroupActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/sound_group.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\tsoundGroupActivity.run(soundGroupActivity.create(scope.options));\n\t\t}\n\t}; \n});\n\n","var lizSoundGroups = angular.module('lizSoundGroups', []);\n\nlizSoundGroups.factory('soundGroupsActivity', function ($rootScope) {\n\n\tvar soundGroupsActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\tsoundGroupsActivity.create = function (options) {\n\t\treturn new soundGroupsActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\toptions\t\t\t\t\t\tOpciones a utilizar.\n\t *\n\t * @param {integer}\t\toptions.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\toptions.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {function}\toptions.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\toptions.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t *\n\t */\n\tsoundGroupsActivity._ViewModel = function (options) {\n\t\tvar self = this;\n\n\t// Sonido de grupo\n\tself.sound = ko.observable(options.sound);\n\n\t// Variables para sortables\n\tself.items = ko.observableArray(options.items);\n\n\tko.utils.arrayForEach(self.items(), function (item) {\n\t\tif(! item.hasOwnProperty('answer')) item.answer = true;\n\t\tif(! item.hasOwnProperty('startsInGroup')) item.startsInGroup = false;\n\t});\n\n\tself.group = ko.observableArray(self.items.remove(function(item){\n\t\treturn item.startsInGroup;\n\t}));\n\n\t// Ruta a la carpeta de imágenes\n\tself.resources = $rootScope.resources;\n\n\t// Disparador de preguntas correctas/incorrectas\n\tself.rightAnswer = ko.observable();\n\tself.wrongAnswer = ko.observable();\n\n\tself.success = ko.observable(false);\n\tself.failure = ko.observable(false);\n\n\tself.rightAnswers = 0;\n\n\tself.chances = options.chances ? options.chances : options.items.length;\n\n\t/**\n\t * reproducir sonido\n\t */\n\tself.playSound = function () {\n\t\t$('#audio-group')[0].play();\n\t};\n\n\n\t/**\n\t * Obtiene los estilos de cada elemento\n\t */\n\tself.getStyles = function (item) {\n\t\tvar styles = '';\n\n\t\tif(! item.answer) return;\n\n\t\tstyles += 'width: ' + item.w + '%;';\n\t\tstyles += 'height: ' + item.h + '%;';\n\t\tstyles += 'top: ' + item.t + '%;';\n\t\tstyles += 'left: ' + item.l + '%;';\n\n\t\treturn styles;\n\t}\n\n/**\n *\tFunción que se ejecuta al soltar el objeto dentro del contenedor\n */\nself.verifyAnswer = function (arg) {\n\n\t// No hacer nada y salir de la función, si el elemento se soltó en el mismo grupo inicial\n\tif(arg.sourceParent() == arg.targetParent()) return;\n\n\t// Calculamos si la respuesta es correcta o no usando la propiedad 'answer'\n\tif (arg.item.answer) {\n\t\t// Respuesta correcta\n\t\tself.rightAnswer(arg.item);\n\t\tself.rightAnswers++;\n\n\t\t// Llama a la función de respuesta buena\n\t\tif (typeof options.rightAnswerCallback !== \"undefined\") options.rightAnswerCallback();\n\n\t} else {\n\t\t// Respuesta Incorrecta\n\t\tself.wrongAnswer(arg.item);\n\t\targ.cancelDrop = true; // Devuelve el elemento a su posición origina\n\t}\n\n\t// Reducimos las posibilidades\n\tself.chances--;\n\n\t// Fin de la actividad\n\tif (self.chances === 0) {\n\t\tif(self.rightAnswers >= options.minRightAnswers) {\n\t\t\t// éxito\n\t\t\tself.success(true);\n\n\t\t\t// Llama a la función de éxito\n\t\t\tif (typeof options.successCallback !== \"undefined\") options.successCallback();\n\n\t\t\t// Activamos la siguiente ruta\n\t\t\t$rootScope.isNextEnabled = true;\n\t\t} else {\n\t\t\t// Fracaso\n\t\t\tself.failure(true);\n\t\t}\n\t}\n};\n\n\t\t};\n\n\t\t/**\n\t\t * Inicializa la instancia del ViewModel creado con soundGroupActivity.create\n\t\t *\n\t\t * @param {object} instance Intancia del VM de knockout\n\t\t */\n\t\tsoundGroupsActivity.run = function (instance) {\n\t\t\tko.cleanNode($('#main-container')[0]);\n\t\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t\t};\n\n\t\treturn soundGroupsActivity;\n});\n\nlizSoundGroups.directive('soundGroups', function  (soundGroupsActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/sound_groups.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\tsoundGroupsActivity.run(soundGroupsActivity.create(scope.options));\n\t\t}\n\t}; \n});\n\n","/**\n * Actividad donde los elementos pueden ser arrastrados en múltiples grupos desde una pila definida\n */\nvar lizStackMultiple = angular.module('lizStackMultiple', []);\n\nlizStackMultiple.factory('stackMultipleActivity', function ($rootScope, shuffleArrayFactory) {\n\n\tvar stackMultipleActivity = {};\n\n  /**\n   * Crea el ViewModel\n   */\n  stackMultipleActivity.create = function (options) {\n    return new stackMultipleActivity._ViewModel(options);\n  };\n\n\t/**\n\t * Genera el ViewModel de la actividad con las siguientes opciones\n\t *\n\t *\n\t */\n\tstackMultipleActivity._ViewModel = function (options) {\n\t\tvar self = this,\n\t\t\ttempItem = {}, // variable auxiliar para añadir nuevos elementos al stack\n\t\t\tstackCounter = 0, // Variable para poner Id's a elementos clonados\n\t\t\ttempStack = []; // Array auxiliar que después será ordenado aleatoriamente\n\n\t\tself.groups = ko.observableArray([]);\n\t\tself.stack = ko.observableArray([]);\n\t\tself.resources = $rootScope.resources; // Carpeta de recursos desde angular\n\t\tself.maxElementsPerGroup = options.hasOwnProperty('maxElementsPerGroup') ? options.maxElementsPerGroup : 2;\n\n\t\t// Triggers que se activan cuando la respuesta es correcta/incorrecta\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\t// Triggers cuando la actividad termina satisfactoria y/o insatisfactoriamente\n\t\tself.success = ko.observable(false);\n\n\t\t/**\n\t\t * Clase para los grupos\n\t\t */\n\t\tself.Group = function (options) {\n\t\t\tthis.name = options.name;\n\t\t\tthis.sortable = ko.observableArray([]);\n\t\t\tthis.sortable._array = this.sortable;\n\n\t\t\tthis.min = options.hasOwnProperty('min') ? options.min : 0;\n\t\t\tthis.max = options.hasOwnProperty('max') ? options.max : 99;\n\t\t};\n\n\t\t// Constructor de los grupos\n\t\tko.utils.arrayForEach(options.groups, function(group){\n\t\t\tself.groups.push(new self.Group(group));\n\t\t});\n\n\t\t// Constructor del stack\n\t\tko.utils.arrayForEach(options.stack, function(item){\n\n\t\t\t// Procesamos cada elemento para pasarlo al stack\n\t\t\tif(! item.hasOwnProperty('copies')) item.copies = 1;\n\n\t\t\tstackCounter++;\n\n\t\t\t// Creamos las copias\n\t\t\tfor(var i=0; i < item.copies; i++){\n\n\t\t\t\ttempItem = $.extend(true, {}, item);\n\n\t\t\t\ttempItem._id = stackCounter; // definimos un id idéntico a las copias\n\t\t\t\ttempItem.serial = (Math.random() + 1).toString(36).substring(7); // Clave primaria\n\n\t\t\t\ttempStack.push(tempItem); // Añade el elemento\n\n\t\t\t}\n\n\t\t});\n\n\t\t// Añadimos el array a self.stack\n\t\tself.stack(shuffleArrayFactory.run(tempStack));\n\n\t\t/**\n\t\t * Función que se ejecuta cada vez que se suelta un elemento\n\t\t * El objetivo es revisar los elementos para definir las condiciones \n\t\t * propuestas por el desarrollador en cada grupo\n\t\t */\n\t\tself.verifyAfter = function (arg) {\n\t\t\tvar item = arg.item,\n\t\t\t\tfilteredArray = [], // variable que recibe los elementos filtrados del array\n\t\t\t\twrongElement = {}, // elemento removido en caso de que ya exista el elemento en la lista\n\t\t\t\tarrayTarget = arg.targetParent._array; // Puntero al arreglo de objetos del objetivo\n\n\n\t\t\t// Cuando es el mismo destino\n\t\t\tif(arg.sourceParent === arg.targetParent) return;\n\n\n\t\t\t// Filtramos el array en busca de elementos repetidos\n\t\t\tfilteredArray = arrayTarget().filter(function(elem){\n\t\t\t\treturn elem._id === item._id;\n\t\t\t});\n\n\n\t\t\t// Si es mayor a 1, entonces hay elementos repetidos\n\t\t\tif(filteredArray.length > 1){\n\t\t\t\t// Respuesta Incorrecta\t\n\t\t\t\tself.wrongAnswer(item);\n\n\t\t\t\t// Removemos el elemento y lo lanzamos de nuevo al stack\n\t\t\t\twrongElement = arrayTarget.remove(function(elem){\n\t\t\t\t\treturn elem.serial === item.serial;\n\t\t\t\t})[0];\n\n\t\t\t\t// Devolvemos el elemento al stack\n\t\t\t\tself.stack.push(wrongElement);\n\n\t\t\t} else {\n\t\t\t\t// Respuesta Correcta\n\t\t\t\tself.rightAnswer(item);\n\t\t\t}\n\n\t\t\t// Analizamos las condiciones para así activar el botón de siguiente\n\t\t\tvar condition = true;\n\n\t\t\tko.utils.arrayForEach(self.groups(), function(group){\n\t\t\t\t// mínimos\n\t\t\t\tif(group.sortable().length >= group.min )\n\t\t\t\t\tcondition = condition && true; \n\t\t\t\telse\n\t\t\t\t\tcondition = condition && false; \n\n\t\t\t\t// máximos\n\t\t\t\tif(group.sortable().length <= group.max)\n\t\t\t\t\tcondition = condition && true; \n\t\t\t\telse\n\t\t\t\t\tcondition = condition && false; \n\t\t\t});\n\n\t\t\t// Activamos / desactivamos el botón de siguiente \n\t\t\tif(condition) \n\t\t\t\t$rootScope.isNextEnabled = true;\n\t\t\telse \n\t\t\t\t$rootScope.isNextEnabled = false;\n\n\t\t\t// Aplicamos el cambio del scope\n\t\t\t$rootScope.$apply();\n\n\t\t}\n\n\t\t/**\n\t\t * Función que se ejecuta al dar click en siguiente\n\t\t */\n\t\t$rootScope.beforeGoNext = function () {\n\t\t\tself.success(true);\n\t\t\treturn true;\n\t\t};\n\n\t\t/**\n\t\t * Define si el target esta lleno utilizando self.maximumElements\n\t\t */\n\t\tself.isContainerFull = function (parent) {\n\t\t\treturn parent().length < self.maxElementsPerGroup;\n\t\t};\n\n\t\t/**\n\t\t * Estilos de los grupos\n\t\t */\n\t\tself.getGroupStyles = function () {\n\t\t\t return \"width: \" + (100 / self.groups().length) + \"%;\";\n\t\t}\n\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con stackMultipleActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\tstackMultipleActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.afterMove = instance.verifyAfter;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn stackMultipleActivity;\n\n});\n\nlizStackMultiple.directive('stackMultiple', function  (stackMultipleActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio: '@'\n\t\t},\n\t\ttransclude: true,\n\t\ttemplateUrl: '../views/activities/stack_multiple.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\t// Definimos los contenedores y los elementos transcluídos\n\t\t\tvar groupContainer = element.find('.group .item'),\n\t\t\t\titemContainer = element.find('.stack .item');\n\n\t\t\t// Se añade cada uno de los hijos a la plantilla en la posición adecuada\n\t\t\tangular.forEach(element.find('.transcluded item').clone().children(), function (elem) { groupContainer.append(elem); });\n\t\t\tangular.forEach(element.find('.transcluded item').clone().children(), function (elem) { itemContainer.append(elem); });\n\n\t\t\t// Se elimina el elemento transcluded del DOM\n\t\t\telement.find('.transcluded').remove();\n\n\t\t\t// Iniciar Knockout\n\t\t\tstackMultipleActivity.run(stackMultipleActivity.create(scope.options));\n\t\t}\n\t}; \n});\n","var lizTablePath = angular.module('lizTablePath', []);\n\nlizTablePath.directive('tablePath', function  () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\timgLeft: '@',\n\t\t\timgLeftAlt: '@',\n\t\t\timgRight: '@',\n\t\t\timgRightAlt: '@',\n\t\t\ttitlehead: '@',\n\t\t\taudio: '@',\n\t\t\tinstruction: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/table_path.html',\n\t\tlink: function (scope, element, attrs) {\n\t\t\tvar opt = scope.options,\n\t\t\t\tpath = opt.path.slice(0), // Camino a elegir por el estudiante\n\t\t\t\trightAnswers = 0, // Contador de respuestas correctas\n\t\t\t\tchances = opt.chances, // Se puede equivocar este número de eces\n\t\t\t\trows = opt.table.length, \n\t\t\t\tcols = opt.table[0].length;\n\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\n\t\t\tscope.isBottom = scope.title || scope.description;\n\n\t\t\t// Calificación\n\t\t\tscope.rightAnswer = false;\n\t\t\tscope.wrongAnswer = false;\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\n\t\t\tscope.table = [];\n\n\t\t\t// Llenamos la tabla\n\t\t\tfor(var i = 0; i < rows; i++) {\n\t\t\t\tscope.table.push([]); // Añade el nuevo array\n\n\t\t\t\tfor(var j = 0; j < cols; j++) {\n\t\t\t\t\tscope.table[i].push({\n\t\t\t\t\t\tx: j,\n\t\t\t\t\t\ty: i,\n\t\t\t\t\t\ttext: opt.table[i][j]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** \n\t\t\t * Verifica si la celda pertenece al camino.\n\t\t\t */\n\t\t\tscope.verify = function (cell) {\n\t\t\t\t// Si hay elementos en el path\n\t\t\t\tif(cell.x === path[0][0] && cell.y === path[0][1]) {\n\t\t\t\t\t// Respuesta correcta\n\t\t\t\t\tcell.completed = true; // Marcamos la casilla como completa\n\t\t\t\t\tscope.rightAnswer = Math.random(); // Disparador de respuesta\n\t\t\t\t\tpath.shift(); // Eliminamos el primer elemento\n\t\t\t\t} else {\n\t\t\t\t\tscope.wrongAnswer = Math.random(); // Disparador de respuesta\n\t\t\t\t\tchances --;\n\n\t\t\t\t\tif(chances === 0) {\n\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad exitoso\n\t\t\t\tif(path.length === 0) {\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\tscope.success = true;\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\n\t\t}\n\t}; \n});\n","var lizTablePathInstruction = angular.module('lizTablePathInstruction', []);\n\nlizTablePathInstruction.directive('tablePathInstruction', function  () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\timg: '@',\n\t\t\timgAlt: '@',\n\t\t\ttitlehead: '@',\n\t\t\taudio: '@',\n\t\t\tinstruction: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/table_path_instruction.html',\n\t\tlink: function (scope, element, attrs) {\n\t\t\tvar opt = scope.options,\n\t\t\t\tpath = opt.path.slice(0), // Camino a elegir por el estudiante\n\t\t\t\trightAnswers = 0, // Contador de respuestas correctas\n\t\t\t\tchances = opt.chances, // Se puede equivocar este número de eces\n\t\t\t\trows = opt.table.length, \n\t\t\t\tcols = opt.table[0].length;\n\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\n\t\t\tscope.isBottom = scope.title || scope.description;\n\t\t\tscope.instructions = opt.instructions; // las intrucciones a seguir \n\t\t\t// Calificación\n\t\t\tscope.rightAnswer = false;\n\t\t\tscope.wrongAnswer = false;\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\n\t\t\tscope.table = [];\n\n\t\t\t// Llenamos la tabla\n\t\t\tfor(var i = 0; i < rows; i++) {\n\t\t\t\tscope.table.push([]); // Añade el nuevo array\n\n\t\t\t\tfor(var j = 0; j < cols; j++) {\n\t\t\t\t\tscope.table[i].push({\n\t\t\t\t\t\tx: j,\n\t\t\t\t\t\ty: i,\n\t\t\t\t\t\ttext: opt.table[i][j]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** \n\t\t\t * Verifica si la celda pertenece al camino.\n\t\t\t */\n\t\t\tscope.verify = function (cell) {\n\t\t\t\t// Si hay elementos en el path\n\t\t\t\tif(cell.x === path[0][0] && cell.y === path[0][1]) {\n\t\t\t\t\t// Respuesta correcta\n\t\t\t\t\tcell.completed = true; // Marcamos la casilla como completa\n\t\t\t\t\tscope.rightAnswer = Math.random(); // Disparador de respuesta\n\t\t\t\t\tpath.shift(); // Eliminamos el primer elemento\n\t\t\t\t} else {\n\t\t\t\t\tscope.wrongAnswer = Math.random(); // Disparador de respuesta\n\t\t\t\t\tchances --;\n\n\t\t\t\t\tif(chances === 0) {\n\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad exitoso\n\t\t\t\tif(path.length === 0) {\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\tscope.success = true;\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\n\t\t}\n\t}; \n});\n","var lizTangram = angular.module('lizTangram', []);\n\nlizTangram.directive('tangram', function  (shuffleArrayFactory) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/tangram.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\tvar opt = scope.options;\n\n\t\t\t// variables básicas de la acividad de angular\n\t\t\tscope.rightAnswer = false;\n\t\t\tscope.wrongAnswer = false;\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\t\n\t\t\tscope.started = false;\n\n\t\t\t/**\n\t\t\t * Muestra el canvas\n\t\t\t */\n\t\t\tscope.start = function () {\n\t\t\t\tscope.started = true;\n\t\t\t\tscope.startCanvas();\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Inicializa el canvas\n\t\t\t */\n\t\t\tscope.startCanvas = function () {\n\t\t\t\tvar tempPos = {}, // Posición temporal que tiene el objeto\n\t\t\t\t\tbs = 50, // blockSize: tamaño de los lados del bloque http://www.logicville.com/tangram1.htm\n\t\t\t\t\thypotenuse = Math.sqrt( 2 * Math.pow(bs, 2) ), // tamaño de la hipotenusa\n\t\t\t\t\tfinalFigure = {}, // Figura a armar\n\t\t\t\t\tfigs = [], // Contenedor temporal para el array de figuras\n\t\t\t\t\tchances = opt.chances, // número total de posibilidades\n\t\t\t\t\tTOTAL_FIGURES = 7, // Número total de figuras\n\t\t\t\t\tcompletedFigures = 0; // Contador para figuras completas\n\n\t\t\t\t// Plantillas de las figuras. Basado en http://www.logicville.com/tangram1.htm\n\t\t\t\tvar templates = {\n\t\t\t\t\t\"bigTriangle\": {\n\t\t\t\t\t\t\"points\": [ \n\t\t\t\t\t\t\t0, 0,\t\t\n\t\t\t\t\t\t\tbs*2, bs*2,\t\t\n\t\t\t\t\t\t\t0, bs*4 \n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"offset\": { x: bs, y: bs * 2 }\n\t\t\t\t\t},\n\t\t\t\t\t\"mediumTriangle\": {\n\t\t\t\t\t\t\"points\": [ \n\t\t\t\t\t\t\t0, 0,\t\t\n\t\t\t\t\t\t\tbs*2, 0,\t\t\n\t\t\t\t\t\t\t0, bs*2\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"offset\": { x: hypotenuse / 2, y: hypotenuse / 2 }\n\t\t\t\t\t},\n\t\t\t\t\t\"smallTriangle\": {\n\t\t\t\t\t\t\"points\": [ \n\t\t\t\t\t\t\t0, 0,\t\t\n\t\t\t\t\t\t\tbs*2, 0,\n\t\t\t\t\t\t\tbs, bs\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"offset\": { x: bs, y: bs / 2 }\n\t\t\t\t\t},\n\t\t\t\t\t\"square\": {\n\t\t\t\t\t\t\"points\": [ \n\t\t\t\t\t\t\t0, 0,\t\t\n\t\t\t\t\t\t\thypotenuse, 0,\n\t\t\t\t\t\t\thypotenuse, hypotenuse,\n\t\t\t\t\t\t\t0, hypotenuse\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"offset\": { x: hypotenuse / 2, y: hypotenuse / 2 }\n\t\t\t\t\t},\n\t\t\t\t\t\"rhomboid\": {\n\t\t\t\t\t\t\"points\": [ \n\t\t\t\t\t\t\t0, 0,\n\t\t\t\t\t\t\tbs, bs,\n\t\t\t\t\t\t\tbs*3, bs,\n\t\t\t\t\t\t\tbs*2, 0,\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"offset\": { x: bs * 1.5, y: bs * 0.5 }\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tvar stage = new Kinetic.Stage({\n\t\t\t\t\tcontainer: 'kinetic-container',\n\t\t\t\t\twidth: 960,\n\t\t\t\t\theight: 650\n\t\t\t\t});\n\n\t\t\t\tvar layer = new Kinetic.Layer();\n\n\t\t\t\tvar tangramFigures = new Kinetic.Group({ x: 0, y: 0 }); // Figuras iniciales\n\t\t\t\tvar macros = new Kinetic.Group({ x: 0, y: 0 }); // Macros\n\n\t\t\t\t// rectángulos donde van la muestra y la figura objetivo\n\t\t\t\tvar leftRect = new Kinetic.Rect({\n\t\t\t\t\twidth: 455,\n\t\t\t\t\theight: 410,\n\t\t\t\t\tstroke: opt.color,\n\t\t\t\t\tstrokeWidth: 2\n\t\t\t\t});\n\t\t\t\tmacros.add(leftRect);\n\n\t\t\t\t// Rectángulo derecho\n\t\t\t\tmacros.add(new Kinetic.Rect({\n\t\t\t\t\tx: 475,\n\t\t\t\t\twidth: 455,\n\t\t\t\t\theight: 410,\n\t\t\t\t\tstroke: opt.color,\n\t\t\t\t\tstrokeWidth: 2\n\t\t\t\t}));\n\n\t\t\t\t// Nombre de la figura\n\t\t\t\tvar tangramName = new Kinetic.Text({\n\t\t\t\t\ttext: opt.name,\n\t\t\t\t\tfontFamily: 'century_gothic',\n\t\t\t\t\tfontSize: 20,\n\t\t\t\t\tx: leftRect.getX(),\n\t\t\t\t\ty: leftRect.getY(),\n\t\t\t\t\twidth: leftRect.getWidth(),\n\t\t\t\t\tpadding: 10,\n\t\t\t\t\talign: 'center',\n\t\t\t\t\tfill: 'white'\n\t\t\t\t});\n\n\t\t\t\t// Fondo del nombre\n\t\t\t\tmacros.add(new Kinetic.Rect({\n\t\t\t\t\tx: leftRect.getX(),\n\t\t\t\t\ty: leftRect.getY(),\n\t\t\t\t\twidth: leftRect.getWidth(),\n\t\t\t\t\theight: tangramName.getHeight(),\n\t\t\t\t\tfill: opt.color\n\t\t\t\t}));\n\n\t\t\t\tmacros.add(tangramName); // Agregamos el nombre sobre el rectángulo\n\n\n\n\t\t\t\t// Cuadro de texto con la descripción\n\t\t\t\tvar descriptionGroup = new Kinetic.Group({ x: 0, y: 0 });\n\n\t\t\t\tvar descriptionText = new Kinetic.Text({\n\t\t\t\t\ttext: 'Arrastra hasta el recuadro las piezas del tangram y arma la figura que tienes como muestra.',\n\t\t\t\t\tfontFamily: 'century_gothic',\n\t\t\t\t\tfontSize: 20,\n\t\t\t\t\twidth: stage.getWidth(),\n\t\t\t\t\tpadding: 10,\n\t\t\t\t\talign: 'center',\n\t\t\t\t\tfill: 'white'\n\t\t\t\t});\n\n\t\t\t\tdescriptionGroup.add(new Kinetic.Rect({\n\t\t\t\t\twidth: stage.getWidth(),\n\t\t\t\t\theight: descriptionText.getHeight(),\n\t\t\t\t\tfill: opt.color\n\t\t\t\t}));\n\n\t\t\t\tdescriptionGroup.add(descriptionText);\n\n\t\t\t\t// ===========================================================================\n\t\t\t\t// Inicio - creación de figuras\n\t\t\t\t// ===========================================================================\n\t\t\t\t// triángulo naranja\n\t\t\t\ttangramFigures.add(new Kinetic.Line({\n\t\t\t\t\tpoints: templates.bigTriangle.points,\n\t\t\t\t\toffset: templates.bigTriangle.offset,\n\t\t\t\t\tfill: '#F19700',\n\t\t\t\t\tid: 'triangleOrange',\n\t\t\t\t\tclosed: true\n\t\t\t\t}));\n\n\t\t\t\t// triángulo verde\n\t\t\t\ttangramFigures.add(new Kinetic.Line({\n\t\t\t\t\tpoints: templates.bigTriangle.points,\n\t\t\t\t\toffset: templates.bigTriangle.offset,\n\t\t\t\t\tfill: '#70A83B',\n\t\t\t\t\tid: 'triangleGreen',\n\t\t\t\t\tclosed: true\n\t\t\t\t}));\n\n\t\t\t\t// Romboide morado\n\t\t\t\tvar rhomboid = new Kinetic.Line({\n\t\t\t\t\tpoints: templates.rhomboid.points,\n\t\t\t\t\toffset: templates.rhomboid.offset,\n\t\t\t\t\tfill: '#BA007C',\n\t\t\t\t\tid: 'rhomboid',\n\t\t\t\t\tclosed: true\n\t\t\t\t});\n\n\t\t\t\t// para manejar imágenes espejadas\n\t\t\t\tif(opt.pos[2].scale){\n\t\t\t\t\trhomboid.scale( opt.pos[2].scale );\n\t\t\t\t}\n\t\t\t\ttangramFigures.add(rhomboid);\n\t\t\t\t\n\t\t\t\t// triángulo amarillo\n\t\t\t\ttangramFigures.add(new Kinetic.Line({\n\t\t\t\t\tpoints: templates.mediumTriangle.points,\n\t\t\t\t\toffset: templates.mediumTriangle.offset,\n\t\t\t\t\tfill: '#FEEE00',\n\t\t\t\t\tid: 'triangleYellow',\n\t\t\t\t\tclosed: true\n\t\t\t\t}));\n\n\t\t\t\t// cuadro rojo\n\t\t\t\ttangramFigures.add(new Kinetic.Line({\n\t\t\t\t\tpoints: templates.square.points,\n\t\t\t\t\toffset: templates.square.offset,\n\t\t\t\t\tfill: '#BF0411',\n\t\t\t\t\tid: 'square',\n\t\t\t\t\tclosed: true\n\t\t\t\t}));\n\n\t\t\t\t// triángulo azul 1\n\t\t\t\ttangramFigures.add(new Kinetic.Line({\n\t\t\t\t\tpoints: templates.smallTriangle.points,\n\t\t\t\t\toffset: templates.smallTriangle.offset,\n\t\t\t\t\tfill: '#009BDB',\n\t\t\t\t\tid: 'triangleBlue1',\n\t\t\t\t\tclosed: true\n\t\t\t\t}));\n\n\t\t\t\t// triángulo azul 2\n\t\t\t\ttangramFigures.add(new Kinetic.Line({\n\t\t\t\t\tpoints: templates.smallTriangle.points,\n\t\t\t\t\toffset: templates.smallTriangle.offset,\n\t\t\t\t\tfill: '#009BDB',\n\t\t\t\t\tid: 'triangleBlue2',\n\t\t\t\t\tclosed: true\n\t\t\t\t}));\n\n\t\t\t\t// Clonamos el grupo de figuras para poder armar la figura final\n\t\t\t\tfinalFigure = tangramFigures.clone();\n\n\n\t\t\t\t// ===========================================================================\n\t\t\t\t// Configuración de cada elemento - propiedades comunes\n\t\t\t\t// ===========================================================================\n\t\t\t\ttangramFigures.getChildren().forEach(function (f) {\n\t\t\t\t\t// Definimos los atributos comunes\n\t\t\t\t\tf.setAttrs({\n\t\t\t\t\t\tdraggable: true, \n\t\t\t\t\t\tstroke: 'black',\n\t\t\t\t\t\tstrokeWidth: 1\n\t\t\t\t\t});\n\n\n\t\t\t\t\t// ===========================================================================\n\t\t\t\t\t// Eventos\n\t\t\t\t\t// ===========================================================================\n\t\t\t\t\tf.on('mouseover', function () {\n\t\t\t\t\t\t// Guardamos la posición temporal, por si es necesario retornar el elemento al punto\n\t\t\t\t\t\ttempPos.x = this.getX();\n\t\t\t\t\t\ttempPos.y = this.getY();\n\t\t\t\t\t});\n\n\t\t\t\t\tf.on('dragstart', function (e) {\n\t\t\t\t\t\tthis.moveToTop(); // Cuando se empieza a arrastrar el elemento, se pone al tope\n\t\t\t\t\t\tlayer.draw(); // Redibujamos la capa\n\t\t\t\t\t});\n\n\t\t\t\t\t/**\n\t\t\t\t\t * La idea es identificar la figura en base al punto de intersección y luego verificar si\n\t\t\t\t\t * la respuesta es correcta o incorrecta\n\t\t\t\t\t */\n\t\t\t\t\tf.on('dragend', function (e) {\n\t\t\t\t\t\tvar pos = this.getAbsolutePosition(); // Obtenemos la posición absoluta\n\n\t\t\t\t\t\t// Movemos el elemento, para poder obtener la intersección que deseamos\n\t\t\t\t\t\tthis.setAttrs({ x: tempPos.x, y: tempPos.y });\n\t\t\t\t\t\tlayer.draw();\n\n\t\t\t\t\t\t// Buscamos el elemento con la intersección de puntos\n\t\t\t\t\t\tvar shape = this.getStage().getIntersection({ x: pos.x, y: pos.y });\n\n\t\t\t\t\t\tif(!shape) return; // no hay figura\n\t\t\t\t\t\tif(shape.getAttr('_type') !== 'target') return; // No es un objetivo\n\n\t\t\t\t\t\tif(this.getId() === shape.getId()){\n\t\t\t\t\t\t\t// Respuesta Correcta\n\t\t\t\t\t\t\tthis.setAbsolutePosition( shape.getAbsolutePosition() ); // Ponemos el elemento exactamente sobre el objetivo\n\t\t\t\t\t\t\tthis.setDraggable(false); // desactivamos el draggable\n\t\t\t\t\t\t\tlayer.draw(); \n\n\t\t\t\t\t\t\tscope.rightAnswer = Math.random();\n\t\t\t\t\t\t\tcompletedFigures++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Respuesta Incorrecta\n\t\t\t\t\t\t\tscope.wrongAnswer = Math.random();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tchances--; // Reducimos las posibilidades\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Evaluamos si la actividad se ha terminado\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif(chances === 0 || completedFigures === TOTAL_FIGURES){\n\t\t\t\t\t\t\tif(completedFigures === TOTAL_FIGURES){\n\t\t\t\t\t\t\t\t// éxito\n\t\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// fracaso\n\t\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.$apply(); // Aplicamos el scope para poder ver los íconos de correcto / incorrecto\n\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * Propiedades del puntero al pasar el mouse por encima\n\t\t\t\t */\n\t\t\t\ttangramFigures.on('mouseover', function () {\n\t\t\t\t\tdocument.body.style.cursor = 'pointer';\n\t\t\t\t});\n\n\t\t\t\ttangramFigures.on('mouseout', function () {\n\t\t\t\t\tdocument.body.style.cursor = 'default';\n\t\t\t\t});\n\n\t\t\t\t// ===========================================================================\n\t\t\t\t// Configuración personal de la actividad\n\t\t\t\t// ===========================================================================\n\t\t\t\tfigs = tangramFigures.getChildren(); // Array con las figuras del tangram\n\n\t\t\t\t// Configuración de las figuras\n\t\t\t\tfor(var i=0; i < opt.pos.length; i++){\n\t\t\t\t\t// Movemos cada figura según la posición\n\t\t\t\t\tfigs[i].move({\n\t\t\t\t\t\tx: opt.pos[i].x,\n\t\t\t\t\t\ty: opt.pos[i].y\n\t\t\t\t\t});\n\n\t\t\t\t\tif(opt.pos[i].hasOwnProperty('rot')){\n\t\t\t\t\t\tfigs[i].setRotation(opt.pos[i].rot); // rotamos la figura\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ===========================================================================\n\t\t\t\t// Configuración de la figura final\n\t\t\t\t// ===========================================================================\n\t\t\t\tfigs = finalFigure.getChildren(); // Array con las figuras del tangram\n\n\t\t\t\tfor(var i=0; i < opt.figure.length; i++){\n\t\t\t\t\t// Añadimos el borde a cada una\n\t\t\t\t\tfigs[i].setAttrs({\n\t\t\t\t\t\tstroke: 'black',\n\t\t\t\t\t\tstrokeWidth: 1\n\t\t\t\t\t});\n\n\t\t\t\t\t// Movemos cada figura según la posición\n\t\t\t\t\tfigs[i].move({\n\t\t\t\t\t\tx: opt.figure[i].x,\n\t\t\t\t\t\ty: opt.figure[i].y\n\t\t\t\t\t});\n\n\t\t\t\t\tif(opt.figure[i].hasOwnProperty('rot')){\n\t\t\t\t\t\tfigs[i].setRotation(opt.figure[i].rot); // rotamos la figura\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ===========================================================================\n\t\t\t\t// Configuración de la figura objetivo\n\t\t\t\t// ===========================================================================\n\t\t\t\ttargetFigure = finalFigure.clone(); // Clonamos de la figura final\n\n\t\t\t\ttargetFigure.getChildren().forEach(function (child) {\n\t\t\t\t\tchild.setFill('white'); // Quitamos el fondo de cada figura\n\t\t\t\t\tchild.setAttr('_type', 'target'); // Definimos un tipo especial para identificar los targets\n\t\t\t\t});\n\n\t\t\t\t// ===========================================================================\n\t\t\t\t// Configuración Final\n\t\t\t\t// ===========================================================================\n\t\t\t\t// Movemos los grupos\n\t\t\t\tmacros.move({ x: 15, y: 220 });\n\t\t\t\tfinalFigure.move({ x: 160, y: 400 });\n\t\t\t\ttargetFigure.move({ x: 660, y: 400 });\n\t\t\t\ttangramFigures.move({ x: 90, y: 130 });\n\n\t\t\t\t// Agregamos todo\n\t\t\t\tlayer.add(macros);\n\t\t\t\tlayer.add(descriptionGroup);\n\t\t\t\tlayer.add(targetFigure);\n\t\t\t\tlayer.add(finalFigure);\n\t\t\t\tlayer.add(tangramFigures);\n\t\t\t\tstage.add(layer);\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t}\n\t}; \n});\n","var lizTenThousandNumbers = angular.module('lizTenThousandNumbers', ['factories']);\r\n\r\nlizTenThousandNumbers.directive('tenThousandNumbers', function  (shuffleArrayFactory) {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\tscope: {\r\n\t\t\tdescription: '@',\r\n\t\t\taudio: '@'\r\n\t\t},\r\n\t\ttemplateUrl: '../views/activities/ten_thousand_numbers.html',\r\n\t\tlink: function (scope, element, attrs) {\r\n\t\t\tscope.numberText = ''; // número convertido a texto\r\n\t\t\tscope.chances = 10;\r\n\r\n\t\t\tscope.selectedRange = 0; // Rango seleccionado\r\n\t\t\tscope.selectedBigRange = false; // gran rango seleccionado\r\n\t\t\tscope.bigRanges = [\r\n\t\t\t\t[1000, 1999],\r\n\t\t\t\t[2000, 2999],\r\n\t\t\t\t[3000, 3999],\r\n\t\t\t\t[4000, 4999],\r\n\t\t\t\t[5000, 5999],\r\n\t\t\t\t[6000, 6999],\r\n\t\t\t\t[7000, 7999],\r\n\t\t\t\t[8000, 8999],\r\n\t\t\t\t[9000, 9999],\r\n\t\t\t];\r\n\r\n\t\t\tscope.numberMatrix = []; // array multidimensional para la tabla\r\n\t\t\tscope.rangesLeft = [];\r\n\t\t\tscope.rangesRight = [];\r\n\r\n\t\t\t// Calificación\r\n\t\t\tscope.success = false;\r\n\r\n\t\t\t/**\r\n\t\t\t * Selecciona el gran rango\r\n\t\t\t */\r\n\t\t\tscope.selectBigRange = function (range) {\r\n\t\t\t\tscope.selectedBigRange = range;\r\n\t\t\t};\r\n\r\n\t\t\t// cada vez que cambia, se generan los rangos de izquierda y derecha\r\n\t\t\tscope.$watch('selectedBigRange', function (val) {\r\n\t\t\t\tif(val) {\r\n\t\t\t\t\tscope.rangesLeft.length = 0;\r\n\t\t\t\t\tscope.rangesRight.length = 0;\r\n\r\n\t\t\t\t\tfor(var i = 0; i < 5; i++) {\r\n\t\t\t\t\t\tscope.rangesLeft.push([\r\n\t\t\t\t\t\t\tval[0] + (100 * i),\r\n\t\t\t\t\t\t\tval[0] + (100 * (i + 1)) - 1,\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor(var i = 5; i <= 9; i++) {\r\n\t\t\t\t\t\tscope.rangesRight.push([\r\n\t\t\t\t\t\t\tval[0] + (100 * i),\r\n\t\t\t\t\t\t\tval[0] + (100 * (i + 1)) - 1,\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t/**\r\n\t\t\t * Define el rango seleccionado\r\n\t\t\t */\r\n\t\t\tscope.selectRange = function (range) {\r\n\t\t\t\tscope.numberMatrix.length = 0; // Se vacía el array\r\n\t\t\t\tscope.selectedRange = range; // seleccionamos el rango\r\n\r\n\t\t\t\tvar temp = [],\r\n\t\t\t\t\tarrayIndex = 0,\r\n\t\t\t\t\tcounter = 0;\r\n\r\n\t\t\t\t// Llenamos el array con los números\r\n\t\t\t\tscope.numberMatrix.push([]); // Añadimos el primer array\r\n\t\t\t\ttemp = scope.numberMatrix[arrayIndex];\r\n\r\n\t\t\t\tfor(var i = range[0]; i <= range[1]; i++){\r\n\t\t\t\t\ttemp.push(i);\r\n\t\t\t\t\tcounter++;\r\n\r\n\t\t\t\t\t// Cada 10, cambiamos de array. Además, si es el último número, no añadimos un nuevo array\r\n\t\t\t\t\tif(counter === 10 && (i !== range[1])){\r\n\t\t\t\t\t\tcounter = 0;\t\r\n\t\t\t\t\t\tarrayIndex++;\r\n\r\n\t\t\t\t\t\t// Añadimos el array nuevo y cambiamos el índice\r\n\t\t\t\t\t\tscope.numberMatrix.push([]); // Añadimos el primer array\r\n\t\t\t\t\t\ttemp = scope.numberMatrix[arrayIndex];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Convierte un número en palabras.\r\n\t\t\t *\r\n\t\t\t * Para hacerlo, la función va filtrando el número desde la mayor cifra (centenas, decenas... hasta unidades)\r\n\t\t\t * después de cada filtro, se elimina la última cifra para poder pasar el número por siguiente filtro hasta\r\n\t\t\t * llegar a las unidades.\r\n\t\t\t *\r\n\t\t\t * Rango actual: 1 al 999\r\n\t\t\t *\r\n\t\t\t * @param {integer} number número a convertir\r\n\t\t\t * @return {Object} con 2 propiedades: text y intervals\r\n\t\t\t *\r\n\t\t\t */\r\n\t\t\tfunction numberToWords(number) {\r\n\t\t\t\tvar res = ''; // Número en palabras\r\n\r\n\t\t\t\tnumber = parseInt(number);\r\n\r\n\t\t\t\tvar units = ['', 'uno', 'dos', 'tres', 'cuatro', 'cinco', 'seis', 'siete', 'ocho', 'nueve'];\r\n\t\t\t\tvar tens = ['', '', 'veinti', 'treinta', 'cuarenta', 'cincuenta', 'sesenta', 'setenta', 'ochenta', 'noventa'];\r\n\r\n\t\t\t\t// =============================\r\n\t\t\t\t// Unidades de mil\r\n\t\t\t\t// =============================\r\n\t\t\t\tvar uc = Math.floor(number / 1000);\r\n\r\n\t\t\t\tif(uc > 0) {\r\n\t\t\t\t\tif(uc === 1) {\r\n\t\t\t\t\t\tres += \"mil \"\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tres += units[uc] + \" mil \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnumber = number - (uc * 1000); // Eliminamos las unidades de mil\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// =============================\r\n\t\t\t\t// Centenas\r\n\t\t\t\t// =============================\r\n\t\t\t\tvar c = Math.floor(number / 100);\r\n\r\n\t\t\t\t// Cien\r\n\t\t\t\tif(number === 100){ \r\n\t\t\t\t\tres += 'cien'; \r\n\t\t\t\t} \r\n\t\t\t\telse if(c > 0){\r\n\t\t\t\t\tif(c === 1){ \r\n\t\t\t\t\t\tres += 'ciento '; \r\n\t\t\t\t\t} else{\r\n\t\t\t\t\t\t// Casos especiales\r\n\t\t\t\t\t\tif(c === 5){ res += 'quinientos';  }\r\n\t\t\t\t\t\telse if(c === 7){ res += 'setecientos';  }\r\n\t\t\t\t\t\telse if(c === 9){ res += 'novecientos';  }\r\n\t\t\t\t\t\telse { \r\n\t\t\t\t\t\t\t// Para el resto de centenas, se añaden las unidades al inicio\r\n\t\t\t\t\t\t\tres += units[c] + 'cientos';\r\n\t\t\t\t\t\t} \r\n\r\n\t\t\t\t\t\tif(number % 100 !== 0){ res += ' ' } // Si el número no es redondo, añadimos un espacio\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnumber = number - (c * 100); // Eliminamos las centenas\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// =============================\r\n\t\t\t\t// Decenas\r\n\t\t\t\t// =============================\r\n\t\t\t\tvar t = Math.floor(number / 10);\r\n\r\n\t\t\t\tif(number === 20) {\r\n\t\t\t\t\tres += 'veinte';\r\n\t\t\t\t} else if(t >= 2 && t <= 9){\r\n\t\t\t\t\tres += tens[t]; // Añadimos la cadena de decenas\r\n\r\n\t\t\t\t\t// Agregamos el \" y \" si es mayor a 2\r\n\t\t\t\t\tif(t > 2 && number % 10 !== 0){ \r\n\t\t\t\t\t\tres += ' y '; \r\n\t\t\t\t\t} \r\n\r\n\t\t\t\t\tnumber = number % 10; // Eliminamos las decenas del número\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// =============================\r\n\t\t\t\t// Unidades y números hasta el veinte\r\n\t\t\t\t// =============================\r\n\t\t\t\tif(number < 10){\r\n\t\t\t\t\tres += units[number];\r\n\t\t\t\t} else if(number >= 10 && number < 20) {\r\n\t\t\t\t\t// del diez al quince\r\n\t\t\t\t\tif(number === 10) { res += 'diez'; }\r\n\t\t\t\t\tif(number === 11) { res += 'once'; }\r\n\t\t\t\t\tif(number === 12) { res += 'doce'; }\r\n\t\t\t\t\tif(number === 13) { res += 'trece'; }\r\n\t\t\t\t\tif(number === 14) { res += 'catorce'; }\r\n\t\t\t\t\tif(number === 15) { res += 'quince'; }\r\n\r\n\t\t\t\t\t// Deiciseis en adelante\r\n\t\t\t\t\tif(number > 15 && number < 20){ \r\n\t\t\t\t\t\tres += 'dieci' + units[number % 10]; \r\n\t\t\t\t\t} \r\n\t\t\t\t} \r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttext: res\r\n\t\t\t\t};\r\n\r\n\t\t\t}; // numberToWords()\r\n\t\t\t\r\n\r\n\t\t\t/**\r\n\t\t\t * Función pricipal. Recibe un número, define el texto y lo reproduce\r\n\t\t\t */\r\n\t\t\tscope.chooseNumber = function (number) {\r\n\t\t\t\tvar result = numberToWords(number);\r\n\r\n\t\t\t\tscope.numberText = result.text; // Muestra el texto\r\n\t\t\t\tscope.chances--;\r\n\r\n\t\t\t\t// Reducimos las posibilidades, para llegar al final de la actividad\r\n\t\t\t\tif(scope.chances === 0){\r\n\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t\tscope.$root.beforeGoNext = function () {\r\n\t\t\t\t\t\tscope.success = true;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\tnumberToWords(1099),\r\n\t\t\t\tnumberToWords(1199),\r\n\t\t\t\tnumberToWords(3199)\r\n\t\t\t);\r\n\r\n\r\n\t\t}\r\n\t}; \r\n});\r\n","/**\r\n * La actividad para escribir textos largos.\r\n */\r\n\r\n var lizTextActivity = angular.module('lizTextActivity', []);\r\n\r\n lizTextActivity.directive('textActivity', function () {\r\n \treturn {\r\n \t\trestrict: 'E',\r\n \t\ttemplateUrl: '../views/activities/text_activity.html',\r\n \t\tscope: {\r\n \t\t\toptions: '=',\r\n \t\t\ttitle: '@',\r\n \t\t\tdescription: '@',\r\n \t\t\tinstruction: '@',\r\n \t\t\taudio: '@'\r\n \t\t},\r\n \t\tlink: function (scope, iElement, iAttrs) {\r\n \t\t\tconsole.log(scope);\r\n \t\t\t// Inputs procesados\r\n\t\t\tscope.words = [];\r\n\r\n\t\t\t// Procesamos cada elemento del array entrante\r\n\t\t\tangular.forEach(scope.inputs, function (input) {\r\n\t\t\t\tscope.words.push({ word: input, right: false, wrong: false });\r\n\t\t\t});\r\n\r\n \t\t\tscope.numLines = scope.options.numLines;\r\n \t\t\tscope.complete = false;\r\n \t\t\tscope.success = false;\r\n\t\t\tscope.failure = false;\r\n\t\t\tscope.block = false;\r\n\t\t\tscope.right = false;\r\n\t\t\tscope.wrong = false;\r\n\r\n\t\t\tscope.$watch('complete', function(complete) {\r\n\t\t\t\tif (complete) {\r\n\t\t\t\t\tif (scope.numCharacters === scope.options.numCharacters) {\r\n\t\t\t\t\t\t// éxito\r\n\t\t\t\t\t\tscope.success = true;\r\n\r\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\r\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// fracaso\r\n\t\t\t\t\t\tscope.failure = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t});\r\n\r\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\r\n\t\t\tscope.isBottom = scope.title || scope.description;\r\n\r\n\t\t\tvar chances = scope.options.chances-1;\r\n\r\n\t\t\tscope.verify = function (input) {\r\n\t\t\t\tvar letters = /^[A-Za-z]+$/,\r\n\t\t\t\t\tvalue = $(\"#text_activity_box\").text(),\r\n\t\t\t\t\tlineHeight = parseInt($(\"#text_activity_box\").css(\"line-height\"));\r\n\r\n\t\t\t\t\t\r\n\r\n\t\t\t\tif (value === \"\" || value === null || value === \"Escribe aqui...\") { return; }\r\n\r\n\t\t\t\tvar totalHeight = parseInt($(\"#text_activity_box\").height()),\r\n\t\t\t\t\tlineUsed = totalHeight / lineHeight;\r\n\r\n\t\t\t\tconsole.log(totalHeight);\r\n\r\n\t\t\t\tif((value.match(letters) !== null) && (lineUsed >= scope.numLines)) {\r\n                    \r\n                    \t\r\n                \tscope.wrong = false;\r\n                    scope.right = true;\r\n                    scope.block = true;\r\n                    scope.numCharacters = scope.options.numCharacters;\r\n                                                                   \r\n                } else {\r\n\t                    \t\r\n                    \tscope.wrong ? chances=scope.options.chances-2: chances=scope.options.chances-1;\r\n\r\n                    \tscope.wrong = true;\r\n                    \t\r\n\r\n\t                    \tif(chances === 0){\r\n\t                    \tscope.block = true;\r\n\t                    \tchances=scope.options.chances-1;\r\n\t                    \t}else{\r\n\t                    \t\tchances--;value = \"\";\r\n\t                    \t\t$('#text_activity_box').text(\"\");\r\n\t\t\t\t\t\t\t\t$(\"#text_activity_box\").focus();\r\n\t                    \t}\r\n            \t}\r\n                    \t\r\n                if (chances === 0) {\r\n                \tif ((value.match(letters) !== null) && (lineUsed >= scope.numLines)) {\r\n\t\t\t\t\t\t// éxito\r\n\t\t\t\t\t\tscope.success = true;\r\n\r\n\t\t\t\t\t\t// Activamos la siguiente actividad o ruta\r\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// fracaso\r\n\t\t\t\t\t\tscope.failure = true;\r\n\t\t\t\t\t}\r\n                }\r\n\r\n\t\t\t}\r\n\r\n\r\n \t\t}\r\n \t};\r\n });","var lizThousandNumbers = angular.module('lizThousandNumbers', ['factories']);\n\nlizThousandNumbers.directive('thousandNumbers', function  (shuffleArrayFactory) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\tdescription: '@',\n\t\t\taudio: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/thousand_numbers.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\tscope.selectedRange = 0; // Rango seleccionado\n\t\t\tscope.numberMatrix = []; // array multidimensional para la tabla\n\t\t\tscope.numberText = ''; // número convertido a texto\n\t\t\tscope.chances = 20; // Debe hacer al menos este número de intentos para pasar\n\t\t\t\n\t\t\tscope.rangesLeft = [\n\t\t\t\t[100, 199],\n\t\t\t\t[200, 299],\n\t\t\t\t[300, 399],\n\t\t\t\t[400, 499]\n\t\t\t];\n\t\t\t\n\t\t\tscope.rangesRight = [\n\t\t\t\t[500, 599],\n\t\t\t\t[600, 699],\n\t\t\t\t[700, 799],\n\t\t\t\t[800, 899],\n\t\t\t\t[900, 999]\n\t\t\t];\n\n\t\t\t/**\n\t\t\t * Define el rango seleccionado\n\t\t\t */\n\t\t\tscope.selectRange = function (range) {\n\t\t\t\tscope.numberMatrix.length = 0; // Se vacía el array\n\t\t\t\tscope.selectedRange = range; // seleccionamos el rango\n\n\t\t\t\tvar temp = [],\n\t\t\t\t\tarrayIndex = 0,\n\t\t\t\t\tcounter = 0;\n\n\t\t\t\t// Llenamos el array con los números\n\t\t\t\tscope.numberMatrix.push([]); // Añadimos el primer array\n\t\t\t\ttemp = scope.numberMatrix[arrayIndex];\n\n\t\t\t\tfor(var i = range[0]; i <= range[1]; i++){\n\t\t\t\t\ttemp.push(i);\n\t\t\t\t\tcounter++;\n\n\t\t\t\t\t// Cada 10, cambiamos de array. Además, si es el último número, no añadimos un nuevo array\n\t\t\t\t\tif(counter === 10 && (i !== range[1])){\n\t\t\t\t\t\tcounter = 0;\t\n\t\t\t\t\t\tarrayIndex++;\n\n\t\t\t\t\t\t// Añadimos el array nuevo y cambiamos el índice\n\t\t\t\t\t\tscope.numberMatrix.push([]); // Añadimos el primer array\n\t\t\t\t\t\ttemp = scope.numberMatrix[arrayIndex];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Función pricipal. Recibe un número, define el texto y lo reproduce\n\t\t\t */\n\t\t\tscope.chooseNumber = function (number) {\n\t\t\t\tvar result = numberToWords(number);\n\n\t\t\t\tscope.numberText = result.text; // Muestra el texto\n\t\t\t\t//playAudio(result.intervals); // Reproduce el audio\n\n\t\t\t\tscope.chances--;\n\n\t\t\t\t// Reducimos las posibilidades, para llegar al final de la actividad\n\t\t\t\tif(scope.chances === 0){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\tscope.$root.beforeGoNext = function () {\n\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\t// =============================================================================\n\t\t\t// LÓGICA DE SELECCIÓN DE NÚMERO, CAMBIO A PALABRAS Y REPRODUCCIÓN DE SONIDO\n\t\t\t// =============================================================================\n\t\t\t// Intérvalos \n\t\t\tvar intervals = {\n\t\t\t\t\"uno\": [0, 0.4],\n\t\t\t\t\"dos\": [0.8, 1.4],\n\t\t\t\t\"tres\": [1.8, 2.3],\n\t\t\t\t\"cuatro\": [2.8, 3.3],\n\t\t\t\t\"cinco\": [3.7, 4.3],\n\t\t\t\t\"seis\": [4.8, 5.4],\n\t\t\t\t\"siete\": [5.8, 6.4],\n\t\t\t\t\"ocho\": [6.9, 7.3],\n\t\t\t\t\"nueve\": [7.8, 8.3],\n\t\t\t\t\"diez\": [8.6, 9.4],\n\t\t\t\t\"once\": [9.8, 10.4],\n\t\t\t\t\"doce\": [10.8, 11.3],\n\t\t\t\t\"trece\": [11.7, 12.5],\n\t\t\t\t\"catorce\": [12.7, 13.5],\n\t\t\t\t\"quince\": [13.7, 14.5],\n\t\t\t\t\"dieci\": [14.6, 15.17],\n\t\t\t\t\"veinte\": [15.7, 16.4],\n\t\t\t\t\"veinti\": [16.6, 17.25],\n\t\t\t\t\"treinta\": [17.6, 18.3],\n\t\t\t\t\"cuarenta\": [18.7, 19.5],\n\t\t\t\t\"cincuenta\": [19.7, 20.5],\n\t\t\t\t\"sesenta\": [20.8, 21.6],\n\t\t\t\t\"setenta\": [21.8, 22.8],\n\t\t\t\t\"ochenta\": [23.2, 23.8],\n\t\t\t\t\"noventa\": [24.1, 24.8],\n\t\t\t\t\"y\": [25.2, 25.5],\n\t\t\t\t\"cien\": [25.8, 26.5],\n\t\t\t\t\"ciento\": [26.9, 27.6],\n\t\t\t\t\"cientos\": [28, 28.8],\n\t\t\t\t\"quinientos\": [29, 29.9],\n\t\t\t\t\"setecientos\": [30.2, 31.4],\n\t\t\t\t\"novecientos\": [31.6, 32.7]\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Convierte un número en palabras.\n\t\t\t *\n\t\t\t * Para hacerlo, la función va filtrando el número desde la mayor cifra (centenas, decenas... hasta unidades)\n\t\t\t * después de cada filtro, se elimina la última cifra para poder pasar el número por siguiente filtro hasta\n\t\t\t * llegar a las unidades.\n\t\t\t *\n\t\t\t * Rango actual: 1 al 999\n\t\t\t *\n\t\t\t * @param {integer} number número a convertir\n\t\t\t * @return {Object} con 2 propiedades: text y intervals\n\t\t\t *\n\t\t\t */\n\t\t\tfunction numberToWords(number) {\n\t\t\t\tvar res = '', // Número en palabras\n\t\t\t\t\tintervalsArray = []; // Interválo para reproducir\n\n\t\t\t\tnumber = parseInt(number);\n\n\t\t\t\tvar units = ['', 'uno', 'dos', 'tres', 'cuatro', 'cinco', 'seis', 'siete', 'ocho', 'nueve'];\n\t\t\t\tvar tens = ['', '', 'veinti', 'treinta', 'cuarenta', 'cincuenta', 'sesenta', 'setenta', 'ochenta', 'noventa'];\n\n\t\t\t\t// =============================\n\t\t\t\t// Centenas\n\t\t\t\t// =============================\n\t\t\t\tvar c = Math.floor(number / 100);\n\n\t\t\t\t// Cien\n\t\t\t\tif(number === 100){ \n\t\t\t\t\tres += 'cien'; \n\t\t\t\t\tintervalsArray.push(intervals.cien);\n\t\t\t\t} \n\t\t\t\telse if(c > 0){\n\t\t\t\t\tif(c === 1){ \n\t\t\t\t\t\tres += 'ciento '; \n\t\t\t\t\t\tintervalsArray.push(intervals.ciento);\n\t\t\t\t\t} else{\n\t\t\t\t\t\t// Casos especiales\n\t\t\t\t\t\tif(c === 5){ res += 'quinientos'; intervalsArray.push(intervals.quinientos); }\n\t\t\t\t\t\telse if(c === 7){ res += 'setecientos'; intervalsArray.push(intervals.setecientos); }\n\t\t\t\t\t\telse if(c === 9){ res += 'novecientos'; intervalsArray.push(intervals.novecientos); }\n\t\t\t\t\t\telse { \n\t\t\t\t\t\t\t// Para el resto de centenas, se añaden las unidades al inicio\n\t\t\t\t\t\t\tres += units[c] + 'cientos';\n\t\t\t\t\t\t\tintervalsArray.push(intervals[ units[c] ]);\n\t\t\t\t\t\t\tintervalsArray.push(intervals.cientos);\n\t\t\t\t\t\t} \n\n\t\t\t\t\t\tif(number % 100 !== 0){ res += ' ' } // Si el número no es redondo, añadimos un espacio\n\t\t\t\t\t}\n\n\t\t\t\t\tnumber = number - (c * 100); // Eliminamos las centenas\n\t\t\t\t}\n\n\t\t\t\t// =============================\n\t\t\t\t// Decenas\n\t\t\t\t// =============================\n\t\t\t\tvar t = Math.floor(number / 10);\n\n\t\t\t\tif(number === 20) {\n\t\t\t\t\tres += 'veinte';\n\t\t\t\t\tintervalsArray.push(intervals.veinte);\n\t\t\t\t} else if(t >= 2 && t <= 9){\n\t\t\t\t\tres += tens[t]; // Añadimos la cadena de decenas\n\t\t\t\t\tintervalsArray.push(intervals[ tens[t] ]);\n\n\t\t\t\t\t// Agregamos el \" y \" si es mayor a 2\n\t\t\t\t\tif(t > 2 && number % 10 !== 0){ \n\t\t\t\t\t\tres += ' y '; \n\t\t\t\t\t\tintervalsArray.push(intervals.y);\n\t\t\t\t\t} \n\n\t\t\t\t\tnumber = number % 10; // Eliminamos las decenas del número\n\t\t\t\t}\n\n\t\t\t\t// =============================\n\t\t\t\t// Unidades y números hasta el veinte\n\t\t\t\t// =============================\n\t\t\t\tif(number < 10){\n\t\t\t\t\tres += units[number];\n\t\t\t\t\tintervalsArray.push(intervals[ units[number] ]);\n\t\t\t\t} else if(number >= 10 && number < 20) {\n\t\t\t\t\t// del diez al quince\n\t\t\t\t\tif(number === 10) { res += 'diez'; intervalsArray.push(intervals.diez) };\n\t\t\t\t\tif(number === 11) { res += 'once'; intervalsArray.push(intervals.once) };\n\t\t\t\t\tif(number === 12) { res += 'doce'; intervalsArray.push(intervals.doce) };\n\t\t\t\t\tif(number === 13) { res += 'trece'; intervalsArray.push(intervals.trece) };\n\t\t\t\t\tif(number === 14) { res += 'catorce'; intervalsArray.push(intervals.catorce) };\n\t\t\t\t\tif(number === 15) { res += 'quince'; intervalsArray.push(intervals.quince) };\n\n\t\t\t\t\t// Deiciseis en adelante\n\t\t\t\t\tif(number > 15 && number < 20){ \n\t\t\t\t\t\tres += 'dieci' + units[number % 10]; \n\t\t\t\t\t\tintervalsArray.push(intervals.dieci);\n\t\t\t\t\t\tintervalsArray.push(intervals[ units[number % 10] ]);\n\t\t\t\t\t} \n\t\t\t\t} \n\n\t\t\t\treturn {\n\t\t\t\t\ttext: res,\n\t\t\t\t\tintervals: intervalsArray\n\t\t\t\t};\n\n\t\t\t}; // numberToWords()\n\n\t\t\t/**\n\t\t\t * Reproduce los intérvalos especificados uno tras otro.\n\t\t\t * Para ello, usa una función recursiva basada en un array\n\t\t\t *\n\t\t\t * @param {array} intervals Matrix de 2 dimensiones. Cada fila tiene tiempo de inicio y final del intervalo\n\t\t\t */\n\t\t\tfunction playAudio(intervals) {\n\t\t\t\tif(intervals.length === 0) return; // Termina la función recursiva\n\n\t\t\t\tvar audio = $('#audio-numbers')[0]; // Recuperamos el audio\n\n\t\t\t\tvar actualInterval = intervals.shift(),\n\t\t\t\t\tstarts = actualInterval[0],\n\t\t\t\t\tends = actualInterval[1];\n\n\t\t\t\taudio.currentTime = starts;\n\t\t\t\taudio.play();\n\n\t\t\t\tvar interv = setInterval(function() {\n\t\t\t\t\tif (audio.currentTime > ends) {\n\t\t\t\t\t\taudio.pause();\n\t\t\t\t\t\tclearInterval(interv);\n\n\t\t\t\t\t\tif(intervals.length !== 0) playAudio(intervals);\n\t\t\t\t\t}\n\t\t\t\t}, 10);\n\t\t\t}\n\n\t\t}\n\t}; \n});\n","var lizThousandPatterns = angular.module('lizThousandPatterns', ['factories']);\n\nlizThousandPatterns.directive('thousandPatterns', function  (shuffleArrayFactory) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\tdescription: '@',\n\t\t\taudio: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/thousand_patterns.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\n\t\t\tscope.selectedRange = 0; // Rango seleccionado\n\t\t\tscope.numberMatrix = []; // array multidimensional para la tabla\n\t\t\tscope.numberText = ''; // número convertido a texto\n\t\t\tscope.chances = 20; // Debe hacer al menos este número de intentos para pasar\n\t\t\t\n\t\t\tscope.rangesRight = [\n\t\t\t\t[1, 91],\n\t\t\t\t[10, 91],\n\t\t\t];\n\n\t\t\t/**\n\t\t\t * Define el rango seleccionado\n\t\t\t */\n\t\t\tscope.selectRange = function (range) {\n\t\t\t\tscope.numberMatrix.length = 0; // Se vacía el array\n\t\t\t\tscope.selectedRange = range; // seleccionamos el rango\n\n\t\t\t\tvar temp = [],\n\t\t\t\t\tarrayIndex = 0,\n\t\t\t\t\tcounter = 0;\n\n\t\t\t\t// Llenamos el array con los números\n\t\t\t\tscope.numberMatrix.push([]); // Añadimos el primer array\n\t\t\t\ttemp = scope.numberMatrix[arrayIndex];\n\n\t\t\t\tfor(var i = range[0]; i <= range[1]; i++){\n\t\t\t\t\ttemp.push(i);\n\t\t\t\t\tcounter++;\n\n\t\t\t\t\t// Cada 10, cambiamos de array. Además, si es el último número, no añadimos un nuevo array\n\t\t\t\t\tif(counter === 10 && (i !== range[1])){\n\t\t\t\t\t\tcounter = 0;\t\n\t\t\t\t\t\tarrayIndex++;\n\n\t\t\t\t\t\t// Añadimos el array nuevo y cambiamos el índice\n\t\t\t\t\t\tscope.numberMatrix.push([]); // Añadimos el primer array\n\t\t\t\t\t\ttemp = scope.numberMatrix[arrayIndex];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Función pricipal. Recibe un número, define el texto y lo reproduce\n\t\t\t */\n\t\t\tscope.chooseNumber = function (number) {\n\t\t\t\tvar result = numberToWords(number);\n\n\t\t\t\tscope.numberText = result.text; // Muestra el texto\n\t\t\t\t//playAudio(result.intervals); // Reproduce el audio\n\n\t\t\t\tscope.chances--;\n\n\t\t\t\t// Reducimos las posibilidades, para llegar al final de la actividad\n\t\t\t\tif(scope.chances === 0){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\tscope.$root.beforeGoNext = function () {\n\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\t// =============================================================================\n\t\t\t// LÓGICA DE SELECCIÓN DE NÚMERO, CAMBIO A PALABRAS Y REPRODUCCIÓN DE SONIDO\n\t\t\t// =============================================================================\n\t\t\t// Intérvalos \n\t\t\tvar intervals = {\n\t\t\t\t\"uno\": [0, 0.4],\n\t\t\t\t\"dos\": [0.8, 1.4],\n\t\t\t\t\"tres\": [1.8, 2.3],\n\t\t\t\t\"cuatro\": [2.8, 3.3],\n\t\t\t\t\"cinco\": [3.7, 4.3],\n\t\t\t\t\"seis\": [4.8, 5.4],\n\t\t\t\t\"siete\": [5.8, 6.4],\n\t\t\t\t\"ocho\": [6.9, 7.3],\n\t\t\t\t\"nueve\": [7.8, 8.3],\n\t\t\t\t\"diez\": [8.6, 9.4],\n\t\t\t\t\"once\": [9.8, 10.4],\n\t\t\t\t\"doce\": [10.8, 11.3],\n\t\t\t\t\"trece\": [11.7, 12.5],\n\t\t\t\t\"catorce\": [12.7, 13.5],\n\t\t\t\t\"quince\": [13.7, 14.5],\n\t\t\t\t\"dieci\": [14.6, 15.17],\n\t\t\t\t\"veinte\": [15.7, 16.4],\n\t\t\t\t\"veinti\": [16.6, 17.25],\n\t\t\t\t\"treinta\": [17.6, 18.3],\n\t\t\t\t\"cuarenta\": [18.7, 19.5],\n\t\t\t\t\"cincuenta\": [19.7, 20.5],\n\t\t\t\t\"sesenta\": [20.8, 21.6],\n\t\t\t\t\"setenta\": [21.8, 22.8],\n\t\t\t\t\"ochenta\": [23.2, 23.8],\n\t\t\t\t\"noventa\": [24.1, 24.8],\n\t\t\t\t\"y\": [25.2, 25.5],\n\t\t\t\t\"cien\": [25.8, 26.5],\n\t\t\t\t\"ciento\": [26.9, 27.6],\n\t\t\t\t\"cientos\": [28, 28.8],\n\t\t\t\t\"quinientos\": [29, 29.9],\n\t\t\t\t\"setecientos\": [30.2, 31.4],\n\t\t\t\t\"novecientos\": [31.6, 32.7]\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Convierte un número en palabras.\n\t\t\t *\n\t\t\t * Para hacerlo, la función va filtrando el número desde la mayor cifra (centenas, decenas... hasta unidades)\n\t\t\t * después de cada filtro, se elimina la última cifra para poder pasar el número por siguiente filtro hasta\n\t\t\t * llegar a las unidades.\n\t\t\t *\n\t\t\t * Rango actual: 1 al 999\n\t\t\t *\n\t\t\t * @param {integer} number número a convertir\n\t\t\t * @return {Object} con 2 propiedades: text y intervals\n\t\t\t *\n\t\t\t */\n\t\t\tfunction numberToWords(number) {\n\t\t\t\tvar res = '', // Número en palabras\n\t\t\t\t\tintervalsArray = []; // Interválo para reproducir\n\n\t\t\t\tnumber = parseInt(number);\n\n\t\t\t\tvar units = ['', 'uno', 'dos', 'tres', 'cuatro', 'cinco', 'seis', 'siete', 'ocho', 'nueve'];\n\t\t\t\tvar tens = ['', '', 'veinti', 'treinta', 'cuarenta', 'cincuenta', 'sesenta', 'setenta', 'ochenta', 'noventa'];\n\n\t\t\t\t// =============================\n\t\t\t\t// Centenas\n\t\t\t\t// =============================\n\t\t\t\tvar c = Math.floor(number / 100);\n\n\t\t\t\t// Cien\n\t\t\t\tif(number === 100){ \n\t\t\t\t\tres += 'cien'; \n\t\t\t\t\tintervalsArray.push(intervals.cien);\n\t\t\t\t} \n\t\t\t\telse if(c > 0){\n\t\t\t\t\tif(c === 1){ \n\t\t\t\t\t\tres += 'ciento '; \n\t\t\t\t\t\tintervalsArray.push(intervals.ciento);\n\t\t\t\t\t} else{\n\t\t\t\t\t\t// Casos especiales\n\t\t\t\t\t\tif(c === 5){ res += 'quinientos'; intervalsArray.push(intervals.quinientos); }\n\t\t\t\t\t\telse if(c === 7){ res += 'setecientos'; intervalsArray.push(intervals.setecientos); }\n\t\t\t\t\t\telse if(c === 9){ res += 'novecientos'; intervalsArray.push(intervals.novecientos); }\n\t\t\t\t\t\telse { \n\t\t\t\t\t\t\t// Para el resto de centenas, se añaden las unidades al inicio\n\t\t\t\t\t\t\tres += units[c] + 'cientos';\n\t\t\t\t\t\t\tintervalsArray.push(intervals[ units[c] ]);\n\t\t\t\t\t\t\tintervalsArray.push(intervals.cientos);\n\t\t\t\t\t\t} \n\n\t\t\t\t\t\tif(number % 100 !== 0){ res += ' ' } // Si el número no es redondo, añadimos un espacio\n\t\t\t\t\t}\n\n\t\t\t\t\tnumber = number - (c * 100); // Eliminamos las centenas\n\t\t\t\t}\n\n\t\t\t\t// =============================\n\t\t\t\t// Decenas\n\t\t\t\t// =============================\n\t\t\t\tvar t = Math.floor(number / 10);\n\n\t\t\t\tif(number === 20) {\n\t\t\t\t\tres += 'veinte';\n\t\t\t\t\tintervalsArray.push(intervals.veinte);\n\t\t\t\t} else if(t >= 2 && t <= 9){\n\t\t\t\t\tres += tens[t]; // Añadimos la cadena de decenas\n\t\t\t\t\tintervalsArray.push(intervals[ tens[t] ]);\n\n\t\t\t\t\t// Agregamos el \" y \" si es mayor a 2\n\t\t\t\t\tif(t > 2 && number % 10 !== 0){ \n\t\t\t\t\t\tres += ' y '; \n\t\t\t\t\t\tintervalsArray.push(intervals.y);\n\t\t\t\t\t} \n\n\t\t\t\t\tnumber = number % 10; // Eliminamos las decenas del número\n\t\t\t\t}\n\n\t\t\t\t// =============================\n\t\t\t\t// Unidades y números hasta el veinte\n\t\t\t\t// =============================\n\t\t\t\tif(number < 10){\n\t\t\t\t\tres += units[number];\n\t\t\t\t\tintervalsArray.push(intervals[ units[number] ]);\n\t\t\t\t} else if(number >= 10 && number < 20) {\n\t\t\t\t\t// del diez al quince\n\t\t\t\t\tif(number === 10) { res += 'diez'; intervalsArray.push(intervals.diez) };\n\t\t\t\t\tif(number === 11) { res += 'once'; intervalsArray.push(intervals.once) };\n\t\t\t\t\tif(number === 12) { res += 'doce'; intervalsArray.push(intervals.doce) };\n\t\t\t\t\tif(number === 13) { res += 'trece'; intervalsArray.push(intervals.trece) };\n\t\t\t\t\tif(number === 14) { res += 'catorce'; intervalsArray.push(intervals.catorce) };\n\t\t\t\t\tif(number === 15) { res += 'quince'; intervalsArray.push(intervals.quince) };\n\n\t\t\t\t\t// Deiciseis en adelante\n\t\t\t\t\tif(number > 15 && number < 20){ \n\t\t\t\t\t\tres += 'dieci' + units[number % 10]; \n\t\t\t\t\t\tintervalsArray.push(intervals.dieci);\n\t\t\t\t\t\tintervalsArray.push(intervals[ units[number % 10] ]);\n\t\t\t\t\t} \n\t\t\t\t} \n\n\t\t\t\treturn {\n\t\t\t\t\ttext: res,\n\t\t\t\t\tintervals: intervalsArray\n\t\t\t\t};\n\n\t\t\t}; // numberToWords()\n\n\t\t\t/**\n\t\t\t * Reproduce los intérvalos especificados uno tras otro.\n\t\t\t * Para ello, usa una función recursiva basada en un array\n\t\t\t *\n\t\t\t * @param {array} intervals Matrix de 2 dimensiones. Cada fila tiene tiempo de inicio y final del intervalo\n\t\t\t */\n\t\t\tfunction playAudio(intervals) {\n\t\t\t\tif(intervals.length === 0) return; // Termina la función recursiva\n\n\t\t\t\tvar audio = $('#audio-numbers')[0]; // Recuperamos el audio\n\n\t\t\t\tvar actualInterval = intervals.shift(),\n\t\t\t\t\tstarts = actualInterval[0],\n\t\t\t\t\tends = actualInterval[1];\n\n\t\t\t\taudio.currentTime = starts;\n\t\t\t\taudio.play();\n\n\t\t\t\tvar interv = setInterval(function() {\n\t\t\t\t\tif (audio.currentTime > ends) {\n\t\t\t\t\t\taudio.pause();\n\t\t\t\t\t\tclearInterval(interv);\n\n\t\t\t\t\t\tif(intervals.length !== 0) playAudio(intervals);\n\t\t\t\t\t}\n\t\t\t\t}, 10);\n\t\t\t}\n\n\t\t}\n\t}; \n});\n","var lizTwoGroup = angular.module('lizTwoGroup', []);\n\n// Knockout Pairs Factory\nlizTwoGroup.factory('twoGroupActivity', function ($rootScope) {\n\n\tvar twoGroupActivity = {};\n\n\t/**\n\t * Crea el ViewModel\n\t */\n\ttwoGroupActivity.create = function (options) {\n\t\treturn new  twoGroupActivity._ViewModel(options);\n\t}\n\n\t/**\n\t * Genera el ViewModel de las parejas con sus funcionalidades\n\t *\n\t * Recibe un objeto con las siguientes propiedades\n\t *\n\t * @param {object}\t\topt\t\t\t\t\t\tOpciones a utilizar.\n\t * @param {Array}\t\topt.data\t\t\t\tInformación de los elementos. Es necesario que cada una tenga la propiedad:\n\t *\n\t * \tanswer: {boolean} define si la respuesta es correcta o incorrecta y puede ser soltada en el contenedor\n\t * \tsrc: {string} imagen para el elemento\n\t * \talt: {string} texto alternativo\n\t *\n\t * @param {integer}\t\topt.chances\t\t\t\tNúmero de posibilidades que tiene el usuario de hacer la actividad\n\t * @param {integer}\t\topt.minRightAnswers\t\tNúmero mínimo de respuestas correctas\n\t * @param {function}\topt.successCallback\t\tFunción que se llama cuando se termina la actividad de forma satisfactoria\n\t * @param {function}\topt.rightAnswerCallback\tFunción que se llama cuando la respuesta es correcta\n\t * @param {integer}\t\topt.itemsPerRow\t\t\tNúmero de elementos por fila. 3 por defecto\n\t * @param {boolean}\t\topt.priority\t\t\tDefine si el botón de siguiente estará activo desde el inicio\n\t *\n\t */\n\ttwoGroupActivity._ViewModel = function (opt) {\n\t\tvar self = this;\n\n\t\tself.groupImg = opt.hasOwnProperty('groupImg') ? opt.groupImg : false;\n\t\tself.groupAlt = opt.hasOwnProperty('groupAlt') ? opt.groupAlt : false;\n\n\t\t// Observables \n\t\tself.items = ko.observableArray(opt.data);\n\t\tself.target = ko.observableArray();\n\n\t\t// Propiedades por defecto, si no existen\n\t\tko.utils.arrayForEach(self.items(), function(item){\n\t\t\tif(! item.hasOwnProperty('answer')) item.answer = true;\n\t\t\tif(! item.hasOwnProperty('title')) item.title = ''; \n\t\t\tif(! item.hasOwnProperty('text')) item.text = false; \n\t\t});\n\n\t\t// Ruta a la carpeta de imágenes\n\t\tself.resources = $rootScope.resources;\n\t\tself.itemsPerRow = typeof opt.itemsPerRow !== \"undefined\" ? opt.itemsPerRow : 3;\n\n\t\t// Disparador de preguntas correctas/incorrectas\n\t\tself.rightAnswer = ko.observable();\n\t\tself.wrongAnswer = ko.observable();\n\n\t\tself.success = ko.observable(false);\n\t\tself.failure = ko.observable(false);\n\n\t\tself.rightAnswers = 0;\n\n\t\tself.chances = opt.chances ? opt.chances : opt.data.length;\n\t\tself.totalRightAnswer = opt.totalRightAnswer ? opt.totalRightAnswer : opt.data.length;\n\t\tself.priority = opt.priority\n\n\t\t// audio\n\t\tself.audio = ko.observable(opt.audio);\n\n\t\t/**\n\t\t * Reproduce el audio de la instrucción.\n\t\t */\n\t\tself.playAudio = function () {\n\t\t\t$('#audio-instruction')[0].play();\n\t\t};\n\n\t\t/**\n\t\t *\tFunción que se ejecuta al soltar el objeto dentro del contenedor\n\t\t */\n\t\tself.verifyAnswer = function (arg) {\n\n\t\t\t// No hacer nada y salir de la función, si el elemento se soltó en el mismo grupo inicial\n\t\t\tif(arg.sourceParent() == arg.targetParent()) return;\n\n\t\t\t// Calculamos si la respuesta es correcta o no usando la propiedad 'answer'\n\t\t\tif (arg.item.answer) {\n\t\t\t\t// Respuesta correcta\n\t\t\t\tself.rightAnswer(arg.item);\n\t\t\t\targ.cancelDrop = true;\n\t\t\t\tself.rightAnswers++;\n        \t// Llama a la función de respuesta buena\n\t\t\tif (typeof opt.rightAnswerCallback !== \"undefined\") opt.rightAnswerCallback();\n\t\t\t} else {\n\t\t\t\t// Respuesta Incorrecta\n\t\t\t\tself.wrongAnswer(arg.item);\n\t\t\t\targ.cancelDrop = true; // Devuelve el elemento a su posición origina\n\t\t\t}\n\t\t\n\n\t\t\t// Reducimos las posibilidades\n\t\t\tself.chances--;\n\n\t\t\t// Fin de la actividad\n\t\t\tif (self.chances === 0 || self.rightAnswers >= self.totalRightAnswer ) {\n\t\t\t\tif(self.rightAnswers >= opt.minRightAnswers) {\n\t\t\t\t\t// éxito\n\t\t\t\t\tself.success(true);\n\n\t\t\t\t\t// Llama a la función de éxito\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback();\n\n\t\t\t\t\t// Eliminamos beforeGoNext, si existe\n\t\t\t\t\tif(self.priority){\n\t\t\t\t\t\t$rootScope.beforeGoNext = undefined; // Limpiamos la función\t\n\t\t\t\t\t}\n\n\t\t\t\t\t// Activamos la siguiente ruta\n\t\t\t\t\t$rootScope.isNextEnabled = true;\n\n\t\t\t\t} else {\n\t\t\t\t\t// Fracaso\n\t\t\t\t\tself.failure(true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Si hay prioridad, activa/desactiva el botón de siguiente\n\t\t\tif(self.priority){\n\t\t\t\tif(self.rightAnswers >= opt.minRightAnswers) $rootScope.isNextEnabled = true;\n\t\t\t\telse $rootScope.isNextEnabled = false;\n\n\t\t\t\t$rootScope.$apply();\n\t\t\t}\n\t\t};\n\n\t\t// ===========================================================================\n\t\t// Si se a decidido usar la prioridad\n\t\t// ===========================================================================\n\t\tif(self.priority){\n\n\t\t\t$rootScope.beforeGoNext = function () {\n\t\t\t\t// Si el número de elementos es mayor al número de respuestas requeridas: ÉXITO!!!\n\t\t\t\tif(self.target().length >= opt.minRightAnswers){\n\n\t\t\t\t\tif (typeof opt.successCallback !== \"undefined\") opt.successCallback();\n\t\t\t\t\tself.success(true);\n\t\t\t\t\treturn true; \n\n\t\t\t\t} else {\n\n\t\t\t\t\tself.failure(true);\n\t\t\t\t\treturn false; \n\n\t\t\t\t}\n\t\t\t};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Inicializa la instancia del ViewModel creado con oneGroupActivity.create\n\t *\n\t * @param {object} instance Intancia del VM de knockout\n\t */\n\ttwoGroupActivity.run = function (instance) {\n\t\tko.cleanNode($('#main-container')[0]);\n\t\tko.bindingHandlers.sortable.beforeMove = instance.verifyAnswer;\n\t\tko.applyBindings(instance, $('#main-container')[0]);\n\t};\n\n\treturn twoGroupActivity;\n\n});\n\nlizTwoGroup.directive('twoGroup', function  (twoGroupActivity) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\taudio: '@',\n\t\t\tdescription: '@',\n\t\t\ttitle: '@'\n\t\t},\n\t\ttemplateUrl: '../views/activities/two_group.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\t// Añadimos el audio a options\n\t\t\tscope.options.audio = typeof scope.audio !== \"undefined\" ? scope.audio : false;\n\n\t\t\ttwoGroupActivity.run(twoGroupActivity.create(scope.options));\n\t\t}\n\t}; \n});\n\n","var lizWriteTrueFalse = angular.module('lizWriteTrueFalse', []);\r\n\r\nlizWriteTrueFalse.directive('writeTrueFalse', function ($sce) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      options: '=',\r\n      audio: '@',\r\n      title: '@',\r\n      description: '@'\r\n    },\r\n    templateUrl: '../views/activities/write_true_false.html',\r\n    link: function (scope, element, attrs) {\r\n      var opt = scope.options,\r\n        rightAnswers = 0,\r\n        minRightAnswers = opt.hasOwnProperty('minRightAnswers') ? opt.minRightAnswers : opt.items.length;\r\n        scope.src = opt.src ? opt.src : false;\r\n        scope.alt = opt.alt ? opt.alt : false;\r\n        scope.bigImg = opt.hasOwnProperty('bigImg') ? opt.bigImg : false;\r\n\r\n      scope.rightAnswers = false;\r\n      scope.wrongAnswer = false;\r\n      scope.success = false;\r\n      scope.failure = false;\r\n\r\n      scope.showFeedback = false; // Realimentación\r\n      scope.feedback = opt.feedback;\r\n\r\n      scope.items = opt.items;\r\n\r\n      scope.$root.beforeGoNext = function () {\r\n        if (rightAnswers >= minRightAnswers) {\r\n          scope.success = true;\r\n          return true;\r\n        } else {\r\n          scope.failure = true;\r\n          return true;\r\n        }\r\n      };\r\n\r\n      // Permite el uso de html\r\n      scope.sanitize = function (item) {\r\n        return $sce.trustAsHtml(item);\r\n      }\r\n\r\n      /**\r\n       * abre el zoom \r\n       */\r\n      scope.zoom = function () {\r\n        if(scope.bigImg){\r\n          scope.showBig = true;\r\n        }\r\n      };\r\n\r\n      /**\r\n       * Cierra el zoom \r\n       */\r\n      scope.complete = function () {\r\n        \r\n          scope.showBig = false;\r\n      };\r\n\r\n\r\n      /**\r\n       * Función de verificación\r\n       *\r\n       * @returns {boolean}\r\n       */\r\n      scope.verify = function (item) {\r\n        item.input = item.input.toUpperCase();\r\n\r\n        if (item.input === item.answer) {\r\n          scope.rightAnswer = Math.random();\r\n          rightAnswers += 1;\r\n        } else {\r\n          scope.wrongAnswer = Math.random();\r\n        }\r\n\r\n        item.completed = true;\r\n\r\n        // Contamos los elementos completados\r\n        var completedItems = scope.items.filter(function (item) {\r\n          return item.completed;\r\n        }).length;\r\n\r\n        if (completedItems === scope.items.length) {\r\n          scope.$root.isNextEnabled = true;\r\n          scope.showFeedback = true;\r\n        }\r\n      };\r\n\r\n    }\r\n  };\r\n});\r\n","var lizAnimationBase = angular.module('lizAnimationBase', []);\n\nlizAnimationBase.directive('animationBase', function () { \n\t\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/animations/animation_base.html',\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\ttitle: '@',\n\t\t\tinstruction: '@',\n\t\t\tdescription: '@',\n\t\t\tanimationId: '@',\n\t\t\ttime: '='\n\t\t},\n\t\tlink: function (scope, element, attrs){\n\n\t\t\tvar intervalTime = 0, // Variable que almacena los milisegundos para cada uno de los pasos\n\t\t\t\ttimer = {}; // Contenedor de los timeout\n\n\t\t\tscope.isBottom = scope.title || scope.description;\n\t\t\tscope.animationClass = ''; // Elemento para el manejo de las clases\n\t\t\tscope.isRunning = false; // Variable para ver si la aplicación está corriendo\n\t\t\t\n\t\t\t/**\n\t\t\t * Corre la animación \n\t\t\t */\n\t\t\tscope.run = function () {\n\n\t\t\t\t// no permitir que la animación corra nuevamente\n\t\t\t\tif(scope.isRunning) return;\n\n\t\t\t\t// Reiniciamos los valores\n\t\t\t\tscope.animationClass = ''; \n\t\t\t\tintervalTime = 0;\n\n\t\t\t\tscope.isRunning = true; // Animación Corriendo\n\n\t\t\t\t// Definimos los pasos en base a los tiempos definidos\n\t\t\t\tscope.time.forEach(function (time, index) {\n\n\t\t\t\t\t// Actualizamos la clase con cada nuevo paso\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tscope.animationClass += ' step-' + (index + 1);\n\t\t\t\t\t\tconsole.log(intervalTime);\n\t\t\t\t\t\tscope.$apply();\n\t\t\t\t\t}, intervalTime += time * 1000);\n\n\t\t\t\t});\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tscope.isRunning = false; // Reactivamos la posibilidad de hacer la animación\n\t\t\t\t\tscope.$root.isNextEnabled = true; // Activamos la siguiente ruta\n\t\t\t\t\tscope.$apply();\n\t\t\t\t}, intervalTime);\n\n\t\t\t};\n\n\t\t}\n\t};\n\n});\n","/**\r\n* La actividad permite ver una animación tomando un video corto como fuente.\r\n*/\r\nvar lizAnimationVideo = angular.module('lizAnimationVideo', []);\r\n\r\nlizAnimationVideo.directive('animationVideo', function () {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\ttemplateUrl: '../views/animations/animation_video.html',\r\n\t\tscope: {\r\n\t\t\toptions: '=',\r\n\t\t\tinstruction: '@',\r\n\t\t\ttitle: '@',\r\n\t\t\tdescription: '@',\r\n\t\t\taudio: '@'\r\n\t\t},\r\n\t\tlink: function (scope, iElement, iAttrs) {\r\n\r\n\r\n\t\t\tscope.complete = true; // Cuando termina la actividad\r\n\t\t\tscope.block = false;\r\n\t\t\tscope.ended = false;\r\n\t\t\tscope.startButton = false;\r\n\r\n\t\t\t// watch if the activity is finished\r\n\t\t\tscope.$watch('complete', function(complete) {\r\n\t\t\t\tif (complete) {\r\n\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t} \r\n\t\t\t});\r\n\r\n\t\t\tscope.item = scope.options;\r\n\r\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\r\n\t\t\tscope.isBottom = scope.title || scope.description;\r\n\r\n\t\t\tscope.animationEnded = function () {\r\n\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\tconsole.log(\"Asd\");\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n});","var lizBoxAnimationFigure = angular.module('lizBoxAnimationFigure', []);\n\nlizBoxAnimationFigure.directive('boxAnimationFigure', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/concepts/box_animation_figure.html',\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\tinstruction: '@',\n\t\t\taudio: '@',\n\t\t\tarrow: '=',\n\t\t\taddicon: '@',\n      \t\tmouse: '='\n\t\t}\n\t};\n});\n","var lizBubbleDescription = angular.module('lizBubbleDescription', []);\r\n\r\nlizBubbleDescription.directive('bubbleDescription', function () {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\tscope: {\r\n\t\t\toptions: '=',\r\n\t\t\ttitle: '@',\r\n\t\t\tdescription: '@',\r\n\t\t\taudio:'@',\r\n\t\t\tinstruction: '@'\r\n\t\t},\r\n\t\ttemplateUrl: '../views/concepts/bubble_description.html',\r\n\t\tlink: function (scope, iElement, iAttrs) {\r\n\t\t\tscope.items = scope.options.items;\r\n\t\t\tcompletedItems = 0;\r\n\r\n\t\t\tangular.forEach(scope.items, function (item) {\r\n\t\t\t\titem.hoverBubble = false\r\n\t\t\t});\r\n\r\n\t\t\tscope.onHoverBubble = function (item) {\r\n\t\t\t\titem.hoverBubble = true;\r\n\t\t\t};\r\n\r\n\t\t\tscope.onLeaveBubble = function (item) {\r\n\t\t\t\titem.hoverBubble = false;\r\n\t\t\t\tcompletedItems++;\r\n\r\n\t\t\t\tif(completedItems === scope.items.length){\r\n\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\r\n\t};\r\n});","/**\n * La actividad consiste en varios botones que al ser presionados activan una burbuja\n * con contenido.\n */\nvar lizButtonBubbleDescription = angular.module('lizButtonBubbleDescription', []);\n\nlizButtonBubbleDescription.directive('buttonBubbleDescription', function () {\n  // Runs during compile\n  return {\n    // name: '',\n    // priority: 1,\n    // terminal: true,\n    scope: {\n      options: '=',\n      title: '@',\n      description: '@',\n      audio: '@',\n      instruction: '@',\n      mainimg: '@',\n      alt: '@'\n    }, // {} = isolate, true = child, false/undefined = no change\n    // controller: function($scope, $element, $attrs, $transclude) {},\n    // require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements\n    restrict: 'E', // E = Element, A = Attribute, C = Class, M = Comment\n    // template: '',\n    templateUrl: '../views/concepts/button_bubble_description.html',\n    // replace: true,\n    // transclude: true,\n    // compile: function(tElement, tAttrs, function transclude(function(scope, cloneLinkingFn){ return function linking(scope, elm, attrs){}})),\n    link: function (scope, iElm, iAttrs) {\n\n      scope.bubbles = scope.options.bubbles;\n      scope.complete = false; // Cuando termina la actividad\n\n      // watch if the activity is finished\n      scope.$watch('complete', function (complete) {\n        if (scope.complete) {\n\n          // Activamos la siguiente actividad o ruta\n          scope.$root.isNextEnabled = true;\n        }\n      });\n\n      scope.makeId = function (id) {\n        var newId = id.replace(\" \", \"_\");\n        var text = newId + \"_\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n        for (var i = 0; i < 5; i++) {\n          text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n\n        return text;\n      };\n\n      angular.forEach(scope.bubbles, function (value, key) {\n        value.btnId = scope.makeId(value.name);\n        value.audioId = scope.makeId(value.audio);\n        value.btnChecked = false;\n        value.displayInfo = false;\n        value.activeBtn = false;\n      });\n\n      // Si la descripción o el título están, entonces la instrucción va al fondo\n      scope.isBottom = scope.title || scope.description;\n\n      var counter = 0;\n\n      scope.activateBubble = function (bubble) {\n\n        angular.forEach(scope.bubbles, function (value, key) {\n          value.displayInfo = false;\n          if (value.btnId != bubble.btnId) {\n            value.activeBtn = false;\n          }\n        });\n\n        bubble.activeBtn = true;\n        bubble.displayInfo = true;\n\n        if (bubble.btnChecked === false) {\n          counter++;\n          bubble.btnChecked = true;\n        }\n        if (counter === scope.bubbles.length) {\n          scope.complete = true;\n        }\n      };\n    }\n  };\n});","var lizChangeStyleClick = angular.module('lizChangeStyleClick', []);\n\nlizChangeStyleClick.directive('changeStyleClick', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tinstruction: '@',\n\t\t\ttitleBlock: '@',\n\t\t\tbgimg: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/change_style_click.html',\n\t\tlink: function (scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\tcompletedItems = 0;\n\n\t\t\tscope.items = opt.items;\n\t\t\tscope.selectedItem = false; // elemento seleccionado\n\t\t\tscope.selectedItem2 = false; // elemento seleccionado\n\t\t\tscope.selectedItemAux = false; // elemento seleccionado\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = 0, // Contador de oportunidades de seleccion\n\t\t\tscope.limit = (opt.items.length - Math.floor(opt.items.length/2));\n\n\t\t\t\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Selecciona el objetivo indicado\n\t\t\t */\n\t\t\tscope.selectItem2 = function (item) {\n\t\t\tif(item.isCompleted === true || scope.selectedItem === false ) return;\n\n\t\t\t\tscope.selectedItemAux = item; // seleccionamos el objeto\n\n\t\t\t\tif (scope.selectedItem === scope.selectedItemAux){\n\t\t\t\t\t\tscope.selectedItem2 = item;\n\t\t\t\t\t\titem.right = true;\n\n\t\t\t\t\t// Contamos los elementos completos\n\t\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\t\tcompletedItems++;\n\t\t\t\t\t\trightAnswers++\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tscope.selectedItem.wrong = true;\n\t\t\t\t\t// Contamos los elementos completos\n\t\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\t\t\n\t\t\t\t\t\tcompletedItems++;\n\t\t\t\t\t\tscope.selectedItem = false; // elemento seleccionado\n\t\t\t\t\t\tscope.selectedItem2 = false; // elemento seleccionado\n\t\t\t\t\t\tscope.selectedItemAux = false; // elemento seleccionado\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === scope.items.length){\n\n\t\t\t\t\tif (rightAnswers >= scope.limit){\n\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\tscope.success = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.failure = true;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos personalizados de los items\n\t\t\t */\n\t\t\tscope.getItemStyles = function (style) {\n\t\t\t\tvar styles = \"\";\n\t\t\t\tstyles += style;\n\t\t\t\treturn styles;\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos del item seleccionado\n\t\t\t */\n\t\t\tscope.getItemStyles2 = function (item) {\n\t\t\t\tif(scope.selectedItem2 !== item) return;\n\t\t\t\treturn item.style2;\n\t\t\t};\n\n\t\t}\n\t}; \n});\n\nlizChangeStyleClick.filter('startFrom', function() {\n    return function(input, start) {\n        start = +start; //parse to int\n        return input.slice(start);\n    }\n});\n\nlizChangeStyleClick.filter('reverse', function() {\n  return function(items) {\n    return items.slice().reverse();\n  };\n});","var lizChangeStyleSelect = angular.module('lizChangeStyleSelect', []);\n\nlizChangeStyleSelect.directive('changeStyleSelect', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tinstruction: '@',\n\t\t\ttitleBlock: '@',\n\t\t\tbgimg: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/change_style_select.html',\n\t\tlink: function (scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\tcompletedItems = 0;\n\n\t\t\tscope.items = opt.items;\n\t\t\tscope.selectedItem = false; // elemento seleccionado\n\t\t\tscope.limit = (opt.items.length - Math.floor(opt.items.length/2));\n\n\t\t\t\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\n\n\t\t\t\t// Contamos los elementos completos\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\tcompletedItems++;\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === scope.items.length){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos personalizados de los items\n\t\t\t */\n\t\t\tscope.getItemStyles = function (style) {\n\t\t\t\tvar styles = \"\";\n\t\t\t\tstyles += style;\n\t\t\t\treturn styles;\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos del item seleccionado\n\t\t\t */\n\t\t\tscope.getItemStyles2 = function (item) {\n\t\t\t\tif(scope.selectedItem !== item) return;\n\t\t\t\treturn item.style2;\n\t\t\t};\n\n\t\t}\n\t}; \n});\n\nlizChangeStyleSelect.filter('startFrom', function() {\n    return function(input, start) {\n        start = +start; //parse to int\n        return input.slice(start);\n    }\n});","var lizClickImages = angular.module('lizClickImages', []);\n\nlizClickImages.directive('clickImages', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/concepts/click_images.html',\n\t\tscope: {\n\t\t\toptions: \"=\",\n\t\t\timg: '@', // Imagen al lado de click images\n\t\t\talt: '@',\n\t\t\ttitle: '@',\n\t\t\twatch: '@',\n\t\t\tinstruction: '@',\n\t\t\tdescription: '@',\n\t\t\titemsPerRow: '@',\n\t\t\tpriority: '@',\n\t\t\taudio:'@'\n\t\t},\n\t\tcontroller: function ($scope, $sce) {\n\t\t\t$scope.items = $scope.options; \n\n\t\t\t// Recorremos los elementos para definir el audio\n\t\t\t$scope.items.forEach(function(item){\n\t\t\t\titem.audio = item.hasOwnProperty('audio') ? item.audio : item.resource;\n\t\t\t\titem.type = item.hasOwnProperty('type') ? item.type : 'png'; // Tipo de recurso\n\t\t\t});\n\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\n\t\t\t$scope.isBottom = $scope.title || $scope.description;\n\n\t\t\t// Para usar el html en angular\n\t\t\t$scope.sanitize = function (item) {\n\t\t\t\treturn $sce.trustAsHtml(item);\n\t\t\t}\n\n\t\t\t// Verifica el final de la actividad, según el número de imágenes \n\t\t\t// Para ello, manejamos un contador. Cada vez que se da click en una imagen,\n\t\t\t// se le agrega una propiedad con el fin de que se cuente una sola vez.\n\t\t\t// Cuando el contador es igual al número de imágenes, se termina la actividad\n\t\t\t$scope.verify = function (item) {\n\t\t\t\tif(typeof $scope.completeCounter === \"undefined\")\n\t\t\t\t\t$scope.completeCounter = 0;\n\n\t\t\t\tif(typeof item.clicked === \"undefined\"){\n\t\t\t\t\titem.clicked = true;\n\t\t\t\t\t$scope.completeCounter++;\n\n\t\t\t\t\tif($scope.completeCounter === $scope.options.length) {\n\t\t\t\t\t\t$scope.$root.isNextEnabled = true; // Activamos el botón de siguiente\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\t$scope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif($scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / $scope.itemsPerRow) + \"%;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / $scope.options.length) + \"%;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\t\t\t}\n\n\t\t\t// En caso de prioridad, se activa el siguiente vínculo\n\t\t\tif($scope.priority){\n\t\t\t\t$scope.$root.isNextEnabled = true;\n\t\t\t}\n\n\t\t}\n\t};\n});\n","var lizClickTransition = angular.module('lizClickTransition', []);\n\nlizClickTransition.directive('clickTransition', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/concepts/click_transition.html',\n\t\tscope: {\n\t\t\toptions: \"=\",\n\t\t\ttitle: '@',\n\t\t\tinstruction: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\tcontroller: function ($scope, $sce) {\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\n\t\t\t$scope.isBottom = $scope.title || $scope.description;\n\n\t\t\t// Para usar el html en angular\n\t\t\t$scope.sanitize = function (item) {\n\t\t\t\treturn $sce.trustAsHtml(item);\n\t\t\t}\n\n\t\t\t// Verifica el final de la actividad, según el número de imágenes \n\t\t\t// Para ello, manejamos un contador. Cada vez que se da click en una imagen,\n\t\t\t// se le agrega una propiedad con el fin de que se cuente una sola vez.\n\t\t\t// Cuando el contador es igual al número de imágenes, se termina la actividad\n\t\t\t$scope.verify = function (item) {\n\t\t\t\tif(typeof $scope.completeCounter === \"undefined\")\n\t\t\t\t\t$scope.completeCounter = 0;\n\n\t\t\t\tif(typeof item.clicked === \"undefined\"){\n\t\t\t\t\titem.clicked = true;\n\t\t\t\t\t$scope.completeCounter++;\n\n\t\t\t\t\tif($scope.completeCounter === $scope.options.length) {\n\t\t\t\t\t\t$scope.$root.isNextEnabled = true; // Activamos el botón de siguiente\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n});\n","var lizCompetences = angular.module('lizCompetences', []);\n\nlizCompetences.directive('competencesNew', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/concepts/competences.html',\n\t\tscope: {\n\t\t\toptions: \"=\"\t\t\t\n\t\t},\n\t\tlink: function (scope) {\n\t\t\tscope.$root.isNextEnabled = true;\n\t\t}\t\t\n\t};\n});\n","var lizConceptsTable = angular.module('lizConceptsTable', []);\n\nlizConceptsTable.directive('conceptsTable', function  () {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/concepts/concepts_table.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\ttitle:'@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.itemsPerRow = scope.options.itemsPerRow;\n\t\t\tscope.rowsstyle = scope.options.rowsstyle;\n\t\t\tscope.mainimg = scope.options.mainimg;\n\t\t\tscope.alt = scope.options.alt;\n\t\t\tscope.words = [];\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\tscope.$root.isNextEnabled = true;\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getStyles = function function_name(argument) {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-right: \" + (10 / scope.itemsPerRow) + \"%!important;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\t\t\t\t\tstyles += \"margin-left: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t\tstyles += \"margin-top: \" + (10 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn styles;\n\n\t\t\t\t\n\t\t\t};\n\n\n\t\t}\n\n\n    }; \n});\n\n","/**\n * Created by Maria Giraldo\n */\nvar lizCorrectWordInSentence = angular.module('lizCorrectWordInSentence', []);\n\nlizCorrectWordInSentence.directive('correctWordInSentence', function ($sce, $log) {\n    return {\n        restrict: 'E',\n        scope: {\n            options: '=',\n            title: '@',\n            description: '@',\n            audio:'@',\n            instruction: '@'\n        },\n        templateUrl: '../views/concepts/correct_word_in_sentence.html',\n        link: function (scope, iElement, iAttrs) {\n\n            var opt = scope.options,\n                rightAnswers = 0;\n\n            // variables básicas de la acividad de angular\n            scope.rightAnswer = false;\n            scope.wrongAnswer = false;\n            scope.success = false;\n            scope.failure = false;\n            scope.$root.isNextEnabled = true;\n            scope.imgwidth = (opt.imgwidth) ? opt.imgwidth : 60;\n            scope.chancesPerItem = (opt.chancesPerItem) ? opt.chancesPerItem : 2;\n            scope.minRightAnwers = opt.minRightAnwers;\n            scope.randomItems = (scope.options.randomItems) ? true:false;\n            scope.$root.isNextEnabled = false;\n\n\n            // Preguntas\n            scope.questions = opt.questions;\n\n            //Numero de opciones por frase\n            angular.forEach(opt, function (value, key) {\n                angular.forEach(value.questions, function (v, k) {\n                    v.chances = scope.chancesPerItem;\n                    v.completed = false;  //Initialize\n                })\n            })\n\n            /**\n             * Verifica la respuesta.\n             * item: iem actual: frase actual\n             * text: palabra seleccionada\n             * n: pocision del item, sirve para concatenar el Id del elemento\n             * i: pocision de cada palabra deltro del item,  sirve para concatenar el Id del elemento\n             */\n            scope.verify = function (item, text, n, i) {\n                item.chances -= 1;  //Resta opciones de clic\n\n                // Si tiene opciones de clic\n                if (item.chances >=0 ){\n                    //Validar respuesta correcta\n                    if (text === item.answer){\n                        item.wrong = false;\n                        item.right = true;\n                        rightAnswers += 1;\n                        item.completed = true;\n                        item.ok = true;\n\n                        // Destaca respuesta correcta\n                        var element = \"#\"+n+i;\n                        $(element).addClass(\"answer_ok\");\n                    }\n                    else\n                    {\n                        //Evita mostrar la X si se ha acertado anteriormente\n                        if (!item.completed)    item.wrong = true;\n                    }\n                    //No tiene opciones de clic\n                    if(item.chances === 0)item.ok = true;\n                }\n                else{\n                    item.ok = true;\n                }\n\n\n                //Contamos los elementos completados por item\n                var completed =  scope.options[0].questions.filter(function (q) {\n                    return q.ok;\n                }).length;\n\n                // Contamos los elementos terminados\n                var completedItems =  scope.options[0].questions.filter(function (q) {\n                    return q.completed;\n                }).length;\n\n                // Se ha intentado en todos los items\n                if (completed ===  scope.options[0].questions.length) {\n                    //Se ha acertado en el minimo requerido\n                    if(completedItems >= scope.options[0].minRightAnwers) {\n                        scope.$root.isNextEnabled = true;\n                        //Hábilita mensaje de felicitaciones\n                        scope.success = true;\n                    }\n                    else{\n                        //Habilita mensaje para volver a intentar\n                        scope.failure = true;\n                    }\n                }\n                else{\n                    return;\n                }\n            }\n\n            // Permite el uso de html\n            scope.sanitize = function (phrase) {\n                return $sce.trustAsHtml(phrase);\n            };\n\n        }\n    };\n});","var lizHoverShowText = angular.module('lizHoverShowText', []);\n\nlizHoverShowText.directive('hoverShowText', function  ($sce) {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/concepts/hover_show_text.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\ttitlehead: '@',\n\t\t\tinstruction: '@',\n\t\t\taudio:'@'\n\t\t\t\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.canvas = scope.options.canvas; // La imagen principal\n\t\t\tscope.altcanvas = scope.options.altcanvas; // texto alternativo de La imagen principal\n\t\t\tscope.titlecanvas = scope.options.titlecanvas; // titulo de La imagen principal\n\t\t\tscope.imgStyle = scope.options.imgStyle; // estilos de La imagen principal\n\t\t\tscope.success = false;\n\t\t\tscope.event = scope.options.eventClick ? 'click' : 'mouseover';\n\t\t\tscope.block = false;\n\t\t\tcompletedItems = 0;\n\t\t\tscope.hidetext = scope.options.hidetext//activar para ocultar el popover cuando termina el evento\n\t\t\tscope.mainText = scope.options.mainText//agrga texto html ala actividad\n\n\t\t\tconsole.log(scope.mainText);\n\n\t\t\t/**\n\t\t\t * Marca los elementos y verifica el final\n\t\t\t */\n\t\t\tscope.verify = function (item) {\n\t\t\t\tif(item.completed) return;\n\n\t\t\t\titem.completed = true;\n\n\t\t\t\tvar countCompleted = scope.items.filter(function(item){\n\t\t\t\t\treturn item.completed;\n\t\t\t\t}).length;\n\n\t\t\t\tif(countCompleted === scope.items.length) {\n\t\t\t\t\tscope.$root.isNextEnabled = true; // Activa la flecha de siguiente\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Para usar el html en angular\n\t\t\tscope.sanitize = function (item) {\n\t\t\t\treturn $sce.trustAsHtml(item);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\n\t\t\t */\n\t\t\tscope.getTargetsStyles = function (item) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += 'width: ' + item.w + 'px;';\n\t\t\t\tstyles += 'height: ' + item.h + 'px;';\n\t\t\t\tstyles += 'top: ' + item.t + '%;';\n\t\t\t\tstyles += 'left: ' + item.l + '%;';\n\n\t\t\t\t// estilos personalizados\n\t\t\t\t\tif(scope.options.hasOwnProperty('customStyles')) styles += scope.options.customStyles;\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t}\n\t}; \n});\n\nlizHoverShowText.directive('popover', function($timeout){\n\treturn {\n\t    restrict: 'A',\n\t\t\tscope: {\n\t\t\t\titem: '=',\n\t\t\t\tpopoverText: '@',\n\t\t\t\tpopoverPlacement: '@',\n\t\t\t\tpopoverTitle: '@',\n\t\t\t\tpopoverEvent:'@',\n\t\t\t\thidetext: '@',\n\n\t\t\t},\n\t    link : function (scope, element, attrs) {\n\t\t\t\tvar disable = false;\n\n\t\t\t\t$timeout(function(){\n\t\t\t\t\t$(element).popover({\n\t\t\t\t\t\tanimation: true,\n\t\t\t\t\t\tplacement: scope.popoverPlacement,\n\t\t\t\t\t\ttitle: scope.popoverTitle,\n\t\t\t\t\t\ttrigger: 'manual',\n\t\t\t\t\t\thtml: true,\n\t\t\t\t\t\tcontent: scope.popoverText//container: 'body'\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tif(scope.hidetext){\n\t\t\t\t\telement.bind('mouseleave', function (e) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t$(element).popover('hide');\n\t\t\t\t\t});\n\n\t\t\t\t\telement.bind(scope.popoverEvent, function (e) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t$(element).popover('show');\n\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t\telement.bind(scope.popoverEvent, function (e) {\n\t\t\t\t\t\tif(disable) return; // Solo se anima la primera vez\n\t\t\t\t\t\t\n\t\t\t\t\t\t$(element).popover('show');\n\t\t\t\t\t\tdisable = true;\n\t\t\t\t\t});\n\n    \t}\n\t};\n});\n\n\n\n","var lizImageMapDescription = angular.module('lizImageMapDescription', []);\n\nlizImageMapDescription.directive('imageMapDescription', function ($sce) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tinstruction: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/image_map_description.html',\n\t\tlink: function (scope, element, attrs) {\n\t\t\tvar opt = scope.options,\n\t\t\t\tcompletedItems = 0;\n\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\n\t\t\tscope.isBottom = scope.title || scope.description;\n\n\t\t\tscope.canvas = opt.canvas;\n\t\t\tscope.canvasAlt = opt.canvasAlt;\n\t\t\tscope.items = opt.items;\n\t\t\tscope.selectedItem = false; // elemento seleccionado\n\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\n\n\t\t\t\t// Contamos los elementos completos\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\tcompletedItems++;\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === scope.items.length){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos de cada elemento\n\t\t\t */\n\t\t\tscope.getStyles = function (item) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += \"top: \" + item.t + \"%;\";\n\t\t\t\tstyles += \"left: \" + item.l + \"%;\";\t\n\t\t\t\treturn styles;\n\t\t\t};\n\n\n      /**\n       * Sanitizes the value as html\n       * @param value\n       * @returns String converted string\n       */\n      scope.sanitize = function (value) {\n        return $sce.trustAsHtml(value);\n      };\n\n\n\n\t\t}\n\t}; \n});\n\n","var lizImageMapMat = angular.module('lizImageMapMat', []);\n\nlizImageMapMat.directive('imageMapMat', function ($sce) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tinstruction: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/image_map_mat.html',\n\t\tlink: function (scope, element, attrs) {\n\t\t\tvar opt = scope.options,\n\t\t\t\tcompletedItems = 0;\n\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\n\t\t\tscope.isBottom = scope.title || scope.description;\n\n\t\t\tscope.canvas = opt.canvas;\n\t\t\tscope.canvasAlt = opt.canvasAlt;\n\t\t\tscope.items = opt.items;\n\t\t\tscope.selectedItem = false; // elemento seleccionado\n\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\n\n\t\t\t\t// Contamos los elementos completos\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\tcompletedItems++;\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === scope.items.length){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos de cada elemento\n\t\t\t */\n\t\t\tscope.getStyles = function (item) {\n\t\t\t\tvar styles = '';\n\n\t\t\t\tstyles += \"top: \" + item.t + \"%;\";\n\t\t\t\tstyles += \"left: \" + item.l + \"%;\";\t\n\t\t\t\treturn styles;\n\t\t\t};\n\n\n      /**\n       * Sanitizes the value as html\n       * @param value\n       * @returns String converted string\n       */\n      scope.sanitize = function (value) {\n        return $sce.trustAsHtml(value);\n      };\n\n\n\n\t\t}\n\t}; \n});\n\n","var lizImageSound = angular.module('lizImageSound', []);\r\n\r\nlizImageSound.directive('imageSound', function () {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\tscope: {\r\n\t\t\toptions: '='\r\n\t\t},\r\n\t\ttemplateUrl: '../views/concepts/image_sound.html',\r\n\t\tlink: function (scope, element, attrs) {\r\n\r\n\t\t\tvar opt = scope.options,\r\n\t\t\t\tcompletedItems = 0;\r\n\r\n            if (opt.hasOwnProperty('multiple')) {\r\n                opt.multiple = false;\r\n            }\r\n\r\n\t\t\tscope.canvas = opt.canvas;\r\n\t\t\tscope.canvasAlt = opt.canvasAlt;\r\n\t\t\tscope.items = opt.items;\r\n\r\n\t\t\tscope.makeId = function (id) {\r\n\t\t\t\tvar newId = id.replace(\" \", \"_\");\r\n                var text = newId + \"_\";\r\n                var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n                for (var i = 0; i < 5; i++) {\r\n                    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\t\t\t\t}\r\n\r\n                return text;\r\n            };\r\n\r\n\t\t\tangular.forEach(scope.items, function (value, key) {\r\n\t\t\t\tvalue.id = scope.makeId(value.button);\r\n\t\t\t});\r\n\r\n\t\t\t/**\r\n\t\t\t * Selecciona el elemento indicado\r\n\t\t\t */\r\n\t\t\t/*scope.selectItem = function (item) {\r\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\r\n\r\n\t\t\t\t// Contamos los elementos completos\r\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\r\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\r\n\t\t\t\t\tcompletedItems++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Fin de la actividad\r\n\t\t\t\tif(completedItems === scope.items.length){\r\n\t\t\t\t\tif (opt.multiple === false) {\r\n                        scope.$root.isNextEnabled = true;\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t};*/\r\n\r\n\t\t\t/**\r\n\t\t\t * Devuelve los estilos de cada elemento\r\n\t\t\t */\r\n\t\t\tscope.getStyles = function (item) {\r\n\t\t\t\tvar styles = '';\r\n\r\n\t\t\t\tstyles += \"top: \" + item.t + \"%;\";\r\n\t\t\t\tstyles += \"left: \" + item.l + \"%;\";\r\n\t\t\t\t\r\n\t\t\t\treturn styles;\r\n\t\t\t};\r\n\r\n\r\n\t\t}\r\n\t}; \r\n});\r\n\r\n","var lizImagesAndText = angular.module('lizImagesAndText', []);\n\nlizImagesAndText.directive('imagesAndText', function ($sce) {\n  return {\n    restrict: 'E',\n    templateUrl: '../views/concepts/images_and_text.html',\n    scope: {\n      options: \"=\",\n      title: '@',\n      description: '@',\n      audio: '@',\n      noafter: '@',\n      maintext: '@',\n      itemswidth:'@',\n      addicon: '@',\n      ext: '@'\n    },\n\n    link: function (scope) {\n      scope.$root.isNextEnabled = true;\n      \n      scope.ext = scope.ext ? scope.ext : '.png';\n\n      // Para usar el html en angular\n      scope.sanitize = function (item) {\n\n        return $sce.trustAsHtml(item);\n      }\n\n    }\n  };\n});\n","/**\r\n * Muestra bloques de imagenes con o sin audio ejecutados\r\n * por los bloques.\r\n */\r\n var lizImagesBlockDescription = angular.module('lizImagesBlockDescription', []);\r\n\r\n lizImagesBlockDescription.directive('imagesBlockDescription', function ($sce){\r\n \t// Runs during compile\r\n \treturn {\r\n \t\t// name: '',\r\n \t\t// priority: 1,\r\n \t\t// terminal: true,\r\n \t\tscope: {\r\n \t\t\toptions: \"=\",\r\n \t\t\ttitle: \"@\",\r\n      \t\tdescription: '@',\r\n      \t\tinstruction: '@',\r\n      \t\taudio: '@'\r\n \t\t}, // {} = isolate, true = child, false/undefined = no change\r\n \t\t// controller: function($$scope, $element, $attrs, $transclude) {},\r\n \t\t// require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements\r\n \t\trestrict: 'E', // E = Element, A = Attribute, C = Class, M = Comment\r\n \t\t// template: '',\r\n \t\ttemplateUrl: '../views/concepts/images_block_description.html',\r\n \t\t// replace: true,\r\n \t\t// transclude: true,\r\n \t\t// compile: function(tElement, tAttrs, function transclude(function($scope, cloneLinkingFn){ return function linking($scope, elm, attrs){}})),\r\n \t\tlink: function($scope) {\r\n\r\n \t\t\tif (false === $scope.options.hasAudio) {\r\n \t\t\t\t$scope.$root.isNextEnabled = true;\r\n \t\t\t}\r\n\r\n \t\t\t$scope.hasZoomImage = $scope.options.hasZoomImage || false;\r\n \t\t\t$scope.blocks = $scope.options.blocks;\r\n \t\t\t$scope.customClass = ($scope.options.customClass) ? $scope.options.customClass : \"\";\r\n \t\t\t$scope.complete = false; // Cuando termina la actividad\r\n      \t\t$scope.hideDescription = $scope.options.hideDescription;\r\n      \t\t$scope.itemsPerRow = $scope.options.itemsPerRow;\r\n      \t\t// Si la descripción o el título están, entonces la instrucción va al fondo\r\n      \t\t$scope.isBottom = $scope.title || $scope.description;\r\n\r\n      \t\t$scope.$watch('complete', function (complete) {\r\n\t\t        if (complete) {\r\n\t\t          \t$scope.$root.isNextEnabled = true;\r\n\t\t        }\r\n\t      \t});\r\n\r\n\t      \t$scope.sanitize = function (item) {\r\n\t      \t\tconsole.log(item);\r\n\t\t\t\treturn $sce.trustAsHtml(item);\r\n\t\t\t}\r\n\r\n\t      \t/**\r\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\r\n\t\t\t */\r\n\t\t\t$scope.getStyles = function () {\r\n\t\t\t\tvar styles = \"\";\r\n\r\n\t\t\t\tif($scope.itemsPerRow){\r\n\t\t\t\t\tstyles += \"width: \" + (100 / $scope.itemsPerRow) + \"%;\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyles += \"width: \" + (100 / $scope.blocks.length) + \"%;\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn styles;\r\n\t\t\t}\r\n\r\n\t      \tvar counter = 0;\r\n\r\n\t      \t$scope.verify = function (block) {\r\n\t      \t\tcounter++;\r\n\r\n\t      \t\tif (counter === $scope.options.blocks.length) {\r\n\t      \t\t\t$scope.complete = true;\r\n\t      \t\t}\r\n\t      \t}\r\n \t\t}\r\n \t};\r\n });","/**\r\n * Muestra bloques de imagenes con o sin audio ejecutados\r\n * por los bloques.\r\n */\r\n var lizImagesBlockMat = angular.module('lizImagesBlockMat', []);\r\n\r\n lizImagesBlockMat.directive('imagesBlockMat', function ($sce){\r\n \t// Runs during compile\r\n \treturn {\r\n \t\t// name: '',\r\n \t\t// priority: 1,\r\n \t\t// terminal: true,\r\n \t\tscope: {\r\n \t\t\toptions: \"=\",\r\n \t\t\ttitle: \"@\",\r\n      \t\tdescription: '@',\r\n      \t\tinstruction: '@',\r\n      \t\taudio: '@'\r\n \t\t}, // {} = isolate, true = child, false/undefined = no change\r\n \t\t// controller: function($$scope, $element, $attrs, $transclude) {},\r\n \t\t// require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements\r\n \t\trestrict: 'E', // E = Element, A = Attribute, C = Class, M = Comment\r\n \t\t// template: '',\r\n \t\ttemplateUrl: '../views/concepts/images_block_mat.html',\r\n \t\t// replace: true,\r\n \t\t// transclude: true,\r\n \t\t// compile: function(tElement, tAttrs, function transclude(function($scope, cloneLinkingFn){ return function linking($scope, elm, attrs){}})),\r\n \t\tlink: function($scope) {\r\n\r\n \t\t\tif (false === $scope.options.hasAudio) {\r\n \t\t\t\t$scope.$root.isNextEnabled = true;\r\n \t\t\t}\r\n\r\n \t\t\t$scope.hasZoomImage = $scope.options.hasZoomImage || false;\r\n \t\t\t$scope.blocks = $scope.options.blocks;\r\n \t\t\t$scope.customClass = ($scope.options.customClass) ? $scope.options.customClass : \"\";\r\n \t\t\t$scope.complete = false; // Cuando termina la actividad\r\n      \t\t$scope.hideDescription = $scope.options.hideDescription;\r\n      \t\t$scope.itemsPerRow = $scope.options.itemsPerRow;\r\n      \t\t// Si la descripción o el título están, entonces la instrucción va al fondo\r\n      \t\t$scope.isBottom = $scope.title || $scope.description;\r\n\r\n      \t\t$scope.$watch('complete', function (complete) {\r\n\t\t        if (complete) {\r\n\t\t          \t$scope.$root.isNextEnabled = true;\r\n\t\t        }\r\n\t      \t});\r\n\r\n\t      \t$scope.sanitize = function (item) {\r\n\t      \t\tconsole.log(item);\r\n\t\t\t\treturn $sce.trustAsHtml(item);\r\n\t\t\t}\r\n\r\n\t      \t/**\r\n\t\t\t * Para obtener los estilos de los elementos, específicamente el ancho\r\n\t\t\t */\r\n\t\t\t$scope.getStyles = function () {\r\n\t\t\t\tvar styles = \"\";\r\n\r\n\t\t\t\tif($scope.itemsPerRow){\r\n\t\t\t\t\tstyles += \"width: \" + (180 / $scope.itemsPerRow) + \"%;\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyles += \"width: \" + (180 / $scope.blocks.length) + \"%;\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn styles;\r\n\t\t\t}\r\n\r\n\t      \tvar counter = 0;\r\n\r\n\t      \t$scope.verify = function (block) {\r\n\t      \t\tcounter++;\r\n\r\n\t      \t\tif (counter === $scope.options.blocks.length) {\r\n\t      \t\t\t$scope.complete = true;\r\n\t      \t\t}\r\n\t      \t}\r\n \t\t}\r\n \t};\r\n });","var lizImagesInfo = angular.module('lizImagesInfo', []);\n\nlizImagesInfo.directive('imagesInfo', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/concepts/images_info.html',\n\t\tscope: {\n\t\t\toptions: \"=\",\n      title: '@',\n      description: '@',\n\t\t\tinstruction: '@',\n\t\t\taudio:'@'\n\t\t},\n\t\tlink: function (scope, element, attrs) {\n      var opt = scope.options,\n        completedImages = 0; // Contador\n\n      scope.selectedImage = false;\n      scope.images = opt.images;\n      scope.isBottom = scope.title || scope.description; // Define donde va la instrucción\n\n      scope.images.forEach(function (image) {\n        image.imgExt = image.hasOwnProperty('imgExt') ? image.imgExt : 'png'\n      });\n\n\n      /**\n       * Verificamos la imagen. Esta función define el fin de la actividad y selecciona la imagen.\n       */\n      scope.verify = function (image) {\n        scope.selectedImage = image;\n\n        if(image.completed) return;\n\n        image.completed = true;\n        completedImages += 1;\n\n        if(completedImages === scope.images.length) {\n          scope.$root.isNextEnabled = true;\n        }\n      };\n\n\t\t}\n\t};\n});\n","var lizLetter1 = angular.module('lizLetter1', []);\n\nlizLetter1.directive('letter1', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/concepts/letter1.html',\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\tletter: \"@\"\n\t\t},\n\t\tlink: function (scope) {\n\t\t\tscope.activateNext = function () {\n\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t}\n\t\t}\n\t};\n});\n","var lizMultipleImageMapDescription = angular.module('lizMultipleImageMapDescription', []);\r\n\r\nlizMultipleImageMapDescription.directive('multipleImageMapDescription', function () {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            options: '=',\r\n            title: '@',\r\n            description: '@',\r\n            audio:'@',\r\n            instruction: '@',\r\n            mainimg: '@',\r\n            alt: '@'\r\n        },\r\n        templateUrl: '../views/concepts/multiple_image_map_description.html',\r\n        link: function (scope, element, attr) {\r\n            scope.maps = scope.options.maps;\r\n            completedItems = 0;\r\n\r\n            angular.forEach(scope.maps, function (value, key) {\r\n                value.display = false;\r\n                value.data.multiple = true;\r\n                value.checked = false;\r\n            });\r\n            console.log(scope.maps);\r\n            scope.displayOptions = true;\r\n            scope.backEnabled = false;\r\n\r\n            // watch if the activity is finished\r\n            scope.$watch('complete', function(complete) {\r\n                if (complete) {\r\n\r\n                    // Activamos la siguiente actividad o ruta\r\n                    scope.$root.isNextEnabled = true;\r\n                }\r\n            });\r\n\r\n            scope.goBack = function () {\r\n                angular.forEach(scope.maps, function (value, key) {\r\n                    value.display = false;\r\n                });\r\n\r\n                scope.displayOptions = true;\r\n                scope.backEnabled = false;\r\n\r\n                if (completedItems === scope.maps.length) {\r\n                    scope.complete = true;\r\n                }\r\n            };\r\n\r\n            scope.selectMap = function (map) {\r\n                scope.displayOptions = false;\r\n                map.display = true;\r\n                scope.title = map.title;\r\n                scope.description = map.description;\r\n                scope.audio = map.audio;\r\n                scope.instruction = map.instruction;\r\n                scope.backEnabled = true;\r\n\r\n                if (map.checked === false) {\r\n                    completedItems++;\r\n                    map.checked = true;\r\n                }\r\n            };\r\n        }\r\n    };\r\n});\r\n","var lizMultiplesImagesAndText = angular.module('lizMultiplesImagesAndText', []);\n\nlizMultiplesImagesAndText.directive('multiplesImagesAndText', function ($sce) {\n  return {\n    restrict: 'E',\n    templateUrl: '../views/concepts/multiples_images_and_text.html',\n    scope: {\n      options: \"=\",\n      title: '@',\n      description: '@',\n      audio: '@',\n      noafter: '@',\n      addicon: '@'\n    },\n\n    link: function (scope) {\n      // activamos las opciones\n      scope.items = scope.options.items;\n      scope.items2 = scope.options.items2;\n      scope.itemsPerRow = scope.options.itemsPerRow;\n      scope.$root.isNextEnabled = true;\n\n\n      // Para usar el html en angular\n      scope.sanitize = function (item) {\n        console.log(item);\n        return $sce.trustAsHtml(item);\n      }\n\n      console.log(scope.options);\n\n    }\n  };\n});\n","var lizShowConcepts = angular.module('lizShowConcepts', []);\n\nlizShowConcepts.directive('showConcepts', function () {\n  return {\n    restrict: 'E',\n    scope: {\n      options: '=',\n      title: '@',\n      description: '@',\n      audio: '@',\n      instruction: '@'\n    },\n    templateUrl: '../views/concepts/show_concepts.html',\n    link: function (scope, element, attrs) {\n\n      var opt = scope.options,\n        completedItems = 0;\n\n      scope.items = opt.items;\n      scope.selectedItem = false; // elemento seleccionado\n\n      /**\n       * Selecciona el elemento indicado\n       */\n      scope.selectItem = function (item) {\n\n        scope.selectedItem = item; // seleccionamos el objeto\n\n        // Contamos los elementos completos\n        if (!item.hasOwnProperty('isCompleted')) {\n          item.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n          completedItems++;\n        }\n\n        // Fin de la actividad\n        if (completedItems === scope.items.length) {\n          scope.$root.isNextEnabled = true;\n        }\n      };\n\n      /**\n       * Devuelve los estilos personalizados de los items\n       */\n      scope.getItemStyles = function () {\n        var styles = \"\";\n\n        styles += \"width: \" + (100 / scope.items.length) + \"%;\";\n\n        return styles;\n      };\n\n    }\n  };\n});\n\n","var lizShowConceptsCharacter = angular.module('lizShowConceptsCharacter', []);\n\nlizShowConceptsCharacter.directive('showConceptsCharacter', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tinstruction: '@',\n\t\t\talt: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/show_concepts_character.html',\n\t\tlink: function (scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\tcompletedItems = 0;\n\n\t\t\tscope.videoLink = (opt.videoLink) ? opt.videoLink : false;\n\t\t\tscope.items = opt.items;\n\t\t\tscope.items2 = opt.items2;\n\t\t\tscope.selectedItem = false; // elemento seleccionado\n\n\t\t\t/**\n\t\t\t * si no hay elementos que mostrar simplemente se activa el boton adelante\n\t\t\t */\n\t\t\tif (scope.items.length === 0){\n\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\n\n\t\t\t\t// Contamos los elementos completos\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\tcompletedItems++;\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === (scope.items.length + scope.items2.length) ){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos personalizados de los items\n\t\t\t */\n\t\t\tscope.getItemStyles = function () {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tstyles += \"width: \" + (100 / 1) + \"%;\";\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t}\n\t}; \n});\n\n","var lizShowConceptsCharacters = angular.module('lizShowConceptsCharacters', []);\n\nlizShowConceptsCharacters.directive('showConceptsCharacters', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tinstruction: '@',\n\t\t\talt: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/show_concepts_characters.html',\n\t\tlink: function (scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\tcompletedItems = 0;\n\n\t\t\tscope.videoLink = (opt.videoLink) ? opt.videoLink : false;\n\t\t\tscope.items = opt.items;\n\t\t\tscope.items2 = opt.items2;\n\t\t\tscope.selectedItem = false; // elemento seleccionado\n\n\t\t\t/**\n\t\t\t * si no hay elementos que mostrar simplemente se activa el boton adelante\n\t\t\t */\n\t\t\tif (scope.items.length === 0){\n\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\n\n\t\t\t\t// Contamos los elementos completos\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\tcompletedItems++;\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === (scope.items.length + scope.items2.length) ){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos personalizados de los items\n\t\t\t */\n\t\t\tscope.getItemStyles = function () {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tstyles += \"width: \" + (100 / 1) + \"%;\";\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t}\n\t}; \n});\n\n","var lizShowConceptsGroupExamples = angular.module('lizShowConceptsGroupExamples', []);\n\nlizShowConceptsGroupExamples.directive('showConceptsGroupExamples', function  ($sce) {\n    return {\n        restrict: 'E',\n        templateUrl: '../views/concepts/show_concepts_group_examples.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\taddicon: '@'\n\t\t},\n\n\t\tlink: function (scope, element, attrs) {\n\t\t\t// Corremos la aplicación\n\t\t\tscope.groups = scope.options.groups;\n\t\t\tscope.items = [];\n\t\t\tminRightAnswers = scope.options.minRightAnswers\n\t\t\trightAnswers = 0, // Contador de preguntas buenas\n\t\t\tchances = scope.options.chances,\n\t\t\tscope.success = false;\n\t\t\tscope.failure = false;\n\t\t\tscope.block = false;\n\t\t\tscope.customClass = (scope.options.hasOwnProperty(\"customClass\")) ? scope.options.customClass : \"\"; \n\t\t\t\n\t\t\t// Recorremos todas las grupos y sus items\n\t\t\t      scope.groups.forEach(function (group) {\n\t\t\t        if(group.items){ group.items.forEach(function (item) {\n\t\t\t\t          // agregamos cada item a el array de items\n\t\t\t\t          scope.items.push({\n\t\t\t\t\t\t\t\titem: item,\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t  });\n\n\t\t\t\t        });\n\t\t\t        };\n\t\t\t      });\n\t\t\t\n\t\t\t\n\t\t\tscope.$root.isNextEnabled = true; // Activamos el siguiente vínculo\n\t\t\t\n\t\t// Para usar el html en angular\n\t\tscope.sanitize = function (item) {\n\t\t\treturn $sce.trustAsHtml(item);\n\t\t}\n\n\t\t}\n\n\t\t\n\n\n    }; \n});\n\n","var lizShowConceptsImages = angular.module('lizShowConceptsImages', []);\r\n\r\nlizShowConceptsImages.directive('showConceptsImages', [function () {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\ttemplateUrl: '../views/concepts/show_concepts_images.html',\r\n\t\tscope: {\r\n\t\t\toptions: '=',\r\n\t\t\tdescription: '@',\r\n\t\t\taudio:'@',\r\n\t\t\tinstruction: '@',\r\n\t\t\tmainimg: '@',\r\n\t\t\tmainalt: '@'\r\n\t\t},\r\n\t\tlink: function (scope, iElement, iAttrs) {\r\n\t\t\tvar opt = scope.options,\r\n\t\t\t\tcompletedItems = 0;\r\n\r\n\t\t\tscope.items = opt.items;\r\n\t\t\tconsole.log(scope.options);\r\n\t\t\tscope.selectedItem = false; // elemento seleccionado\r\n\r\n\t\t\t/**\r\n\t\t\t * Selecciona el elemento indicado\r\n\t\t\t */\r\n\t\t\t scope.selectItem = function (item) {\r\n\t\t\t \tscope.selectedItem = item; // seleccionamos el objeto\r\n\r\n\t\t\t \t// Contamos los elementos completos\r\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\r\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\r\n\t\t\t\t\tcompletedItems++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Fin de la actividad\r\n\t\t\t\tif(completedItems === scope.items.length){\r\n\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t}\r\n\t};\r\n}])","var lizShowConceptsImg = angular.module('lizShowConceptsImg', []);\r\n\r\nlizShowConceptsImg.directive('showConceptsImg', [function () {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\ttemplateUrl: '../views/concepts/show_concepts_img.html',\r\n\t\tscope: {\r\n\t\t\toptions: '=',\r\n\t\t\tdescription: '@',\r\n\t\t\taudio:'@',\r\n\t\t\tinstruction: '@',\r\n\t\t\tmainimg: '@',\r\n\t\t\tmainalt: '@',\r\n\t\t\timg:'@',\r\n\t\t\talt: '@'\r\n\t\t},\r\n\t\tlink: function (scope, iElement, iAttrs) {\r\n\t\t\tvar opt = scope.options,\r\n\t\t\t\tcompletedItems = 0;\r\n\r\n\t\t\tscope.items = opt.items;\r\n\t\t\tconsole.log(scope.options);\r\n\t\t\tscope.selectedItem = false; // elemento seleccionado\r\n\r\n\t\t\t/**\r\n\t\t\t * Selecciona el elemento indicado\r\n\t\t\t */\r\n\t\t\t scope.selectItem = function (item) {\r\n\t\t\t \tscope.selectedItem = item; // seleccionamos el objeto\r\n\r\n\t\t\t \t// Contamos los elementos completos\r\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\r\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\r\n\t\t\t\t\tcompletedItems++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Fin de la actividad\r\n\t\t\t\tif(completedItems === scope.items.length){\r\n\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t}\r\n\t};\r\n}])","var lizShowConceptsText = angular.module('lizShowConceptsText', []);\n\nlizShowConceptsText.directive('showConceptsText', function ($sce) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitletop: '@',\n\t\t\ttitleimg: '@',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tinstruction: '@',\n\t\t\tnoplay: '@',\n\t\t\tmainimg: '@',\n\t\t\timgpre: '@',\n\t\t\timgpreAlt: '@',\n\t\t\talt:'@',\n\t\t\titemsperrow: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/show_concepts_text.html',\n\t\tlink: function (scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\tcompletedItems = 0;\n\n\t\t\tscope.items = opt.items;\n\t\t\tscope.examples = opt.items.examples;\n\t\t\tscope.selectedItem = false; // elemento seleccionado\n\t\t\tscope.imgStyle = opt.imgStyle ? opt.imgStyle : '';\n\t\t\tscope.hasImageItems = scope.options.hasImageItems; // si los items son solo imagenes\n\t\t\tscope.itemsperrow2 = scope.itemsperrow ? scope.itemsperrow : 1;\n\n\t\t\tconsole.log(scope.itemsperrow);\n\n\t\t\t// Para usar el html en angular\n\t\t\tscope.sanitize = function (item) {\n\t\t\t\treturn $sce.trustAsHtml(item);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\n\n\t\t\t\t// Contamos los elementos completos\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\tcompletedItems++;\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === scope.items.length){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos personalizados de los items\n\t\t\t */\n\t\t\tscope.getItemStyles = function (item) {\n\t\t\t\tvar styles = \"\";\n\n\n\t\t\t\tif(item.hasOwnProperty('title') || scope.mainimg === undefined){\n\n\n\t\t\t\t\tstyles += \"width: \" + (100 /scope.itemsperrow2) + \"%;\";\n\t\t\t\t}\n\n\t\t\t\treturn styles;\t\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos personalizados de los items\n\t\t\t */\n\t\t\tscope.getItemStyles2 = function () {\n\t\t\t\tvar styles = scope.imgStyle;\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t}\n\t}; \n});\n\n","var lizShowdescription = angular.module('lizShowdescription', []);\n\nlizShowdescription.directive('showDescription', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitle: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/show_description.html',\n\t\tlink: function (scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\tcompletedItems = 0; // Contador usado para definir el fin de la actividad\n\n\t\t\tscope.canvas = opt.canvas;\n\t\t\tscope.audio = opt.audio;\n\t\t\tscope.instruction = opt.instruction;\n\t\t\tscope.alt = opt.alt;\n\t\t\tscope.items = opt.items;\n\t\t\tscope.selectedItem = false; // Elemento actual\n\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\n\t\t\t\tscope.selectedItem = item;\n\n\t\t\t\t// Contamos los elementos completos\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\tcompletedItems++;\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === scope.items.length){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos del item-title\n\t\t\t */\n\t\t\tscope.getItemTitleStyles = function (item) {\n\t\t\t\treturn \"width: \" + item.position.w + \"em;\" +\n\t\t\t\t\t\"top: \" + item.position.t + \"em;\" +\n\t\t\t\t\t\"left: \" + item.position.l + \"em;\"; \n\t\t\t};\n\t\t\t\n\n\t\t}\n\t}; \n});\n","var lizShowDescriptionImagesSound = angular.module('lizShowDescriptionImagesSound', []);\r\n\r\nlizShowDescriptionImagesSound.directive('showDescriptionImagesSound', [function () {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\ttemplateUrl: '../views/concepts/show_description_images_sound.html',\r\n\t\tscope: {\r\n\t\t\toptions: '=',\r\n\t\t\tdescription: '@',\r\n\t\t\taudio:'@',\r\n\t\t\tinstruction: '@',\r\n\t\t\tmainimg: '@',\r\n\t\t\tmainalt: '@'\r\n\t\t},\r\n\t\tlink: function (scope, iElement, iAttrs) {\r\n\t\t\tvar opt = scope.options,\r\n\t\t\t\tcompletedItems = 0;\r\n\r\n\t\t\tscope.items = opt.items;\r\n\t\t\tconsole.log(scope.options);\r\n\t\t\tscope.selectedItem = false; // elemento seleccionado\r\n\r\n\t\t\t/**\r\n\t\t\t * Selecciona el elemento indicado\r\n\t\t\t */\r\n\t\t\t scope.selectItem = function (item) {\r\n\t\t\t \tscope.selectedItem = item; // seleccionamos el objeto\r\n\r\n\t\t\t \t// Contamos los elementos completos\r\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\r\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\r\n\t\t\t\t\tcompletedItems++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Fin de la actividad\r\n\t\t\t\tif(completedItems === scope.items.length){\r\n\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t}\r\n\t};\r\n}])","var lizShowHoverWords = angular.module('lizShowHoverWords', []);\n\nlizShowHoverWords.directive('showHoverWords', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tinstruction: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/show_hover_words.html',\n\t\tlink: function (scope, iElement, iAttrs) {\n\t\t\tscope.items = scope.options.items;\n\t\t\tscope.$root.isNextEnabled = true;\n\n\t\t\tangular.forEach(scope.items, function (value, key) {\n\t\t\t\tvar\twords = value.text.split(\" \"),\n\t\t\t\t\tmainWords = value.mainWord.toLowerCase().split(\" \");\n\t\t\t\tvalue.words = [];\n\n\t\t\t\tif (mainWords.length > 1) {\n\t\t\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\t\t\tif (mainWords.indexOf(words[i].toLowerCase()) > -1) {\n\t\t\t\t\t\t\tvalue.words.push({\n\t\t\t\t\t\t\t\tmain: true,\n\t\t\t\t\t\t\t\ttitle: value.mainTitle,\n\t\t\t\t\t\t\t\tword: words[i]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalue.words.push({\n\t\t\t\t\t\t\t\tmain: false,\n\t\t\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\t\t\tword: words[i]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\t\t\tif (words[i].toLowerCase() === value.mainWord.toLowerCase()) {\n\t\t\t\t\t\t\tvalue.words.push({\n\t\t\t\t\t\t\t\tmain: true,\n\t\t\t\t\t\t\t\ttitle: value.mainTitle,\n\t\t\t\t\t\t\t\tword: words[i]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalue.words.push({\n\t\t\t\t\t\t\t\tmain: false,\n\t\t\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\t\t\tword: words[i]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/**\n\t\t      * Devuelve los estilos del texto.\n\t\t      */\n\t      \tscope.getTextStyles = function () {\n\t      \t\t\n\t        \tvar styles = \"\";\n\n\t        \tif(! scope.items[0].resource) {\n        \t\t  styles = \"margin-left: 0; width: 100%;\";\n\t        \t}\n\n\t        \treturn styles;\n\t      \t};\n\n\t      \tscope.onWordReady = function () {\n      \t\t\t$(\"[data-toggle='tooltip']\").tooltip();\n\t      \t};\t\n\t\t}\n\t};\n});","var lizShowImagesBlockDescription = angular.module('lizShowImagesBlockDescription', []);\n\nlizShowImagesBlockDescription.directive('showImagesBlockDescription', [function () {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/concepts/show_images_block_description.html',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\ttitle: '@',\n\t\t\tinstruction: '@',\n\t\t},\n\t\tlink: function (scope,iElement,iAttrs,$sce) {\n\t\t\tvar opt = scope.options,\n\t\t\t\tcompletedBlocks = 0;\n\n\t\t\tscope.blocks = opt.blocks;\n\t\t\tscope.selectedBlock = false; // elemento seleccionado\n\n\t\t\t// Para usar el html en angular\n\t\t\tscope.sanitize = function (item) {\n\t\t\t\treturn $sce.trustAsHtml(item);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\t scope.selectBlock = function (block) {\n\t\t\t \tconsole.log(block);\n\t\t\t \tscope.selectedBlock = block; // seleccionamos el objeto\n\n\t\t\t \t// Contamos los elementos completos\n\t\t\t\tif(!block.hasOwnProperty('isCompleted')){\n\t\t\t\t\tblock.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\tcompletedBlocks++;\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedBlocks === scope.blocks.length){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t}\n\t\t\t }\n\t\t}\n\t};\n}])","/**\n * Created by mateoquintero on 5/19/14.\n */\nvar lizShowMultipleHoverPhrase = angular.module('lizShowMultipleHoverPhrase', []);\n\nlizShowMultipleHoverPhrase.directive('showMultipleHoverPhrase', function ($sce, $log) {\n    return {\n        restrict: 'E',\n        scope: {\n            options: '=',\n            title: '@',\n            description: '@',\n            audio:'@',\n            instruction: '@'\n        },\n        templateUrl: '../views/concepts/show_multiple_hover_phrase.html',\n        link: function (scope, iElement, iAttrs) {\n            $log.log(scope);\n            scope.$root.isNextEnabled = true;\n\n            // Permite el uso de html\n            scope.sanitize = function (phrase) {\n                return $sce.trustAsHtml(phrase);\n            };\n        }\n    };\n});","var lizShowName = angular.module('lizShowName', []);\n\nlizShowName.directive('showName', function ($sce) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tinstruction: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/show_name.html',\n\t\tlink: function (scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\tcompletedItems = 0;\n\n\t\t\tscope.items = opt.items;\n\t\t\tscope.selectedItem = false; // elemento seleccionado\n\t\t\tscope.itemsPerRow = opt.itemsPerRow ? opt.itemsPerRow : false;\n\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\n\n\t\t\t\t// Contamos los elementos completos\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\tcompletedItems++;\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === scope.items.length){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Para usar el html en angular\n\t\t\tscope.sanitize = function (item) {\n\t\t\t\treturn $sce.trustAsHtml(item);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos personalizados de los items\n\t\t\t */\n\t\t\tscope.getItemStyles = function () {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tif(scope.itemsPerRow){\n\t\t\t\t\tstyles += \"width: \" + (97 / scope.itemsPerRow) + \"%;\";\n\t\t\t\t}else{\n\t\t\t\tstyles += \"width: \" + (100 / (scope.items/2)) + \"%;\";\n\t\t\t\t};\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t}\n\t}; \n});\n\n","var lizShowParts = angular.module('lizShowParts', []);\n\nlizShowParts.directive('showParts', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitle: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/show_parts.html',\n\t\tlink: function (scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\tcompletedItems = 0; // Contador usado para definir el fin de la actividad\n\n\t\t\tscope.canvas = opt.canvas;\n\t\t\tscope.alt = opt.alt;\n\t\t\tscope.items = opt.items;\n\t\t\tscope.selectedItem = false; // Elemento actual\n\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\n\t\t\t\tscope.selectedItem = item;\n\n\t\t\t\t// Contamos los elementos completos\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\tcompletedItems++;\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === scope.items.length){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos del item-title\n\t\t\t */\n\t\t\tscope.getItemTitleStyles = function (item) {\n\t\t\t\treturn \"width: \" + item.position.w + \"em;\" +\n\t\t\t\t\t\"top: \" + item.position.t + \"em;\" +\n\t\t\t\t\t\"left: \" + item.position.l + \"em;\"; \n\t\t\t};\n\t\t\t\n\n\t\t}\n\t}; \n});\n","var lizShowTextCharacter = angular.module('lizShowTextCharacter', []);\n\nlizShowTextCharacter.directive('showTextCharacter', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tinstruction: '@',\n\t\t\talt: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/show_text_character.html',\n\t\tlink: function (scope, element, attrs) {\n\n\t\t\tvar opt = scope.options,\n\t\t\t\tcompletedItems = 0;\n\t\t\t\t\n\t\t\tscope.items = opt.items;\n\t\t\tscope.itemsPerRow = opt.itemsPerRow ? opt.itemsPerRow : 1;\n\t\t\tscope.imgStyle = opt.imgStyle ? opt.imgStyle : false;\n\t\t\tscope.selectedItem = false; // elemento seleccionado\n\t\t\tscope.itemsStyle = opt.itemsStyle\n\n\t\t\tconsole.log(scope.itemsPerRow);\n\n\t\t\t/**\n\t\t\t * si no hay elementos que mostrar simplemente se activa el boton adelante\n\t\t\t */\n\t\t\tif (scope.items.length === 0){\n\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * si no hay elementos que escuchar simplemente se activa el boton adelante\n\t\t\t */\n\t\t\tif(!scope.items.src){\n\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t}\n\t\t\t/**\n\t\t\t * Selecciona el elemento indicado\n\t\t\t */\n\t\t\tscope.selectItem = function (item) {\n\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\n\n\t\t\t\t// Contamos los elementos completos\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\n\t\t\t\t\tcompletedItems++;\n\t\t\t\t}\n\n\t\t\t\t// Fin de la actividad\n\t\t\t\tif(completedItems === (scope.items.length + scope.items2.length) ){\n\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos personalizados de los items\n\t\t\t */\n\t\t\tscope.getItemStyles = function () {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tstyles += \"width: \" + (100 / scope.itemsPerRow) + \"%;\";\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t}\n\t}; \n});\n\n","var lizSlideShowCharacter = angular.module('lizSlideShowCharacter', []);\n\nlizSlideShowCharacter.directive('slideShowCharacter', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\tinstruction: '@',\n\t\t\tmainimg: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/slideshow_character.html',\n\t\tlink: function (scope, element, attrs) {\n\t\t\tvar opt = scope.options;\n\n\t\t\tscope.items = opt.items;\n\t\t\tscope.ext = opt.ext ? opt.ext : '.png';\n\t\t\tscope.customClass = opt.customClass;\n\n\t\t\t/**\n\t\t\t * Devuelve los estilos personalizados de los items\n\t\t\t */\n\t\t\tscope.getItemStyles = function () {\n\t\t\t\tvar styles = \"\";\n\n\t\t\t\tstyles += \"width: \" + (100 / 1) + \"%;\";\n\n\t\t\t\treturn styles;\n\t\t\t};\n\n\t\t}\n\t}; \n});\n\nlizSlideShowCharacter.directive('slides', function($timeout){\n\treturn {\n\t    restrict: 'A',\n\t\t\tscope: {\n\t\t\t\titems: '='\n\t\t\t},\n\t    link : function (scope, element, attrs) {\n\t\t\t\t$timeout(function(){\n\t\t\t\t\t$(element).slidesjs({\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 550,\n\t\t\t\t\t\tnavigation: {\n\t\t\t\t\t\t\tactive: true,\n\t\t\t\t\t\t\t// [boolean] Generates next and previous buttons.\n\t\t\t\t\t\t\t// You can set to false and use your own buttons.\n\t\t\t\t\t\t\t// User defined buttons must have the following:\n\t\t\t\t\t\t\t// previous button: class=\"slidesjs-previous slidesjs-navigation\"\n\t\t\t\t\t\t\t// next button: class=\"slidesjs-next slidesjs-navigation\"\n\t\t\t\t\t\t\teffect: \"slide\"\n\t\t\t\t\t\t\t// [string] Can be either \"slide\" or \"fade\".\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpagination: {\n\t\t\t\t\t\t\tactive: false,\n\t\t\t\t\t\t\t// [boolean] Create pagination items.\n\t\t\t\t\t\t\t// You cannot use your own pagination. Sorry.\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback: {\n\t\t\t\t\t\t\tcomplete: function (number) {\n\t\t\t\t\t\t\t\t// Activa el siguiente cuando llega a la última diapositiva\n\t\t\t\t\t\t\t\tif(number === scope.items.length) {\n\t\t\t\t\t\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t\t\t\t\t\t\tscope.$apply();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n    \t}\n\t};\n});\n","var lizTable = angular.module('lizTable', []);\n\nlizTable.directive('tableConcept', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/concepts/table.html',\n\t\tscope: {\n\t\t\toptions: \"=\",\n\t\t\ttitle: '@',\n\t\t\taudio: '@',\n\t\t\tinstruction: '@',\n\t\t\tdescription: '@',\n\t\t\tbuttonText: '@'\n\t\t},\n\t\tlink: function (scope) {\n\n\t\t\tvar opt = scope.options;\n\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\n\t\t\tscope.isBottom = scope.title || scope.description;\n\n\t\t\tscope.head = opt.head;\n\t\t\tscope.body = opt.body;\n\t\t\tscope.buttonText = scope.buttonText;\n\n\t\t\tscope.$root.isNextEnabled = true;\n\n\t\t}\n\t};\n});\n","var lizText1 = angular.module('lizText1', []);\n\nlizText1.directive('text1', function ($sce) {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/concepts/text1.html',\n\t\tscope: {\n\t\t\tdescriptionTop: '@',\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\taudio:'@',\n\t\t\timg: '@',\n\t\t\ttitletop: '@',\n\t\t\ttitlemain:'@',\n\t\t\timgTitle: '@',\n\t\t\talt: '@',\n\t\t\tclick:'@',\n\t\t\tblock: \"@\",\n\t\t\tfloat: '@'\n\t\t},\n\n\t\tlink: function (scope) {\n\t\t\tscope.$root.isNextEnabled = true;\n\n\t\t// Para usar el html en angular\n\t\tscope.sanitize = function (item) {\n\t\t\treturn $sce.trustAsHtml(item);\n\t\t}\n\n\t\t}\n\t};\n});\n","var lizTransclusion = angular.module('lizTransclusion', []);\n\nlizTransclusion.directive('transclusion', function ($sce) {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/concepts/transclusion.html',\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\tinstruction: '@',\n\t\t\taudio: '@',\n\t\t\tarrow: '=',\n\t\t\taddicon: '@',\n      \t\tmouse: '='\n\t\t},\n\n\t\tlink: function (scope) {\n\n\t\t\t// Para usar el html en angular\n\t\t\tscope.sanitize = function (item) {\n\t\t\t\treturn $sce.trustAsHtml(item);\n\t\t\t}\n\n\t\t}\n\t};\n});\n","var lizTransclusions = angular.module('lizTransclusions', []);\n\nlizTransclusions.directive('transclusions', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/concepts/transclusions.html',\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\tinstruction: '@',\n\t\t\taudio: '@',\n\t\t\tarrow: '=',\n\t\t\taddicon: '@',\n      \t\tmouse: '='\n\t\t}\n\t};\n   \n});\n","var lizTwoFramesDescription = angular.module('lizTwoFramesDescription', []);\r\n\r\nlizTwoFramesDescription.directive('twoFramesDescription', function ($timeout) {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\tscope: {\r\n\t\t\toptions: '=',\r\n\t\t\ttitle: '@',\r\n\t\t\tdescription: '@',\r\n\t\t\taudio:'@',\r\n\t\t\tinstruction: '@'\r\n\t\t},\r\n\t\ttemplateUrl: '../views/concepts/two_frames_description.html',\r\n\t\tlink: function (scope, element, attrs) {\r\n\t\t\tvar opt = scope.options,\r\n\t\t\t\tcompletedItems = 0;\r\n\r\n\t\t\tscope.items = opt.items;\r\n\t\t\tscope.selectedItem = false; // elemento seleccionado\r\n\r\n\t\t\t/**\r\n\t\t\t * Selecciona el elemento indicado\r\n\t\t\t */\r\n\t\t\tscope.selectItem = function (item) {\r\n\t\t\t\tscope.selectedItem = item; // seleccionamos el objeto\r\n\r\n\t\t\t\t// Contamos los elementos completos\r\n\t\t\t\tif(!item.hasOwnProperty('isCompleted')){\r\n\t\t\t\t\titem.isCompleted = true; // marcamos el elemento, para no volver a seleccionarlo\r\n\t\t\t\t\tcompletedItems++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Fin de la actividad\r\n\t\t\t\tif(completedItems === scope.items.length){\r\n\t\t\t\t\tscope.$root.isNextEnabled = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Captura el alto de text-block\r\n\t\t\t\t$timeout(function(){\r\n\t\t\t\t\tvar $textBlock = element.find('.text-box'),\r\n\t\t\t\t\t\t$mainImg = element.find('.main-img-inner');\r\n\r\n\t\t\t\t\t$mainImg.height( $textBlock.height() - ( parseInt($mainImg.css('border-width')) * 2 ) );\r\n\t\t\t\t}, 100);\r\n\t\t\t};\r\n\r\n\r\n\t\t}\r\n\t}; \r\n});\r\n\r\n","var lizWatch = angular.module('lizWatch', []);\n\nlizWatch.directive('watch', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: '../views/concepts/watch.html',\n\t\tscope: {\n\t\t\toptions: \"=\",\n\t\t\ttitle: '@',\n\t\t\tdescription: '@',\n\t\t\tinstruction: '@',\n\t\t\taudio:'@'\n\t\t},\n\t\tlink: function (scope, element, attrs) {\n\t\t\tscope.items = scope.options; // Elementos a mostrar\n\t\t\tscope.$root.isNextEnabled = true; // Activamos el botón de siguiente\n\t\t}\n\t};\n});\n","var lizZoom = angular.module('lizZoom', []);\n\nlizZoom.directive('zoom', function  () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\toptions: '=',\n\t\t\ttitle: '@',\n\t\t\tinstruction: '@',\n\t\t\taudio: '@',\n\t\t\timg: '@',\n\t\t\tbigImg: '@',\n\t\t\talt: '@',\n\t\t\tdescription: '@'\n\t\t},\n\t\ttemplateUrl: '../views/concepts/zoom.html',\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\tvar opt = scope.options;\n\n\t\t\t\t\t\t\t\n\t\t\t// Si la descripción o el título están, entonces la instrucción va al fondo\n\t\t\tscope.isBottom = scope.title || scope.description;\n\n\t\t\tscope.mainimgstyles = opt.mainimgstyles;\n\t\t\tscope.items = opt.items;\n\t\t\t\n\t\t\tscope.showBig = false;\n\n\t\t\t/**\n\t\t\t * Cierra el zoom y completa la actividad\n\t\t\t */\n\t\t\tscope.complete = function () {\n\t\t\t\tscope.showBig = false;\n\t\t\t\tscope.$root.isNextEnabled = true;\n\t\t\t};\n\t\t\t\n\t\t}\n\t}; \n});\n","var directives = angular.module('directives', []);\n\n\n// ======================================================================================\n// Bases para la aplicación\n// ======================================================================================\n\n// Directiva de felicitaciones\ndirectives.directive('congratulations', function () {\n\treturn {\n\t\trestrict: 'A',\n\t\ttemplateUrl: '../views/common/congratulations.html'\n\t};\n});\n\n// Directiva de vuelve a intentarlo\ndirectives.directive('failure', function () {\n\treturn {\n\t\trestrict: 'A',\n\t\ttemplateUrl: '../views/common/failure.html',\n\t\tcontroller: function ($scope, $route) {\n\t\t\t$scope.refresh = function () {\n\t\t\t\t$route.reload();\n\t\t\t}\n\t\t}\n\t};\n});\n\n// Competencias\ndirectives.directive('competences', function () {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\tdescription1: '@',\n\t\t\tdescription2: '@'\n\t\t},\n\t\ttemplateUrl: '../views/common/competences.html',\n\t\tlink: function (scope, element, attrs) {\n\t\t\tscope.$root.isNextEnabled = true;\n\t\t}\n\t};\n});\n\n// Show Tooltip\ndirectives.directive('showTooltip', function () {\n\treturn {\n\t\trestrict: 'C',\n\t\tlink: function (scope, iElement, iAttrs) {\n\t\t\t$(iElement).tooltip({\n\t\t\t\ttitle: scope.word.title\n\t\t\t});\n\t\t}\n\t};\n});\n\n// Show Tooltip Attribute\ndirectives.directive('showTooltip', function () {\n\treturn {\n\t\trestrict: 'A',\n\t\tlink: function (scope, iElement, iAttrs) {\n\t\t\tvar title = scope.$parent.group.titles[scope.$index];\n\t\t\t$(iElement).tooltip({\n\t\t\t\ttitle: title,\n\t\t\t\tplacement: \"bottom\"\n\t\t\t});\n\t\t}\n\t};\n});\n\n// Image zoom\ndirectives.directive('ngElevateZoom', function () {\n\treturn {\n\t\trestrict: 'A',\n\t\tlink: function (scope, iElement, iAttrs) {\n\t\t\t//Will watch for changes on the attribute\n\t\t    iAttrs.$observe('zoomImage',function(){\n\t\t    \tlinkElevateZoom();\n\t\t    });\n\t\t      \n\t\t    function linkElevateZoom(){\n\t\t    \t//Check if its not empty\n\t\t        if (!iAttrs.zoomImage) return;\n\t\t        iElement.attr('data-zoom-image',iAttrs.zoomImage);\n\t\t        $(iElement).elevateZoom();\n\t\t    }\n\t\t      \n\t\t    linkElevateZoom();\n\t\t}\n\t};\n});\n\n// Image popup\ndirectives.directive('ngImagePopup', function () {\n\treturn {\n\t\trestrict: 'A',\n\t\tlink: function (scope, iElement, iAttrs) {\n\t\t\tconsole.log(arguments);\n\t\t\t$(iElement).magnificPopup({\n\t\t\t\titems: {\n\t\t\t\t\tsrc: scope.$root.resources + \"/\" + scope.modalSrc\n\t\t\t\t},\n\t\t\t\ttype: \"image\"\n\t\t\t});\n\t\t}\n\t};\n});\n\n\n// ======================================================================================\n// Útiles\n// ======================================================================================\n\n// Reproduce un sonido en el evento definido en la directiva. Ejm: hover => mouseenter\ndirectives.directive('play', function () {\n\treturn function (scope, element, attrs) {\n\t\telement.bind(attrs.on, function () {\n\t\t\tvar sound = $('#' + attrs.play)[0];\n\n\t\t\tsound.load();\n\t\t\tsound.play();\n\t\t});\n\t}\n});\n\n// Crea un pequeño fade in del elemento cuando se cambia el valor del modelo\ndirectives.directive('flash', function () {\n\treturn {\n\t\trestrict: 'A',\n\t\tscope: {\n\t\t\tflash: '=flash'\n\t\t},\n\t\tlink: function (scope, element, attrs) {\n\t\t\tscope.$watch('flash', function (flash) {\n\t\t\t\tif(flash){\n\t\t\t\t\t$(element).stop().hide().text(flash).fadeIn(function() {\n\t\t\t\t\t\tclearTimeout($(element).data(\"timeout\"));\n\t\t\t\t\t\t$(element).data(\"timeout\", setTimeout(function() {\n\t\t\t\t\t\t\t$(element).fadeOut();\n\t\t\t\t\t\t}, 1000));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n});\n\n","var appManager = AppManager();\nvar esp101 = angular.module('esp101', ['activities']);\n\nappManager.configModule(esp101, {\n\tresources: '../resources/01/esp/01',\n\tfarewell: '¡Excelente amiguito, ya conoces la letra t!',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia español lección N° 1”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados.',\n\tcompetences1:'Produzco textos escritos que responden a diversas necesidades comunicativas.',\n\tcompetences2:'Identifica las letras del abecedario relacionándolas a imágenes que comienzan por ellas.',\n\troutes: [\n\t\t{ \n\t\t\tname: '/aprendo-la-letra-t', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle:\"Lección 1: Aprendo la letra t\"\n\t\t},\n\t\t{ \n\t\t\tname: '/aprendo-la-letra-t-2',\n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle:\"Lección 1: Aprendo la letra c\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle:\"Actividad 1 | Lección 1\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle:\"Actividad 2 | Lección 1\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle:\"Actividad 3 | Lección 1\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle:\"Actividad 4 | Lección 1\",\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle:\"Actividad 5 | Lección 1\",\n\t\t}\n\t]\n\t\n});\n\nesp101.controller('Con1Ctrl', function($scope){\n\t$scope.test = 'hola mundo';\n});\n\nesp101.controller('Con2Ctrl', function($scope){\n\t$scope.data = [\n\t\t{\n\t\t\tresource: 'taza',\n\t\t\ttext: '<strong>T</strong>aza'\n\t\t},\n\t\t{\n\t\t\tresource: 'tela',\n\t\t\ttext: '<strong>T</strong>ela'\n\t\t},\n\t\t{\n\t\t\tresource: 'topo',\n\t\t\ttext: '<strong>T</strong>opo'\n\t\t}\n\t];\n});\n\nesp101.controller('Act1Ctrl', function($scope){\n\t$scope.data = {\n\t\titems: [\n\t\t\t{ letter: 'c', answer: false },\n\t\t\t{ letter: 'T', answer: true },\n\t\t\t{ letter: 'd', answer: false },\n\t\t\t{ letter: 't', answer: true },\n\t\t\t{ letter: 'i', answer: false }\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 2\n\t};\n});\n\nesp101.controller('Act2Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tsil: '<strong>t</strong>a',\n\t\t\ttext: \"<strong>t</strong>aza\",\n\t\t\tresource: \"taza\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>t</strong>e',\n\t\t\ttext: \"<strong>t</strong>ela\",\n\t\t\tresource: \"tela\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>t</strong>i',\n\t\t\ttext: \"<strong>t</strong>ijeras\",\n\t\t\tresource: \"tijera\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>t</strong>o',\n\t\t\ttext: \"<strong>t</strong>opo\",\n\t\t\tresource: \"topo\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>t</strong>u',\n\t\t\ttext: \"<strong>t</strong>ucán\",\n\t\t\tresource: \"tucan\"\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\tdata: $scope.items,\n\t\tminRightAnswers: 1,\n\t\trandomItems: true,\n\t\trandomTargets: true\n\t};\n});\n\nesp101.controller('Act4Ctrl', function($scope){\n\t$scope.inputs = [\"ta\", \"te\", \"ti\", \"to\", \"tu\"]; \n});\n\nesp101.controller('Act5Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tname: \"televisor\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"televisor\"\n\t\t},\n\t\t{\n\t\t\tname: \"tubo\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"tubo\"\n\t\t},\n\t\t{\n\t\t\tname: \"tomate\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"tomate\"\n\t\t},\n\t\t{\n\t\t\tname: \"tacones\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"tacones\"\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\titems: $scope.items,\n\t\tchances: 8,\n\t\tminRightAnswers: 5\n\t};\n});\n","var appManager = AppManager();\nvar esp102 = angular.module('esp102', ['activities']);\n\nappManager.configModule(esp102, {\n\tresources: '../resources/01/esp/02',\n\tfarewell: '¡Excelente amiguito, ya conoces los medios de comunicación!',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia español lección N° 2”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados.',\n\tcompetences1:'Reconozco los medios de comunicación masiva y caracterizo la información que difunden.',\n\tcompetences2:'Identifico los diversos medios de comunicación masiva con los que interactúo.',\n\troutes: [\n\t\t\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Lección 2: Los medios de comunicación'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Lección 2: Los medios de comunicación'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1 | Lección 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle:\"Actividad 2 | Lección 2\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2-2', \n\t\t\ttemplateUrl: 'act2_2', \n\t\t\tcontroller: 'Act2_2Ctrl',\n\t\t\ttitle:\"Actividad 2 | Lección 2\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3 | Lección 2'\n\t\t}\n\t]\n\t\n});\n\nesp102.controller('Con1Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ resource: \"radio\" },\n\t\t{ resource: \"television\" },\n\t\t{ resource: \"periodico\" }\n\t]\n});\n\nesp102.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ resource: \"computador\" },\n\t\t{ resource: \"telefono\" },\n\t\t{ resource: \"carta\" }\n\t]\n});\nesp102.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tresource: \"radio\",\n\t\t\t\talt: \"Una niña hablando con un niño, pidiéndole un favor\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"periodico\",\n\t\t\t\talt: \"Niña moviendo su mano, saludando\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"telefono\",\n\t\t\t\talt: \"Niña compartiendo un dulce con un niño\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"television\",\n\t\t\t\talt: \"Niño y niña dándose la mano en señal de agradecimiento\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"computador\",\n\t\t\t\talt: \"Niña compartiendo un dulce con un niño\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"carta\",\n\t\t\t\talt: \"Niño y niña dándose la mano en señal de agradecimiento\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3\n\t};\n});\nesp102.controller('Act2Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tsrc1: \"telefono\",\n\t\t\tsrc2: \"hablar-por-telefono\",\n\t\t\talt2: \"niño hablando por teléfono\"\n\t\t},\n\t\t{\n\t\t\tsrc1: \"computador\",\n\t\t\tsrc2: \"usar-computador\",\n\t\t\talt2: \"Niño escribiendo en su computador\"\n\t\t},\n\t\t{\n\t\t\tsrc1: \"carta\",\n\t\t\tsrc2: \"escribir-carta\",\n\t\t\talt2: \"niño escribiendo una carta\"\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\tdata: $scope.items,\n\t\tminRightAnswers: 2,\n\t\trandomItems: true,\n\t\trandomTargets: true\n\t};\n});\nesp102.controller('Act2_2Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tsrc1: \"radio\",\n\t\t\tsrc2: \"oir-radio\",\n\t\t\talt2: \"Señor escuchando radio mediante audífonos.\"\n\t\t},\n\t\t{\n\t\t\tsrc1: \"periodico\",\n\t\t\tsrc2: \"Leer-periodico\",\n\t\t\talt2: \"Niño leyendo el periódico\"\n\t\t},\n\t\t{\n\t\t\tsrc1: \"television\",\n\t\t\tsrc2: \"ver-tv\",\n\t\t\talt2: \"Dos niñas viendo televisión \"\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\tdata: $scope.items,\n\t\tminRightAnswers: 2,\n\t\trandomItems: true,\n\t\trandomTargets: true\n\t};\n});\nesp102.controller('Act3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: 'television',\n\t\t\t\talt: 'televisión',\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'telefono',\n\t\t\t\talt: 'teléfono',\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'computador',\n\t\t\t\talt: 'computador',\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'carta',\n\t\t\t\talt: 'carta',\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'radio',\n\t\t\t\talt: 'radio',\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'periodico',\n\t\t\t\talt: 'periódico',\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 1,\n\t\tactivateAfter: 2\n\t};\n});\n","var appManager = AppManager();\nvar esp103 = angular.module('esp103', ['activities']);\n\nappManager.configModule(esp103, {\n\tresources: '../resources/01/esp/03',\n\tfarewell: '¡Excelente amiguito, ya conoces la letra n!',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia español lección N° 3”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados.',\n\tcompetences1:'Produzco textos escritos que responden a diversas necesidades comunicativas.',\n\tcompetences2:'Identifica las letras del abecedario relacionándolas a imágenes que comienzan por ellas.',\n\troutes: [\n\t\t\n\t\t{ \n\t\t\tname: '/aprendo-la-letra-n', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle:\"Lección 3: Aprendo la letra n\"\n\t\t},\n\t\t{ \n\t\t\tname: '/aprendo-la-letra-n-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle:\"Lección 3: Aprendo la letra n\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle:\"Actividad 1 | Lección 3\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle:\"Actividad 2 | Lección 3\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle:\"Actividad 3 | Lección 3\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle:\"Actividad 4 | Lección 3\",\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle:\"Actividad 5 | Lección 3\",\n\t\t}\n\t]\n\t\n});\n\nesp103.controller('Con1Ctrl', function($scope){\n\t$scope.test = 'hola mundo';\n});\n\nesp103.controller('Con2Ctrl', function($scope){\n\t$scope.data = [\n\t\t{\n\t\t\tresource: 'nino',\n\t\t\ttext: '<strong>N</strong>iño'\n\t\t},\n\t\t{\n\t\t\tresource: 'nido',\n\t\t\ttext: '<strong>N</strong>ido'\n\t\t},\n\t\t{\n\t\t\tresource: 'nudo',\n\t\t\ttext: '<strong>N</strong>udo'\n\t\t}\n\t];\n});\n\nesp103.controller('Act1Ctrl', function($scope){\n\t$scope.data = {\n\t\titems: [\n\t\t\t{ letter: 'a', answer: false },\n\t\t\t{ letter: 'm', answer: false },\n\t\t\t{ letter: 'N', answer: true },\n\t\t\t{ letter: 's', answer: false },\n\t\t\t{ letter: 'n', answer: true }\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 2\n\t};\n});\n\nesp103.controller('Act2Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tsil: '<strong>n</strong>a',\n\t\t\ttext: \"<strong>n</strong>aranja\",\n\t\t\tresource: \"naranja\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>n</strong>e',\n\t\t\ttext: \"<strong>n</strong>evera\",\n\t\t\tresource: \"nevera\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>n</strong>i',\n\t\t\ttext: \"<strong>n</strong>iño\",\n\t\t\tresource: \"nino\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>n</strong>o',\n\t\t\ttext: \"<strong>n</strong>ota\",\n\t\t\tresource: \"nota\"\n\t\t\t\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>n</strong>u',\n\t\t\ttext: \"<strong>n</strong>ube\",\n\t\t\tresource: \"nube\"\n\t\t\t\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\tdata: $scope.items,\n\t\tminRightAnswers: 1,\n\t\trandomItems: true,\n\t\trandomTargets: true\n\t};\n});\n\nesp103.controller('Act4Ctrl', function($scope){\n\t$scope.inputs = [\"na\", \"ne\", \"ni\", \"no\", \"nu\"]; \n});\n\nesp103.controller('Act5Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tname: \"nevera\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"nevera\"\n\t\t},\n\t\t{\n\t\t\tname: \"naranja\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"naranja\"\n\t\t},\n\t\t{\n\t\t\tname: \"niña\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"niña\"\n\t\t},\n\t\t{\n\t\t\tname: \"nueces\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"nueces\"\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\titems: $scope.items,\n\t\tchances: 8,\n\t\tminRightAnswers: 5\n\t};\n});\n","// ===========================================================================\n// Importante: Este módulo pertenece a la primera guía de español de primero\n// ===========================================================================\nvar appManager = AppManager();\nvar esp103_ = angular.module('esp103_', ['activities']);\n\nappManager.configModule(esp103_, {\n  resources: '../resources/01/esp/03_/',\n  farewell: 'Muy bien amiguito, ahora ya conoces el alfabeto.',\n  routes: [\n    {\n      name: '/conceptualizacion-1',\n      templateUrl: 'con1',\n      controller: 'Con1Ctrl',\n      title:\"Actividad 1 | Lección 3\"\n    },\n    { \n      name: '/actividad-1', \n      templateUrl: 'act1', \n      controller: 'Act1Ctrl',\n      title:\"Actividad 1 | Lección 3\"\n    },\n    { \n      name: '/actividad-2', \n      templateUrl: 'act2', \n      controller: 'Act2Ctrl',\n      title:\"Actividad 2 | Lección 3\"\n    },\n    { \n      name: '/actividad-3-1',\n      templateUrl: 'act3',\n      controller: 'Act3-1Ctrl',\n      title:\"Actividad 3 | Lección 3\"\n    },\n    {\n      name: '/actividad-3-2',\n      templateUrl: 'act3',\n      controller: 'Act3-2Ctrl',\n      title:\"Actividad 3 | Lección 3\"\n    },\n    {\n      name: '/actividad-3-3',\n      templateUrl: 'act3',\n      controller: 'Act3-3Ctrl',\n      title:\"Actividad 3 | Lección 3\"\n    },\n    {\n      name: '/actividad-3-4',\n      templateUrl: 'act3',\n      controller: 'Act3-4Ctrl',\n      title:\"Actividad 3 | Lección 3\"\n    },\n    {\n      name: '/actividad-3-5',\n      templateUrl: 'act3',\n      controller: 'Act3-5Ctrl',\n      title:\"Actividad 3 | Lección 3\"\n    },\n    {\n      name: '/actividad-3-6',\n      templateUrl: 'act3',\n      controller: 'Act3-6Ctrl',\n      title:\"Actividad 3 | Lección 3\"\n    },\n    {\n      name: '/actividad-3-7',\n      templateUrl: 'act3',\n      controller: 'Act3-7Ctrl',\n      title:\"Actividad 3 | Lección 3\"\n    },\n    {\n      name: '/actividad-4-1',\n      templateUrl: 'act4', \n      controller: 'Act4-1Ctrl',\n      title:\"Actividad 4 | Lección 3\",\n    },\n    {\n      name: '/actividad-4-2',\n      templateUrl: 'act4',\n      controller: 'Act4-2Ctrl',\n      title:\"Actividad 4 | Lección 3\",\n    },\n    {\n      name: '/actividad-4-3',\n      templateUrl: 'act4',\n      controller: 'Act4-3Ctrl',\n      title:\"Actividad 4 | Lección 3\",\n    }\n  ]\n  \n});\n\nesp103_.controller('Con1Ctrl', function($scope){\n  $scope.activateNext = function () {\n    $scope.$root.isNextEnabled = true;\n  };\n});\n\nesp103_.controller('Act1Ctrl', function($scope, $sce){\n  var regex = null, // Regex auxiliary variable\n    completedLetters = 0; // Contador\n\n  $scope.letters = [\n    {\n      letter: \"a\",\n      name: \"a\",\n      title: \"avión\"\n    },\n    {\n      letter: \"b\",\n      name: \"be\",\n      title: \"balón\"\n    },\n    {\n      letter: \"c\",\n      name: \"ce\",\n      title: \"casa\"\n    },\n    {\n      letter: \"d\",\n      name: \"de\",\n      title: \"dado\"\n    },\n    {\n      letter: \"e\",\n      name: \"e\",\n      title: \"elefante\"\n    },\n    {\n      letter: \"f\",\n      name: \"efe\",\n      title: \"flor\"\n    },\n    {\n      letter: \"g\",\n      name: \"ge\",\n      title: \"gato\"\n    },\n    {\n      letter: \"h\",\n      name: \"hache\",\n      title: \"hoja\"\n    },\n    {\n      letter: \"i\",\n      name: \"i\",\n      title: \"iglesia\"\n    },\n    {\n      letter: \"j\",\n      name: \"jota\",\n      title: \"jugo\"\n    },\n    {\n      letter: \"k\",\n      name: \"ka\",\n      title: \"kiosco\"\n    },\n    {\n      letter: \"l\",\n      name: \"ele\",\n      title: \"limón\"\n    },\n    {\n      letter: \"m\",\n      name: \"eme\",\n      title: \"manzana\"\n    },\n    {\n      letter: \"n\",\n      name: \"ene\",\n      title: \"naranja\"\n    },\n    {\n      letter: \"ñ\",\n      name: \"eñe\",\n      title: \"ñandú\"\n    },\n    {\n      letter: \"o\",\n      name: \"o\",\n      title: \"olla\"\n    },\n    {\n      letter: \"p\",\n      name: \"pe\",\n      title: \"paleta\"\n    },\n    {\n      letter: \"q\",\n      name: \"cu\",\n      title: \"queso\"\n    },\n    {\n      letter: \"r\",\n      name: \"ere\",\n      title: \"ratón\"\n    },\n    {\n      letter: \"s\",\n      name: \"ese\",\n      title: \"silla\"\n    },\n    {\n      letter: \"t\",\n      name: \"te\",\n      title: \"tomate\"\n    },\n    {\n      letter: \"u\",\n      name: \"u\",\n      title: \"uvas\"\n    },\n    {\n      letter: \"v\",\n      name: \"ve\",\n      title: \"vaca\"\n    },\n    {\n      letter: \"w\",\n      name: \"ve doble\",\n      title: \"wilson\"\n    },\n    {\n      letter: \"x\",\n      name: \"equis\",\n      title: \"xilófono\"\n    },\n    {\n      letter: \"y\",\n      name: \"ye\",\n      title: \"yate\"\n    },\n    {\n      letter: \"z\",\n      name: \"zeta\",\n      title: \"zanahoria\"\n    }\n  ];\n\n  $scope.selectedLetter = false; // Letra seleccionada en cada momento\n\n  // Añadimos la propiedad src a cada una\n  $scope.letters.forEach(function (l) {\n    // Recurso de la imagen\n    if(l.letter !== 'ñ') l.src = l.letter;\n    else l.src = 'n_'; // para la ñ\n\n    regex = new RegExp(l.letter, \"g\");\n\n    // Modifica el título en base a la letra, añadiendo strong\n    l.title = l.title.replace(regex, '<strong>' + l.letter + '</strong>')\n  });\n\n\n  /**\n   * Remueve la letra al dar click.\n   * @param letter\n   */\n  $scope.remove = function (letter) {\n    $scope.selectedLetter = letter; // selecciona la letra\n    letter.hide = true; // oculta\n\n    completedLetters += 1;\n\n    // Fin de la actividad\n    if(completedLetters === $scope.letters.length) {\n      $scope.$root.isNextEnabled = true;\n      $scope.success = true;\n    }\n  };\n\n  /**\n   * filtra el html antes de usarlo de forma segura.\n   */\n  $scope.sanitize = function (str) {\n    return $sce.trustAsHtml(str);\n  };\n\n});\n\nesp103_.controller('Act2Ctrl', function($scope){\n  $scope.data = {\n    items: [\n      { letter: 'a' },\n      { letter: 'h' },\n      { letter: 'c' },\n      { letter: 'd' },\n      { letter: 'e' },\n      { letter: 'f' },\n      { letter: 'o' },\n      { letter: 'i' },\n      { letter: 'u' }\n    ],\n    itemTemplate: '<div style=\"font-size: 65px; width: 70px; cursor: move; text-align:center;\">{{ item.letter }}</div>',\n    showIf: \"letter\",\n    targets: 5,\n    chances: 6,\n    minRightAnswers: 3,\n    pass: function (target) {\n      return \"aeiou\".search(target.letter) >= 0;\n    }\n  };\n});\n\nesp103_.controller('Act3-1Ctrl', function($scope){\n  $scope.items = [\n    {\n      name: \"avión\",\n      letter: \"a\"\n    },\n    {\n      name: \"balón\",\n      letter: \"b\"\n    },\n    {\n      name: \"casa\",\n      letter: \"c\"\n    },\n    {\n      name: \"dado\",\n      letter: \"d\"\n    }\n  ];\n\n  $scope.items.forEach(function (item) {\n    item.src = item.letter;\n  });\n\n  $scope.description = \"Las letras del abecedario pueden escribirse de diferentes formas y tamaños, pero su nombre nunca cambia. Arrastra el objeto hacia el cuadro que contiene la letra con la cual comienza su nombre.\";\n\n  $scope.data = {\n    data: $scope.items,\n    chances: 8,\n    minRightAnswers: 3,\n    randomItems: true,\n    randomTargets: true,\n    padding: false,\n    border: false\n  };\n});\n\nesp103_.controller('Act3-2Ctrl', function($scope){\n  $scope.items = [\n    {\n      name: \"elefante\",\n      letter: \"e\"\n    },\n    {\n      name: \"flor\",\n      letter: \"f\"\n    },\n    {\n      name: \"gato\",\n      letter: \"g\"\n    },\n    {\n      name: \"hoja\",\n      letter: \"h\"\n    }\n  ];\n\n  $scope.items.forEach(function (item) {\n    item.src = item.letter;\n  });\n\n  $scope.description = \"Arrastra el objeto hacia el cuadro que contiene la letra con la cual comienza su nombre.\";\n\n  $scope.data = {\n    data: $scope.items,\n    chances: 8,\n    minRightAnswers: 3,\n    randomItems: true,\n    randomTargets: true,\n    padding: false,\n    border: false\n  };\n});\n\nesp103_.controller('Act3-3Ctrl', function($scope){\n  $scope.items = [\n    {\n      name: \"iglesia\",\n      letter: \"i\"\n    },\n    {\n      name: \"jugo\",\n      letter: \"j\"\n    },\n    {\n      name: \"limón\",\n      letter: \"l\"\n    },\n    {\n      name: \"kiosco\",\n      letter: \"k\"\n    }\n  ];\n\n  $scope.items.forEach(function (item) {\n    item.src = item.letter;\n  });\n\n  $scope.description = \"Arrastra el objeto hacia el cuadro que contiene la letra con la cual comienza su nombre.\";\n\n  $scope.data = {\n    data: $scope.items,\n    chances: 8,\n    minRightAnswers: 3,\n    randomItems: true,\n    randomTargets: true,\n    padding: false,\n    border: false\n  };\n});\n\nesp103_.controller('Act3-4Ctrl', function($scope){\n  $scope.items = [\n    {\n      name: \"manzana\",\n      letter: \"m\"\n    },\n    {\n      name: \"naranja\",\n      letter: \"n\"\n    },\n    {\n      name: \"ñandú\",\n      letter: \"ñ\"\n    },\n    {\n      name: \"olla\",\n      letter: \"o\"\n    }\n  ];\n\n  $scope.items.forEach(function (item) {\n    if(item.letter !== \"ñ\") item.src = item.letter;\n    else item.src = \"n_\";\n  });\n\n  $scope.description = \"Arrastra el objeto hacia el cuadro que contiene la letra con la cual comienza su nombre.\";\n\n  $scope.data = {\n    data: $scope.items,\n    chances: 8,\n    minRightAnswers: 3,\n    randomItems: true,\n    randomTargets: true,\n    padding: false,\n    border: false\n  };\n});\n\nesp103_.controller('Act3-5Ctrl', function($scope){\n  $scope.items = [\n    {\n      name: \"paleta\",\n      letter: \"p\"\n    },\n    {\n      name: \"queso\",\n      letter: \"q\"\n    },\n    {\n      name: \"ratón\",\n      letter: \"r\"\n    },\n    {\n      name: \"silla\",\n      letter: \"s\"\n    }\n  ];\n\n  $scope.items.forEach(function (item) {\n    item.src = item.letter;\n  });\n\n  $scope.description = \"Arrastra el objeto hacia el cuadro que contiene la letra con la cual comienza su nombre.\";\n\n  $scope.data = {\n    data: $scope.items,\n    chances: 8,\n    minRightAnswers: 3,\n    randomItems: true,\n    randomTargets: true,\n    padding: false,\n    border: false\n  };\n});\n\nesp103_.controller('Act3-6Ctrl', function($scope){\n  $scope.items = [\n    {\n      name: \"tomate\",\n      letter: \"t\"\n    },\n    {\n      name: \"uvas\",\n      letter: \"u\"\n    },\n    {\n      name: \"vaca\",\n      letter: \"v\"\n    },\n    {\n      name: \"Wilson\",\n      letter: \"w\"\n    }\n  ];\n\n  $scope.items.forEach(function (item) {\n    item.src = item.letter;\n  });\n\n  $scope.description = \"Arrastra el objeto hacia el cuadro que contiene la letra con la cual comienza su nombre.\";\n\n  $scope.data = {\n    data: $scope.items,\n    chances: 8,\n    minRightAnswers: 3,\n    randomItems: true,\n    randomTargets: true,\n    padding: false,\n    border: false\n  };\n});\n\nesp103_.controller('Act3-7Ctrl', function($scope){\n  $scope.items = [\n    {\n      name: \"xilófono\",\n      letter: \"x\"\n    },\n    {\n      name: \"yate\",\n      letter: \"y\"\n    },\n    {\n      name: \"zanahoria\",\n      letter: \"z\"\n    }\n  ];\n\n  $scope.items.forEach(function (item) {\n    item.src = item.letter;\n  });\n\n  $scope.description = \"Arrastra el objeto hacia el cuadro que contiene la letra con la cual comienza su nombre.\";\n\n  $scope.data = {\n    data: $scope.items,\n    chances: 8,\n    minRightAnswers: 3,\n    randomItems: true,\n    randomTargets: true,\n    padding: false,\n    border: false\n  };\n});\n\nesp103_.controller('Act4-1Ctrl', function($scope){\n  $scope.items = [\n    {\n      name: \"hoja\",\n      pattern: [0],\n      resource: \"h\"\n    },\n    {\n      name: \"manzana\",\n      pattern: [0, 3],\n      resource: \"m\"\n    },\n    {\n      name: \"flor\",\n      pattern: [0, 3],\n      resource: \"f\"\n    },\n    {\n      name: \"zanahoria\",\n      pattern: [0, 4],\n      resource: \"z\"\n    }\n  ];\n\n  $scope.options = {\n    items: $scope.items,\n    chances: 7,\n    minRightAnswers: 4\n  };\n});\n\nesp103_.controller('Act4-2Ctrl', function($scope){\n  $scope.items = [\n    {\n      name: \"kiosco\",\n      pattern: [0, 3, 4],\n      resource: \"k\"\n    },\n    {\n      name: \"naranja\",\n      pattern: [0, 2, 5],\n      resource: \"n\"\n    },\n    {\n      name: \"xilófono\",\n      pattern: [0, 4, 6],\n      resource: \"x\"\n    },\n    {\n      name: \"ñandú\",\n      pattern: [0, 2, 3],\n      resource: \"n_\"\n    }\n  ];\n\n  $scope.options = {\n    items: $scope.items,\n    chances: 12,\n    minRightAnswers: 7\n  };\n});\n\nesp103_.controller('Act4-3Ctrl', function($scope){\n  $scope.items = [\n    {\n      name: \"balón\",\n      pattern: [0, 2, 4],\n      resource: \"b\"\n    },\n    {\n      name: \"uvas\",\n      pattern: [1, 3],\n      resource: \"u\"\n    },\n    {\n      name: \"paleta\",\n      pattern: [0, 2, 4],\n      resource: \"p\"\n    },\n    {\n      name: \"gato\",\n      pattern: [0, 2],\n      resource: \"g\"\n    }\n  ];\n\n  $scope.options = {\n    items: $scope.items,\n    chances: 10,\n    minRightAnswers: 5\n  };\n});\n","var appManager = AppManager();\nvar esp104 = angular.module('esp104', ['activities']);\n\nappManager.configModule(esp104, {\n\tresources: '../resources/01/esp/04',\n\tfarewell: '¡Excelente amiguito, ya conoces la letra L!',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia español lección N° 4”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados.',\n\tcompetences1:'Produzco textos escritos que responden a diversas necesidades comunicativas.',\n\tcompetences2:'Identifica las letras del abecedario relacionándolas a imágenes que comienzan por ellas.',\n\troutes: [\n\t\t\n\t\t{ \n\t\t\tname: '/aprendo-la-letra-l', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle:\"Lección 4: Aprendo la letra l\"\n\t\t},\n\t\t{ \n\t\t\tname: '/aprendo-la-letra-l-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle:\"Lección 4: Aprendo la letra l\"\n\t\t},\n\t\t\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle:\"Actividad 1 | Lección 4\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle:\"Actividad 2 | Lección 4\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle:\"Actividad 3 | Lección 4\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle:\"Actividad 4 | Lección 4\",\n\t\t\t\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle:\"Actividad 5 | Lección 4\",\n\t\t\t\n\t\t}\n\t]\n\t\n});\n\nesp104.controller('Con1Ctrl', function($scope){\n\t$scope.test = 'hola mundo';\n});\n\nesp104.controller('Con2Ctrl', function($scope){\n\t$scope.data = [\n\t\t{\n\t\t\tresource: 'lampara',\n\t\t\ttext: '<strong>L</strong>ámpara'\n\t\t},\n\t\t{\n\t\t\tresource: 'leon',\n\t\t\ttext: '<strong>L</strong>eon'\n\t\t},\n\t\t{\n\t\t\tresource: 'luna',\n\t\t\ttext: '<strong>L</strong>una'\n\t\t}\n\t];\n});\n\nesp104.controller('Act1Ctrl', function($scope){\n\t$scope.data = {\n\t\titems: [\n\t\t\t{ letter: 'm', answer: false },\n\t\t\t{ letter: 'L', answer: true },\n\t\t\t{ letter: 'p', answer: false },\n\t\t\t{ letter: 'l', answer: true },\n\t\t\t{ letter: 'o', answer: false }\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 2\n\t};\n});\n\nesp104.controller('Act2Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tsil: '<strong>l</strong>a',\n\t\t\ttext: \"<strong>l</strong>ámpara\",\n\t\t\tresource: \"lampara\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>l</strong>e',\n\t\t\ttext: \"<strong>l</strong>eon\",\n\t\t\tresource: \"leon\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>l</strong>i',\n\t\t\ttext: \"<strong>l</strong>ima\",\n\t\t\tresource: \"lima\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>l</strong>o',\n\t\t\ttext: \"<strong>l</strong>oro\",\n\t\t\tresource: \"loro\"\n\t\t\t\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>l</strong>u',\n\t\t\ttext: \"<strong>l</strong>una\",\n\t\t\tresource: \"luna\"\n\t\t\t\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\tdata: $scope.items,\n\t\tminRightAnswers: 1,\n\t\trandomItems: true,\n\t\trandomTargets: true\n\t};\n});\n\nesp104.controller('Act4Ctrl', function($scope){\n\t$scope.inputs = [\"la\", \"le\", \"li\", \"lo\", \"lu\"]; \n});\n\nesp104.controller('Act5Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tname: \"loción\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"locion\"\n\t\t},\n\t\t{\n\t\t\tname: \"lupa\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"lupa\"\n\t\t},\n\t\t{\n\t\t\tname: \"labial\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"labial\"\n\t\t},\n\t\t{\n\t\t\tname: \"libro\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"libro\"\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\titems: $scope.items,\n\t\tchances: 8,\n\t\tminRightAnswers: 5\n\t};\n});\n","var appManager = AppManager();\nvar esp105 = angular.module('esp105', ['activities']);\n\nappManager.configModule(esp105, {\n\tresources: '../resources/01/esp/05',\n\tfarewell: '¡Excelente amiguito, ya conoces la letra B!',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia español lección N° 5”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados.',\n\tcompetences1:'Produzco textos escritos que responden a diversas necesidades comunicativas.',\n\tcompetences2:'Identifica las letras del abecedario relacionándolas a imágenes que comienzan por ellas.',\n\troutes: [\n\t\t\n\t\t{ \n\t\t\tname: '/aprendo-la-letra-b', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle:\"Lección 5: Aprendo la letra b\"\n\t\t},\n\t\t{ \n\t\t\tname: '/aprendo-la-letra-b-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle:\"Lección 5: Aprendo la letra b\"\n\t\t},\n\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle:\"Actividad 1 | Lección 5\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle:\"Actividad 2 | Lección 5\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle:\"Actividad 3 | Lección 5\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle:\"Actividad 4 | Lección 5\",\n\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle:\"Actividad 5 | Lección 5\",\n\t\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-6', \n\t\t\ttemplateUrl: 'act6', \n\t\t\tcontroller: 'Act6Ctrl',\n\t\t\ttitle:\"Actividad 6 | Lección 5\",\n\t\n\t\t}\n\t]\n\t\n});\n\nesp105.controller('Con1Ctrl', function($scope){\n\t$scope.test = 'hola mundo';\n});\n\nesp105.controller('Con2Ctrl', function($scope){\n\t$scope.data = [\n\t\t{\n\t\t\tresource: 'balon',\n\t\t\ttext: '<strong>B</strong>alón'\n\t\t},\n\t\t{\n\t\t\tresource: 'bicicleta',\n\t\t\ttext: '<strong>B</strong>icicleta'\n\t\t},\n\t\t{\n\t\t\tresource: 'botas',\n\t\t\ttext: '<strong>B</strong>otas'\n\t\t}\n\t];\n});\n\nesp105.controller('Act1Ctrl', function($scope){\n\t$scope.data = {\n\t\titems: [\n\t\t\t{ letter: 'b', answer: true },\n\t\t\t{ letter: 'i', answer: false },\n\t\t\t{ letter: 'p', answer: false },\n\t\t\t{ letter: 'l', answer: false },\n\t\t\t{ letter: 'B', answer: true }\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 2\n\t};\n});\n\nesp105.controller('Act2Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tsil: '<strong>b</strong>a',\n\t\t\ttext: \"<strong>b</strong>alón\",\n\t\t\tresource: \"balon\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>b</strong>e',\n\t\t\ttext: \"<strong>b</strong>ebe\",\n\t\t\tresource: \"bebe\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>b</strong>i',\n\t\t\ttext: \"<strong>b</strong>icicleta\",\n\t\t\tresource: \"bicicleta\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>b</strong>o',\n\t\t\ttext: \"<strong>b</strong>otas\",\n\t\t\tresource: \"botas\"\n\t\t\t\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>b</strong>u',\n\t\t\ttext: \"<strong>b</strong>úho\",\n\t\t\tresource: \"buho\"\n\t\t\t\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\tdata: $scope.items,\n\t\tminRightAnswers: 1,\n\t\trandomItems: true,\n\t\trandomTargets: true\n\t};\n});\n\nesp105.controller('Act4Ctrl', function($scope){\n\t$scope.inputs = [\"ba\", \"be\", \"bi\", \"bo\", \"bu\"]; \n});\n\nesp105.controller('Act5Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tname: \"baloncesto\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"baloncesto\"\n\t\t},\n\t\t{\n\t\t\tname: \"bolos\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"bolos\"\n\t\t},\n\t\t{\n\t\t\tname: \"beisbol\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"beisbol\"\n\t\t},\n\t\t{\n\t\t\tname: \"bicicross\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"bicicross\"\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\titems: $scope.items,\n\t\tchances: 8,\n\t\tminRightAnswers: 5\n\t};\n});\nesp105.controller('Act6Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tname: \"buso\",\n\t\t\tpattern: [0,2,],\n\t\t\tresource: \"buso\"\n\t\t},\n\t\t{\n\t\t\tname: \"lobo\",\n\t\t\tpattern: [0,2],\n\t\t\tresource: \"lobo\"\n\t\t},\n\t\t{\n\t\t\tname: \"bate\",\n\t\t\tpattern: [0,1,2],\n\t\t\tresource: \"bate\"\n\t\t},\n\t\t{\n\t\t\tname: \"bote\",\n\t\t\tpattern: [0,1,2],\n\t\t\tresource: \"bote\"\n\t\t},\n\t\t{\n\t\t\tname: \"bola\",\n\t\t\tpattern: [0,1,2,3],\n\t\t\tresource: \"bola\"\n\t\t},\n\t\t{\n\t\t\tname: \"nube\",\n\t\t\tpattern: [0,1,2,3],\n\t\t\tresource: \"nube\"\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\titems: $scope.items,\n\t\tchances: 18,\n\t\tminRightAnswers: 10,\n\t\titemsPerRow:3\n\t};\n});\n","var appManager = AppManager();\nvar esp106 = angular.module('esp106', ['activities']);\n\nappManager.configModule(esp106, {\n\tresources: '../resources/01/esp/06',\n\tfarewell: '¡Excelente amiguito, ya conoces la letra C!',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia español lección N° 6”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados.',\n\tcompetences1:'Produzco textos escritos que responden a diversas necesidades comunicativas.',\n\tcompetences2:'Identifica las letras del abecedario relacionándolas a imágenes que comienzan por ellas.',\n\troutes: [\n\t\t\n\t\t{ \n\t\t\tname: '/aprendo-la-letra-c', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle:\"Lección 6: Aprendo la letra c\"\n\t\t},\n\t\t{ \n\t\t\tname: '/aprendo-la-letra-c-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle:\"Lección 6: Aprendo la letra c\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle:\"Actividad 1 | Lección 6\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle:\"Actividad 2 | Lección 6\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle:\"Actividad 3 | Lección 6\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle:\"Actividad 4 | Lección 6\",\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle:\"Actividad 5 | Lección 6\",\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-6', \n\t\t\ttemplateUrl: 'act6', \n\t\t\tcontroller: 'Act6Ctrl',\n\t\t\ttitle:\"Actividad 6 | Lección 6\",\n\t\t}\n\t]\n\t\n});\n\nesp106.controller('Con1Ctrl', function($scope){\n\t$scope.test = 'hola mundo';\n});\n\nesp106.controller('Con2Ctrl', function($scope){\n\t$scope.data = [\n\t\t{\n\t\t\tresource: 'casa',\n\t\t\ttext: '<strong>C</strong>asa'\n\t\t},\n\t\t{\n\t\t\tresource: 'corazon',\n\t\t\ttext: '<strong>C</strong>orazón'\n\t\t},\n\t\t{\n\t\t\tresource: 'cuchara',\n\t\t\ttext: '<strong>C</strong>uchara'\n\t\t}\n\t];\n});\n\nesp106.controller('Act1Ctrl', function($scope){\n\t$scope.data = {\n\t\titems: [\n\t\t\t{ letter: 'b', answer: false },\n\t\t\t{ letter: 'o', answer: false },\n\t\t\t{ letter: 'C', answer: true },\n\t\t\t{ letter: 'm', answer: false },\n\t\t\t{ letter: 'c', answer: true }\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 2\n\t};\n});\n\nesp106.controller('Act2Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tsil: '<strong>c</strong>a',\n\t\t\ttext: \"<strong>c</strong>asa\",\n\t\t\tresource: \"casa\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>c</strong>e',\n\t\t\ttext: \"<strong>c</strong>ebra\",\n\t\t\tresource: \"cebra\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>c</strong>i',\n\t\t\ttext: \"<strong>c</strong>isce\",\n\t\t\tresource: \"cisne\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>c</strong>o',\n\t\t\ttext: \"<strong>c</strong>orazón\",\n\t\t\tresource: \"corazon\"\n\t\t\t\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>c</strong>u',\n\t\t\ttext: \"<strong>c</strong>uchara\",\n\t\t\tresource: \"cuchara\"\n\t\t\t\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\tdata: $scope.items,\n\t\tminRightAnswers: 1,\n\t\trandomItems: true,\n\t\trandomTargets: true\n\t};\n});\n\nesp106.controller('Act4Ctrl', function($scope){\n\t$scope.inputs = [\"ca\", \"ce\", \"ci\", \"co\", \"cu\"]; \n});\n\nesp106.controller('Act5Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tname: \"cama\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"cama\"\n\t\t},\n\t\t{\n\t\t\tname: \"computador\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"computador\"\n\t\t},\n\t\t{\n\t\t\tname: \"cebolla\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"cebolla\"\n\t\t},\n\t\t{\n\t\t\tname: \"cubiertos\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"cubiertos\"\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\titems: $scope.items,\n\t\tchances: 8,\n\t\tminRightAnswers: 5\n\t};\n});\nesp106.controller('Act6Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tname: \"cono\",\n\t\t\tpattern: [0,2],\n\t\t\tresource: \"cono\"\n\t\t},\n\t\t{\n\t\t\tname: \"copa\",\n\t\t\tpattern: [0, 2],\n\t\t\tresource: \"copa\"\n\t\t},\n\t\t{\n\t\t\tname: \"boca\",\n\t\t\tpattern: [0, 1,2],\n\t\t\tresource: \"boca\"\n\t\t},\n\t\t{\n\t\t\tname: \"ceja\",\n\t\t\tpattern: [0,1,2],\n\t\t\tresource: \"ceja\"\n\t\t},\n\t\t{\n\t\t\tname: \"cometa\",\n\t\t\tpattern: [0,1,2,3,4,5],\n\t\t\tresource: \"cometa\"\n\t\t},\n\t\t{\n\t\t\tname: \"camisa\",\n\t\t\tpattern: [0,1,2,3,4,5],\n\t\t\tresource: \"camisa\"\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\titems: $scope.items,\n\t\tchances: 22,\n\t\tminRightAnswers: 12\n\t};\n});\n","var appManager = AppManager();\nvar esp107 = angular.module('esp107', ['activities']);\n\nappManager.configModule(esp107, {\n\tresources: '../resources/01/esp/07',\n\tfarewell: '¡Excelente amiguito, ya conoces la letra D!',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia español lección N° 7”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados.',\n\tcompetences1:'Produzco textos escritos que responden a diversas necesidades comunicativas.',\n\tcompetences2:'Identifica las letras del abecedario relacionándolas a imágenes que comienzan por ellas.',\n\troutes: [\n\t\t\n\t\t{ \n\t\t\tname: '/aprendo-la-letra-d', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle:\"Lección 7: Aprendo la letra d\"\n\t\t},\n\t\t{ \n\t\t\tname: '/aprendo-la-letra-d-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle:\"Lección 7: Aprendo la letra d\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle:\"Actividad 1 | Lección 7\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle:\"Actividad 2 | Lección 7\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle:\"Actividad 3 | Lección 7\"\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle:\"Actividad 4 | Lección 7\",\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle:\"Actividad 5 | Lección 7\",\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-6', \n\t\t\ttemplateUrl: 'act6', \n\t\t\tcontroller: 'Act6Ctrl',\n\t\t\ttitle:\"Actividad 6 | Lección 7\",\n\t\t}\n\t]\n\t\n});\n\nesp107.controller('Con1Ctrl', function($scope){\n\t$scope.test = 'hola mundo';\n});\n\nesp107.controller('Con2Ctrl', function($scope){\n\t$scope.data = [\n\t\t{\n\t\t\tresource: 'dado',\n\t\t\ttext: '<strong>D</strong>ado'\n\t\t},\n\t\t{\n\t\t\tresource: 'dientes',\n\t\t\ttext: '<strong>D</strong>ientes'\n\t\t},\n\t\t{\n\t\t\tresource: 'dos',\n\t\t\ttext: '<strong>D</strong>os'\n\t\t}\n\t];\n});\n\nesp107.controller('Act1Ctrl', function($scope){\n\t$scope.data = {\n\t\titems: [\n\t\t\t{ letter: 'd', answer: true },\n\t\t\t{ letter: 'p', answer: false },\n\t\t\t{ letter: 'e', answer: false },\n\t\t\t{ letter: 'D', answer: true },\n\t\t\t{ letter: 'l', answer: false }\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 2\n\t};\n});\n\nesp107.controller('Act2Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tsil: '<strong>d</strong>a',\n\t\t\ttext: \"<strong>d</strong>ado\",\n\t\t\tresource: \"dado\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>d</strong>e',\n\t\t\ttext: \"<strong>d</strong>elfín\",\n\t\t\tresource: \"delfin\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>d</strong>i',\n\t\t\ttext: \"<strong>d</strong>ientes\",\n\t\t\tresource: \"dientes\"\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>d</strong>o',\n\t\t\ttext: \"<strong>d</strong>os\",\n\t\t\tresource: \"dos\"\n\t\t\t\n\t\t},\n\t\t{\n\t\t\tsil: '<strong>d</strong>u',\n\t\t\ttext: \"<strong>d</strong>ulce\",\n\t\t\tresource: \"dulce\"\n\t\t\t\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\tdata: $scope.items,\n\t\tminRightAnswers: 1,\n\t\trandomItems: true,\n\t\trandomTargets: true\n\t};\n});\n\nesp107.controller('Act4Ctrl', function($scope){\n\t$scope.inputs = [\"da\", \"de\", \"di\", \"do\", \"du\"]; \n});\n\nesp107.controller('Act5Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tname: \"delantal\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"delantal\"\n\t\t},\n\t\t{\n\t\t\tname: \"durazno\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"durazno\"\n\t\t},\n\t\t{\n\t\t\tname: \"diploma\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"diploma\"\n\t\t},\n\t\t{\n\t\t\tname: \"dominó\",\n\t\t\tpattern: [0, 1],\n\t\t\tresource: \"domino\"\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\titems: $scope.items,\n\t\tchances: 8,\n\t\tminRightAnswers: 5\n\t};\n});\nesp107.controller('Act6Ctrl', function($scope){\n\t$scope.items = [\n\t\t{\n\t\t\tname: \"diadema\",\n\t\t\tpattern: [0,3,4,6],\n\t\t\tresource: \"diadema\"\n\t\t},\n\t\t{\n\t\t\tname: \"cadena\",\n\t\t\tpattern: [0, 2,4],\n\t\t\tresource: \"cadena\"\n\t\t},\n\t\t{\n\t\t\tname: \"bebida\",\n\t\t\tpattern: [0, 2,4,5],\n\t\t\tresource: \"bebida\"\n\t\t},\n\t\t{\n\t\t\tname: \"sandia\",\n\t\t\tpattern: [0,2,3,4],\n\t\t\tresource: \"sandia\"\n\t\t},\n\t\t{\n\t\t\tname: \"nido\",\n\t\t\tpattern: [0,1,2,3],\n\t\t\tresource: \"nido\"\n\t\t},\n\t\t{\n\t\t\tname: \"moneda\",\n\t\t\tpattern: [0,1,2,3,4,5],\n\t\t\tresource: \"moneda\"\n\t\t}\n\t];\n\n\t$scope.options = {\n\t\titems: $scope.items,\n\t\tchances: 25,\n\t\tminRightAnswers: 13\n\t};\n});\n","var appManager = AppManager();\nvar mat101 = angular.module('mat101', ['activities']);\n\nappManager.configModule(mat101, {\n\tresources: '../resources/01/mat/01',\n\tcompetences1:'Describo, comparo y cuantifico situaciones con números, en diferentes contextos y con diversas representaciones',\n\tcompetences2:'Compara dos cantidades identificando las que corresponden a mayor que, menor que e igual a',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia matemáticas lección N° 1”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: '¡Felicitaciones lo has hecho muy bien, estas aprendiendo a contar!',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: function(){},\n\t\t\ttitle: 'Lección 1: Realizo conteos'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: function(){},\n\t\t\ttitle: 'Lección 1: Realizo conteos'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-3', \n\t\t\ttemplateUrl: 'con3', \n\t\t\tcontroller: 'Con3Ctrl',\n\t\t\ttitle: 'Lección 1: Realizo conteos'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-4', \n\t\t\ttemplateUrl: 'con4', \n\t\t\tcontroller: 'Con4Ctrl',\n\t\t\ttitle: 'Lección 1: Realizo conteos'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3-1', \n\t\t\ttemplateUrl: 'act3_1', \n\t\t\tcontroller: 'Act3_1Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3-2', \n\t\t\ttemplateUrl: 'act3_2', \n\t\t\tcontroller: 'Act3_2Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4-1', \n\t\t\ttemplateUrl: 'act4_1', \n\t\t\tcontroller: 'Act4_1Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4-2', \n\t\t\ttemplateUrl: 'act4_2', \n\t\t\tcontroller: 'Act4_2Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t}\n\t]\n});\n\nmat101.controller('Con3Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"cuatro-libros\",\n\t\t\talt: \"Cuatro libros ubicados uno encima del otro\",\n\t\t\tnumber: 4\n\t\t},\n\t\t{ \n\t\t\tresource: \"un-libro\",\n\t\t\talt: \"Un libro con su pasta de color naranja\",\n\t\t\tnumber: 1\n\t\t}\n\t]\n});\n\nmat101.controller('Con4Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"muchos-globos\",\n\t\t\talt: \"Ramillete conformado por siete globos de diferentes colores\",\n\t\t\tnumber: 7\n\t\t},\n\t\t{ \n\t\t\tresource: \"pocos-globos\",\n\t\t\talt: \"Ramillete conformado por cinco globos de diferentes colores\",\n\t\t\tnumber: 5\n\t\t}\n\t]\n});\n\nmat101.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\toptions: [\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"ocho-lapices\",\n\t\t\t\t\t\talt: \"Ocho lápices de colores\",\n\t\t\t\t\t\tanswer: true  \n\t\t\t\t\t},\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"pocos-lapices\",\n\t\t\t\t\t\talt: \"Tres lápices de colores\",\n\t\t\t\t\t\tanswer: false  \n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\toptions: [\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"pocos-dulces\",\n\t\t\t\t\t\talt: \"pocos dulces de colores\",\n\t\t\t\t\t\tanswer: false  \n\t\t\t\t\t},\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"muchos-dulces\",\n\t\t\t\t\t\talt: \"muchos dulces de colores\",\n\t\t\t\t\t\tanswer: true  \n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\toptions: [\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"tres-manzanas\",\n\t\t\t\t\t\talt: \"tres manzanas rojas\",\n\t\t\t\t\t\tanswer: true  \n\t\t\t\t\t},\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"manzana-II\",\n\t\t\t\t\t\talt: \"una manzana roja\",\n\t\t\t\t\t\tanswer: false  \n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\toptions: [\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"una-colombina\",\n\t\t\t\t\t\talt: \"una colombina\",\n\t\t\t\t\t\tanswer: false  \n\t\t\t\t\t},\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"cuatro-colombinas\",\n\t\t\t\t\t\talt: \"cuatro colombinas\",\n\t\t\t\t\t\tanswer: true  \n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 3\n\t};\n\n});\n\nmat101.controller('Act2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\toptions: [\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"seis-zanahorias\",\n\t\t\t\t\t\talt: \"seis zanahorias\",\n\t\t\t\t\t\tanswer: true  \n\t\t\t\t\t},\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"doce-zanahorias\",\n\t\t\t\t\t\talt: \"doce zanahorias\",\n\t\t\t\t\t\tanswer: false  \n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\toptions: [\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"siete-flores\",\n\t\t\t\t\t\talt: \"siete flores de diferentes colores\",\n\t\t\t\t\t\tanswer: false  \n\t\t\t\t\t},\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"tres-flores\",\n\t\t\t\t\t\talt: \"tres flores de diferentes colores\",\n\t\t\t\t\t\tanswer: true  \n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\toptions: [\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"una-estrella\",\n\t\t\t\t\t\talt: \"una estrella\",\n\t\t\t\t\t\tanswer: true  \n\t\t\t\t\t},\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"siete-estrellas\",\n\t\t\t\t\t\talt: \"siete estrellas\",\n\t\t\t\t\t\tanswer: false  \n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\toptions: [\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"diez-peras\",\n\t\t\t\t\t\talt: \"diez peras\",\n\t\t\t\t\t\tanswer: false  \n\t\t\t\t\t},\n\t\t\t\t\t{  \n\t\t\t\t\t\tsrc: \"cuatro-peras\",\n\t\t\t\t\t\talt: \"cuatro peras\",\n\t\t\t\t\t\tanswer: true  \n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 3\n\t};\n\n});\n\nmat101.controller('Act3_1Ctrl', function ($scope) {\n\t// Obtenemos el audio deseado\n\tvar source = '<audio id=\"audio-muchos\" preload=\"auto\">' +\n\t\t\t\t\t\"<source src=\\\"\" + $scope.resources + \"/muchos.mp3\\\" type=\\\"audio/mpeg\\\">\" +\n\t\t\t\t'</audio>';\n\n\t$('#main-container').append(source);\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"tres-libros.png\",\n\t\t\t\talt: \"Tres libros ubicados uno encima del otro\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"diez-globos.png\",\n\t\t\t\talt: \"ramillete conformado por muchos globos de diferentes colores\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"dos-colombinas.png\",\n\t\t\t\talt: \"Dos colombinas\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"una-flor.png\",\n\t\t\t\talt: \"una flor morada\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"manzana-II.png\",\n\t\t\t\talt: \"una manzana roja\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"ocho-lapices.png\",\n\t\t\t\talt: \"ocho lápices de diferentes colores\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"siete-naranjas.png\",\n\t\t\t\talt: \"siete naranjas\"\n\t\t\t}\n\t\t],\n\t\titemsPerRow: 4,\n\t\tchances: 3,\n\t\tminRightAnswers: 2,\n\t\trightAnswerCallback: function (item) {\n\t\t\t// Reproducimos el audio\n\t\t\t$('#audio-muchos')[0].play();\t\n\t\t}\n\t};\n\n});\n\nmat101.controller('Act3_2Ctrl', function ($scope) {\n\t// Obtenemos el audio deseado\n\tvar source = '<audio id=\"audio-pocos\" preload=\"auto\">' +\n\t\t\t\t\t\"<source src=\\\"\" + $scope.resources + \"/pocos.mp3\\\" type=\\\"audio/mpeg\\\">\" +\n\t\t\t\t'</audio>';\n\n\t$('#main-container').append(source);\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"tres-libros.png\",\n\t\t\t\talt: \"Tres libros ubicados uno encima del otro\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"diez-globos.png\",\n\t\t\t\talt: \"ramillete conformado por muchos globos de diferentes colores\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"dos-colombinas.png\",\n\t\t\t\talt: \"Dos colombinas\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"una-flor.png\",\n\t\t\t\talt: \"una flor morada\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"manzana-II.png\",\n\t\t\t\talt: \"una manzana roja\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"ocho-lapices.png\",\n\t\t\t\talt: \"ocho lápices de diferentes colores\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"siete-naranjas.png\",\n\t\t\t\talt: \"siete naranjas\",\n\t\t\t\tanswer: false\n\t\t\t}\n\t\t],\n\t\titemsPerRow: 4,\n\t\tchances: 3,\n\t\tminRightAnswers: 2,\n\t\trightAnswerCallback: function (item) {\n\t\t\t// Reproducimos el audio\n\t\t\t$('#audio-pocos')[0].play();\t\n\t\t}\n\t};\n\n});\n\nmat101.controller('Act4_1Ctrl', function ($scope) {\n\t// Obtenemos el audio deseado\n\tvar source = '<audio id=\"audio-muchos-animales\" preload=\"auto\">' +\n\t\t\t\t\t\"<source src=\\\"\" + $scope.resources + \"/muchos-animales.mp3\\\" type=\\\"audio/mpeg\\\">\" +\n\t\t\t\t'</audio>';\n\n\t$('#main-container').append(source);\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"pocos-animales.png\",\n\t\t\t\talt: \"Un tigre y un elefante caminando por el campo\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"muchos-animales.png\",\n\t\t\t\talt: \"Dos tigres, una cebra, un elefante, un rinoceronte, y un reno caminando por el campo\"\n\t\t\t}\n\t\t],\n\t\titemsPerRow: 2,\n\t\tchances: 1,\n\t\tminRightAnswers: 1,\n\t\trightAnswerCallback: function (item) {\n\t\t\t// Reproducimos el audio\n\t\t\t$('#audio-muchos-animales')[0].play();\t\n\t\t}\n\t};\n\n});\n\nmat101.controller('Act4_2Ctrl', function ($scope) {\n\t// Obtenemos el audio deseado\n\tvar source = '<audio id=\"audio-pocos-peces\" preload=\"auto\">' +\n\t\t\t\t\t\"<source src=\\\"\" + $scope.resources + \"/pocos-peces.mp3\\\" type=\\\"audio/mpeg\\\">\" +\n\t\t\t\t'</audio>';\n\n\t$('#main-container').append(source);\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"muchos-peces.png\",\n\t\t\t\talt: \"Seis peces de diferentes colores nadando en el agua\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pocos-peces.png\",\n\t\t\t\talt: \"Tres peces de diferentes colores nadando en el agua\"\n\t\t\t}\n\t\t],\n\t\titemsPerRow: 2,\n\t\tchances: 1,\n\t\tminRightAnswers: 1,\n\t\trightAnswerCallback: function (item) {\n\t\t\t// Reproducimos el audio\n\t\t\t$('#audio-pocos-peces')[0].play();\t\n\t\t}\n\t};\n\n});\n","var appManager = AppManager();\nvar mat102 = angular.module('mat102', ['activities']);\n\nappManager.configModule(mat102, {\n\tresources: '../resources/01/mat/02',\n\tcompetences1:'Explico –desde mi experiencia– la posibilidad o imposibilidad de ocurrencia de eventos cotidianos',\n\tcompetences2:'Diferencia entre contextos adecuados e inadecuados  y lógicos en su espacio y en el de su entorno',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia matemáticas lección N° 2”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: '¡Felicitaciones lo has hecho muy bien!',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Los absurdos'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3-1', \n\t\t\ttemplateUrl: 'act3_1', \n\t\t\tcontroller: 'Act3_1Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3-2', \n\t\t\ttemplateUrl: 'act3_2', \n\t\t\tcontroller: 'Act3_2Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t}\n\t]\n});\n\nmat102.controller('Con1Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"tv\",\n\t\t\talt: \"Un señor viendo televisión, pero la imagen en la televisión se ve al revés\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"peinarse-con-escoba\",\n\t\t\talt: \"Una niña peinándose con una escoba\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"echar-comida-en-la-lavadora\",\n\t\t\talt: \"Una niña echando a la lavadora una hamburguesa\"\n\t\t}\n\t];\n});\n\nmat102.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"pato-remando\",\n\t\t\t\talt: \"Un pato montado en un bote y remando\",\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"dormir\",\n\t\t\t\talt: \"Un niño acostado en la cama durmiendo\",\n\t\t\t\tanswer: false\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pescar-en-la-carretera\",\n\t\t\t\talt: \"Un señor pescando en la carretera\",\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"comer\",\n\t\t\t\talt: \"Un niño comiendo pollo con papitas fritas\",\n\t\t\t\tanswer: false\t\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 2\n\t};\n});\n\nmat102.controller('Act2Ctrl', function ($scope) {\n\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc1: \"lluvia-saliendo-de-sombrilla\",\n\t\t\t\talt1: \"Un señor cubriéndose con su sombrilla, pero de ella cae agua\",\n\t\t\t\tsrc2: \"protegerse-del-agua\",\n\t\t\t\talt2: \"Un señor cubriéndose de la lluvia con su sombrilla\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"zapato-de-florero\",\n\t\t\t\talt1: \"Una mesa y sobre ella se encuentra un zapato con flores adentro\",\n\t\t\t\tsrc2: \"florero-sobre-mesa\",\n\t\t\t\talt2: \"Una mesa que tiene encima un florero con flores\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"tomar-el-sol-nevando\",\n\t\t\t\talt1: \"Una señora con vestido de baño acostada sobre su toalla tomando el sol en época de invierno\",\n\t\t\t\tsrc2: \"tomar-el-sol\",\n\t\t\t\talt2: \"Una señora con vestido de baño acostada sobre su toalla tomando el sol en un día soleado\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\trandomItems: true,\n\t\trandomTargets: true\n\t};\n});\n\nmat102.controller('Act3_1Ctrl', function ($scope) {\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"pintar-con-pincel.png\",\n\t\t\t\talt: \"Una señora pintando con un pincel\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"silla.png\",\n\t\t\t\talt: \"una silla\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"avion-con-alas-de-ave.png\",\n\t\t\t\talt: \"un avión con alas de un ave\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pintar-con-zanahoria.png\",\n\t\t\t\talt: \"Una señora pintando con una zanahoria\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"silla-con-brazos.png\",\n\t\t\t\talt: \"una silla con dos brazos\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"avion.png\",\n\t\t\t\talt: \"un avión\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3\n\t};\n});\n\nmat102.controller('Act3_2Ctrl', function ($scope) {\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"pintar-con-pincel.png\",\n\t\t\t\talt: \"Una señora pintando con un pincel\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"silla.png\",\n\t\t\t\talt: \"una silla\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"avion-con-alas-de-ave.png\",\n\t\t\t\talt: \"un avión con alas de un ave\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pintar-con-zanahoria.png\",\n\t\t\t\talt: \"Una señora pintando con una zanahoria\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"silla-con-brazos.png\",\n\t\t\t\talt: \"una silla con dos brazos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"avion.png\",\n\t\t\t\talt: \"un avión\",\n\t\t\t\tanswer: false\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3\n\t};\n});\n\nmat102.controller('Act4Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tcanvas: 'actividad-absurdos',\n\t\ttargets: [\n\t\t\t{ w: 22, h: 36, t: 9, l: 74 },\n\t\t\t{ w: 25, h: 28, t: 13, l: 2 },\n\t\t\t{ w: 17, h: 22, t: 0, l: 17 },\n\t\t\t{ w: 17, h: 24, t: 56, l: 30 },\n\t\t\t{ w: 20, h: 28, t: 59, l: 80 },\n\t\t\t{ w: 28, h: 57, t: 40, l: 1 }\n\t\t],\n\t\tminRightAnswers: 4\n\t};\n\n});\n","var appManager = AppManager();\nvar mat103 = angular.module('mat103', ['activities']);\n\nappManager.configModule(mat103, {\n\tresources: '../resources/01/mat/03',\n\tcompetences1:'Desarrollo habilidades para relacionar dirección, distancia y posición en el espacio',\n\tcompetences2:'Reconoce los días de la semana asociándolos con su horario de clases y demás actividades lúdicas y familiaresReconoce los días de la semana asociándolos con su horario de clases y demás actividades lúdicas y familiares',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia matemáticas lección N° 3”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: '¡Felicitaciones ahora ya sabes los días de la semana!',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Los días de la semana'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Los días de la semana'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t}\n\t]\n});\n\nmat103.controller('Con1Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"lunes\",\n\t\t\ttext: \"Lunes\",\n\t\t\thideImg: true,\n\t\t\ttextClass: \"day yellow\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"martes\",\n\t\t\ttext: \"Martes\",\n\t\t\thideImg: true,\n\t\t\ttextClass: \"day green\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"miercoles\",\n\t\t\ttext: \"Miércoles\",\n\t\t\thideImg: true,\n\t\t\ttextClass: \"day blue\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"jueves\",\n\t\t\ttext: \"Jueves\",\n\t\t\thideImg: true,\n\t\t\ttextClass: \"day red\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"viernes\",\n\t\t\ttext: \"Viernes\",\n\t\t\thideImg: true,\n\t\t\ttextClass: \"day purple\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"sabado\",\n\t\t\ttext: \"Sábado\",\n\t\t\thideImg: true,\n\t\t\ttextClass: \"day pink\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"domingo\",\n\t\t\ttext: \"Domingo\",\n\t\t\thideImg: true,\n\t\t\ttextClass: \"day brown\"\n\t\t}\n\t];\n});\n\nmat103.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"estudiar\",\n\t\t\talt: \"Niño leyendo un libro\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"trabajar\",\n\t\t\talt: \"Señor haciendo un trabajo en su computador\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"descansar\",\n\t\t\talt: \"Niña sentada en una silla, tomando jugo\"\n\t\t}\n\t];\n});\n\nmat103.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tresource: \"lunes\",\n\t\t\t\ttext: \"Lunes\",\n\t\t\t\ttextClass: \"day yellow\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"martes\",\n\t\t\t\ttext: \"Martes\",\n\t\t\t\ttextClass: \"day green\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"miercoles\",\n\t\t\t\ttext: \"Miércoles\",\n\t\t\t\ttextClass: \"day blue\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"jueves\",\n\t\t\t\ttext: \"Jueves\",\n\t\t\t\ttextClass: \"day red\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"viernes\",\n\t\t\t\ttext: \"Viernes\",\n\t\t\t\ttextClass: \"day purple\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"sabado\",\n\t\t\t\ttext: \"Sábado\",\n\t\t\t\ttextClass: \"day pink\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"domingo\",\n\t\t\t\ttext: \"Domingo\",\n\t\t\t\ttextClass: \"day brown\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3\n\t};\n});\n\nmat103.controller('Act2Ctrl', function ($scope) {\n\t$scope.options = {\n\t\tdata: [\n\t\t{ \n\t\t\ttext: \"Lunes\",\n\t\t\taudio: \"lunes\",\n\t\t\ttextClass: \"day yellow\"\n\t\t},\n\t\t{ \n\t\t\ttext: \"Martes\",\n\t\t\taudio: \"martes\",\n\t\t\ttextClass: \"day green\"\n\t\t},\n\t\t{ \n\t\t\ttext: \"Miércoles\",\n\t\t\taudio: \"miercoles\",\n\t\t\ttextClass: \"day blue\"\n\t\t},\n\t\t{ \n\t\t\ttext: \"Jueves\",\n\t\t\taudio: \"jueves\",\n\t\t\ttextClass: \"day red\"\n\t\t},\n\t\t{ \n\t\t\ttext: \"Viernes\",\n\t\t\taudio: \"viernes\",\n\t\t\ttextClass: \"day purple\"\n\t\t},\n\t\t{ \n\t\t\ttext: \"Sábado\",\n\t\t\taudio: \"sabado\",\n\t\t\ttextClass: \"day pink\"\n\t\t},\n\t\t{ \n\t\t\ttext: \"Domingo\",\n\t\t\taudio: \"domingo\",\n\t\t\ttextClass: \"day brown\"\n\t\t}\n\t\t],\n\t\tchances: 7,\n\t\tminRightAnswers: 4,\n\t\trandomItems: true,\n\t\trandomTargets: true,\n\t\trightAnswerCallback: function (item) {\n\t\t\t$('#audio-' + item.audio)[0].play();\n\t\t},\n\t\tborder: false, // sin borde\n\t\tpadding: false // sin padding\n\t};\n});\n\nmat103.controller('Act3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tgroups: [\n\t\t\t{\n\t\t\t\tname: \"Lunes\",\n\t\t\t\tmin: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Martes\",\n\t\t\t\tmin: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Miércoles\",\n\t\t\t\tmin: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Jueves\",\n\t\t\t\tmin: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Viernes\"\t\n\t\t\t},\n\t\t\t\n\t\t],\n\t\tstack: [\n\t\t\t{\n\t\t\t\tsrc: \"icon_esp\",\n\t\t\t\talt: \"Cuadrado de color naranjado que tiene en la parte superior las letras a, b y c de color blanco, este Cuadrado representa el área de español\",\n\t\t\t\tcopies: 2\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"icon_soc\",\n\t\t\t\talt: \"Cuadrado de color azul que tiene en la parte superior el mapa de Colombia, este Cuadrado representa el área de ciencias sociales\",\n\t\t\t\tcopies: 2\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"icon_mat\",\n\t\t\t\talt: \"Cuadrado de color rojo que tiene en la parte superior los números uno, dos y tres, este Cuadrado representa el área de matemáticas\",\n\t\t\t\tcopies: 2\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"icon_nat\",\n\t\t\t\talt: \"Cuadrado de color verde que tiene en la parte superior un árbol de color blanco, Este Cuadrado representa el área de ciencias naturales\",\n\t\t\t\tcopies: 2\n\t\t\t}\n\n\t\t],\n\t\t\n\t\t\tmaxElementsPerGroup: 2\n\t};\n});\n\nmat103.controller('Act4Ctrl', function ($scope) {\n\n\t$scope.data = {\n\t\tgroups: [\n\t\t\t{\n\t\t\t\tname: \"Lunes\",\n\t\t\t\tmin: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Martes\",\n\t\t\t\tmin: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Miércoles\",\n\t\t\t\tmin: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Jueves\",\n\t\t\t\tmin: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Viernes\",\n\t\t\t\tmin: 1\n\t\t\t}\n\t\t],\n\t\tstack: [\n\t\t\t{\n\t\t\t\tsrc: \"ayudar\",\n\t\t\t\talt: \"Niña trapeando\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"comer\",\n\t\t\t\talt: \"niña comiendo papitas fritas con pollo\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"estudiar\",\n\t\t\t\talt: \"niño estudiando\",\n\t\t\t\tcopies: 2\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"jugar\",\n\t\t\t\talt: \"Niño y niña jugando con un balón\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"ver-tv\",\n\t\t\t\talt: \"dos niñas viendo televisión\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"banarse\",\n\t\t\t\talt: \" niño bañándose\",\n\t\t\t\tcopies: 2\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"descansar\",\n\t\t\t\talt: \"Niña sentada en una silla, tomando jugo\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"dormir\",\n\t\t\t\talt: \"niño durmiendo sobre su cama\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"deporte\",\n\t\t\t\talt: \"niño jugando con su balón de fútbol\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"cepillarse\",\n\t\t\t\talt: \"niña cepillándose los dientes\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"trabajar-en-computador\",\n\t\t\t\talt: \"niño trabajando en su computador\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"jugar-2\",\n\t\t\t\talt: \"niña jugando con un balón\"\n\t\t\t}\n\t\t],\n\t\tmaxElementsPerGroup: 2\n\t};\n});\n\n\n\n","var appManager = AppManager();\nvar mat104 = angular.module('mat104', ['activities']);\n\nappManager.configModule(mat104, {\n\tresources: '../resources/01/mat/04',\n\tcompetences1: 'Reconozco significados del número en diferentes contextos (medición, conteo, comparación, codificación, localización entre otros)',\n\tcompetences2: 'Compara cantidades iguales con objetos y simbolos en conjuntos',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia matemáticas lección N° 4”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: '¡Felicitaciones!, estás contando muy bien',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Cantidades iguales'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Cantidades iguales'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-3', \n\t\t\ttemplateUrl: 'con3', \n\t\t\tcontroller: 'Con3Ctrl',\n\t\t\ttitle: 'Cantidades iguales'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t}\n\t]\n});\n\nmat104.controller('Con1Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"cinco-gatos\",\n\t\t\talt: \"Conjunto conformado por cinco gatos\",\n\t\t\tnumber: 5\n\t\t},\n\t\t{ \n\t\t\tresource: \"cinco-perros\",\n\t\t\talt: \"Conjunto conformado por cinco perros\",\n\t\t\tnumber: 5\n\t\t}\n\t]\n});\n\nmat104.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"flores\",\n\t\t\talt: \"Conjunto conformado por cuatro flores de color naranjado\",\n\t\t\tnumber: 4\n\t\t},\n\t\t{ \n\t\t\tresource: \"globos\",\n\t\t\talt: \"Conjunto conformado por cuatro globos de color verde\",\n\t\t\tnumber: 4\n\t\t}\n\t]\n});\n\nmat104.controller('Con3Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"estrellas\",\n\t\t\talt: \"Conjunto conformado por dos estrellas\",\n\t\t\tnumber: 2\n\t\t},\n\t\t{ \n\t\t\tresource: \"balones\",\n\t\t\talt: \"Conjunto conformado por dos balones de colores\",\n\t\t\tnumber: 2\n\t\t}\n\t]\n});\n\nmat104.controller('Act1Ctrl', function ($scope) {\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc1: \"conjunto-manzanas\",\n\t\t\t\talt1: \"Profesor enseñando las vocales en el tablero\",\n\t\t\t\tsrc2: \"conjunto-lapices\",\n\t\t\t\talt2: \"Tablero\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"conjunto-perros\",\n\t\t\t\talt1: \"Chef con un pollo asado en sus manos\",\n\t\t\t\tsrc2: \"conjunto-sillas\",\n\t\t\t\talt2: \"Cucharón, olla y sartén\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"conjunto-globos\",\n\t\t\t\talt1: \"Bombero con extintor a un lado\",\n\t\t\t\tsrc2: \"conjunto-computadores\",\n\t\t\t\talt2: \"Extintor\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"conjunto-helados\",\n\t\t\t\talt1: \"Médico con un tarro de medicinas en su mano\",\n\t\t\t\tsrc2: \"conjunto-naranjas\",\n\t\t\t\talt2: \"Aparato usado por los médicos para oír los sonidos internos del cuerpo humano\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\trandomItems: true,\n\t\trandomTargets: true,\n\t\tpadding: false,\n\t\tborder: false\n\t};\n});\n\nmat104.controller('Act2Ctrl', function ($scope) {\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tnumber: 1,\n\t\t\t\tcolor: \"#7030A0\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 2,\n\t\t\t\tcolor: \"#FF0000\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 3,\n\t\t\t\tcolor: \"#00B050\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 4,\n\t\t\t\tcolor: \"#FFC000\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 5,\n\t\t\t\tcolor: \"#00B0F0\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\trandomItems: true,\n\t\trandomTargets: true,\n\t\tpadding: false,\n\t\tborder: false\n\t};\n});\n\nmat104.controller('Act3Ctrl', function ($scope) {\n\t$scope.options = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tnumber: 2,\n\t\t\t\ttextClass: \"red\",\n\t\t\t\tanswer: true\n\t\t\t},\t\n\t\t\t{\n\t\t\t\tnumber: 4,\n\t\t\t\ttextClass: \"yellow\"\n\t\t\t},\t\n\t\t\t{\n\t\t\t\tnumber: 7,\n\t\t\t\ttextClass: \"green\"\n\t\t\t},\t\n\t\t\t{\n\t\t\t\tnumber: 8,\n\t\t\t\ttextClass: \"purple\",\n\t\t\t\tanswer: true\n\t\t\t},\t\n\t\t\t{\n\t\t\t\tnumber: 9,\n\t\t\t\ttextClass: \"blue\",\n\t\t\t\tanswer: true\n\t\t\t}\n\t\t],\n\t\tpairs: 3,\n\t\tchances: 6,\n\t\tminRightAnswers: 2\n\t};\n\n});\n\nmat104.controller('Act4Ctrl', function ($scope) {\n\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tnumber: 2,\n\t\t\t\tsrc: \"conjunto-mesas\",\n\t\t\t\talt: \"Conjunto conformado por dos mesas\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 3,\n\t\t\t\tsrc: \"conjunto-camas\",\n\t\t\t\talt: \"conjunto conformado por tres camas\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 4,\n\t\t\t\tsrc: \"conjunto-sillas-2\",\n\t\t\t\talt: \"Conjunto conformado por cuatro sillas\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 5,\n\t\t\t\tsrc: \"conjunto-cucharas\",\n\t\t\t\talt: \"conjunto conformado por cinco cucharas\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\trandomItems: true,\n\t\trandomTargets: true,\n\t\tpadding: false,\n\t\tborder: false\n\t};\n});\n","var appManager = AppManager();\nvar mat105 = angular.module('mat105', ['activities']);\n\nappManager.configModule(mat105, {\n\tresources: '../resources/01/mat/05',\n\tcompetences1: 'Describo, comparo y cuantifico situaciones con números, en diferentes contextos y con diversas representaciones',\n\tcompetences2: 'Reconoce el uso de los conjuntos para hacer agrupaciones de objetos de acuerdo a sus características',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia matemáticas lección N° 5”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: '¡Felicitaciones!, ahora ya sabes agrupar elementos similares',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Agrupo objetos por características iguales'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Agrupo objetos por características iguales'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t}\n\t]\n});\n\nmat105.controller('Con1Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"conjunto-animales\",\n\t\t\talt: \"Círculo con cinco animales adentro: elefante, cebra, tigre, rinoceronte y reno\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"conjunto-transporte\",\n\t\t\talt: \"Círculo que contiene en su interior un avión, una moto, un carro y un barco\"\n\t\t}\n\t]\n});\n\nmat105.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"conjunto-frutas\",\n\t\t\talt: \"Círculo que contiene en su interior una fresa, un banano, una pera, una naranja, una manzana y un racimo de uvas\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"conjunto-verduras\",\n\t\t\talt: \"Círculo que contiene en su interior una zanahoria, arvejas, un tomate, un pimentón, un repollo y un ajo\"\n\t\t}\n\t]\n});\n\nmat105.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tresource: \"conjunto-juguetes\",\n\t\t\t\talt: \"conjunto de juguetes conformado por una muñeca, un tambor, un balde y una pala, una volqueta y un trencito de madera\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"conjunto-arboles\",\n\t\t\t\talt: \"Conjunto conformado por tres árboles y una palmera\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"conjunto-zapatos\",\n\t\t\t\talt: \"conjunto conformado por tres pares de zapatos de mujer y dos pares de zapatos de hombre\",\n\t\t\t\tnoSound: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"conjunto-numeros\",\n\t\t\t\talt: \"conjunto conformado por los números del uno al siete\"\n\t\t\t}\n\t\t],\n\t\tchances: 3,\n\t\tminRightAnswers: 2\n\t};\n});\n\nmat105.controller('Act2Ctrl', function ($scope) {\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc1: \"conjunto-instrumentos-1\",\n\t\t\t\talt1: \"Conjunto conformado por un tambor, dos maracas, una guitarra eléctrica, una trompeta y un violín\",\n\t\t\t\tsrc2: \"conjunto-instrumentos-2\",\n\t\t\t\talt2: \"conjunto conformado por una pandereta, un xilófono, una batería y una guitarra\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"conjunto-herramientas-1\",\n\t\t\t\talt1: \"conjunto conformado por un taladro, una motosierra y una segueta eléctrica\",\n\t\t\t\tsrc2: \"conjunto-herramientas-2\",\n\t\t\t\talt2: \"Conjunto conformado por un destornillador, un martillo, una llave, un taladro y un pie de rey\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"conjunto-balones-1\",\n\t\t\t\talt1: \"conjunto conformado por una bola de bolos, un balón de voleibol, una pelota de tenis y un balón de baloncesto\",\n\t\t\t\tsrc2: \"conjunto-balones-2\",\n\t\t\t\talt2: \"conjunto conformado por una bola de billar, una bola de golf, un balón de baloncesto, un balón de fútbol y una pelota de beisbol\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\trandomItems: true,\n\t\trandomTargets: true,\n\t\tborder: false,\n\t\tpadding: false\n\t};\n});\n\nmat105.controller('Act3Ctrl', function ($scope) {\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc1: \"pez\",\n\t\t\t\talt1: \"pez\",\n\t\t\t\tsrc2: \"conjunto-animales-marinos\",\n\t\t\t\talt2: \"conjunto conformado por una tortuga marina, un pez, un cangrejo, una ballena y un tiburón\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"hamburguesa\",\n\t\t\t\talt1: \"hamburguesa\",\n\t\t\t\tsrc2: \"conjunto-comida-rapida\",\n\t\t\t\talt2: \"Conjunto de comida conformado por una pizza, un perro caliente y un sánduche\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"camiseta\",\n\t\t\t\talt1: \"camiseta\",\n\t\t\t\tsrc2: \"conjunto-camisetas\",\n\t\t\t\talt2: \"conjunto conformado por dos camisetas de hombre y dos camisetas de mujer\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\trandomItems: true,\n\t\trandomTargets: true,\n\t\tborder: false,\n\t\tpadding: false\n\t};\n});\n\nmat105.controller('Act4Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"conjunto-cubiertos\",\n\t\t\t\talt: \"Conjunto conformado por una cuchara, un tenedor y un cuchillo\",\n\t\t\t\toptions: [\n\t\t\t\t\t{  src: \"tenedor\", alt: \"tenedor\", answer: false  },\n\t\t\t\t\t{  src: \"bombillo\", alt: \"bombillo\", answer: true  }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"conjunto-muebles\",\n\t\t\t\talt: \"Conjunto conformado por una cama, una silla, una mesa para el televisor y un sofá\",\n\t\t\t\toptions: [\n\t\t\t\t\t{  src: \"mueble\", alt: \"mueble\", answer: false  },\n\t\t\t\t\t{  src: \"tijeras\", alt: \"tijeras\", answer: true  }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"conjunto-mujeres\",\n\t\t\t\talt: \"Conjunto conformado por tres mujeres\",\n\t\t\t\toptions: [\n\t\t\t\t\t{  src: \"hombre\", alt: \"hombre\", answer: true  },\n\t\t\t\t\t{  src: \"mujer\", alt: \"mujer\", answer: false  }\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\toptionsPerRow: 2\n\t};\n\n});\n","var appManager = AppManager();\nvar mat106 = angular.module('mat106', ['activities']);\n\nappManager.configModule(mat106, {\n\tresources: '../resources/01/mat/06',\n\tcompetences1: 'Describo, comparo y cuantifico situaciones con números, en diferentes contextos y con diversas representaciones',\n\tcompetences2: 'Establece relaciones de pertenencia y no pertenencia entre los elementos de un conjunto',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia matemáticas lección N° 6”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: '¡Muy bien!, ahora ya identificas si un elemento pertenece o no a un conjunto',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Agrupo objetos por características iguales'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Agrupo objetos por características iguales'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1-1', \n\t\t\ttemplateUrl: 'act1_1', \n\t\t\tcontroller: 'Act1_1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1-2', \n\t\t\ttemplateUrl: 'act1_2', \n\t\t\tcontroller: 'Act1_2Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2-1', \n\t\t\ttemplateUrl: 'act2_1', \n\t\t\tcontroller: 'Act2_1Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2-2', \n\t\t\ttemplateUrl: 'act2_2', \n\t\t\tcontroller: 'Act2_2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3-1', \n\t\t\ttemplateUrl: 'act3_1', \n\t\t\tcontroller: 'Act3_1Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3-2', \n\t\t\ttemplateUrl: 'act3_2', \n\t\t\tcontroller: 'Act3_2Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t}\n\t]\n});\n\nmat106.controller('Con1Ctrl', function ($scope) {\n\t$scope.time = [0.2, 2, 1.5];\n});\n\nmat106.controller('Con2Ctrl', function ($scope) {\n\t$scope.time = [0.5, 3.7, 0.6, 0.2, 3.3];\n});\n\nmat106.controller('Act1_1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tsound: 'conjunto-mascotas',\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"conejo\",\n\t\t\t\talt: \"conejo\",\n\t\t\t\tw: 30, h: 0, t: 39, l: 60\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"elefante\",\n\t\t\t\talt: \"elefante\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"ave\",\n\t\t\t\talt: \"ave\",\n\t\t\t\tw: 30, h: 0, t: 50, l: 25\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"tigre\",\n\t\t\t\talt: \"tigre\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"perro\",\n\t\t\t\talt: \"perro\",\n\t\t\t\tw: 30, h: 0, t: 8, l: 51,\n\t\t\t\tstartsInGroup: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"gato\",\n\t\t\t\talt: \"gato\",\n\t\t\t\tw: 30, h: 0, t: 15, l: 14,\n\t\t\t\tstartsInGroup: true\n\t\t\t}\n\t\t],\n\t\tchances: 2,\n\t\tminRightAnswers: 2,\n\t};\n});\n\nmat106.controller('Act1_2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tsound: 'conjunto-balones',\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"balon-voleibol\",\n\t\t\t\talt: \"balón de voleibol\",\n\t\t\t\tw: 30, h: 0, t: 64, l: 37\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"balon-futbol-americano\",\n\t\t\t\talt: \"balón de fútbol\",\n\t\t\t\tw: 30, h: 0, t: 39, l: 60\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pelota\",\n\t\t\t\talt: \"pelota de playa\",\n\t\t\t\tw: 30, h: 0, t: 46, l: 9\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"raqueta\",\n\t\t\t\talt: \"raqueta de tenis\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"balon-baloncesto\",\n\t\t\t\talt: \"balón de baloncesto\",\n\t\t\t\tw: 30, h: 0, t: 8, l: 51,\n\t\t\t\tstartsInGroup: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"balon-futbol\",\n\t\t\t\talt: \"balón de fútbol\",\n\t\t\t\tw: 30, h: 0, t: 15, l: 14,\n\t\t\t\tstartsInGroup: true\n\t\t\t}\n\t\t],\n\t\tchances: 3,\n\t\tminRightAnswers: 2,\n\t};\n});\n\nmat106.controller('Act2_1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"maracas\",\n\t\t\t\talt: \"par de maracas\",\n\t\t\t\tanswer: false,\n\t\t\t\tw: 30, h: 0, t: 4, l: 37\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"zanahoria\",\n\t\t\t\talt: \"zanahoria\",\n\t\t\t\tw: 22, h: 0, t: 15, l: 14\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"guitarra\",\n\t\t\t\talt: \"guitarra eléctrica\",\n\t\t\t\tanswer: false,\n\t\t\t\tw: 30, h: 0, t: 21, l: 60\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"martillo\",\n\t\t\t\talt: \"martillo\",\n\t\t\t\tw: 30, h: 0, t: 51, l: 12\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"trompeta\",\n\t\t\t\talt: \"trompeta\",\n\t\t\t\tanswer: false,\n\t\t\t\tw: 42, h: 0, t: 70, l: 42\n\t\t\t}\n\t\t],\n\t\tchances: 2,\n\t\tminRightAnswers: 2,\n\t};\n});\n\nmat106.controller('Act2_2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"avion\",\n\t\t\t\talt: \"avión\",\n\t\t\t\tw: 54, h: 0, t: 5, l: 20\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"carro\",\n\t\t\t\talt: \"carro familiar de 4 puertas\",\n\t\t\t\tw: 40, h: 0, t: 23, l: 9\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"perro-II\",\n\t\t\t\talt: \"perro\",\n\t\t\t\tw: 35, h: 0, t: 32, l: 57\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"barco\",\n\t\t\t\talt: \"barco de gran tamaño\",\n\t\t\t\tw: 50, h: 0, t: 55, l: 4\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"moto\",\n\t\t\t\talt: \"moto deportiva\",\n\t\t\t\tw: 30, h: 0, t: 59, l: 58\n\t\t\t},\n\t\t],\n\t\tchances: 1,\n\t\tminRightAnswers: 1\n\t};\n});\n\nmat106.controller('Act3_1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tsound: 'conjunto-cocina',\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"sarten\",\n\t\t\t\talt: \"sartén\",\n\t\t\t\tw: 49, h: 0, t: 55, l: 33\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"tenedor\",\n\t\t\t\talt: \"tenedor\",\n\t\t\t\tw: 40, h: 0, t: 18, l: 60\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"computador\",\n\t\t\t\talt: \"computador portátil\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"nevera\",\n\t\t\t\talt: \"nevera\",\n\t\t\t\tw: 51, h: 0, t: 13, l: 4\n\t\t\t},\n\t\t],\n\t\tchances: 3,\n\t\tminRightAnswers: 2,\n\t};\n});\n\nmat106.controller('Act3_2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tsound: 'conjunto-navidad',\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"arbol-de-navidad\",\n\t\t\t\talt: \"Árbol de navidad, decorado con bolas, estrellas y bastones\",\n\t\t\t\tw: 40, h: 0, t: 14, l: 7\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"bola-de-navidad\",\n\t\t\t\talt: \"Bola decorativa navideña de color rojo\",\n\t\t\t\tw: 33, h: 0, t: 19, l: 57\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pelota-tenis\",\n\t\t\t\talt: \"pelota de tenis\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"papa-noel\",\n\t\t\t\talt: \"Papá Noel cargando una bolsa de tela\",\n\t\t\t\tw: 43, h: 0, t: 52, l: 32\n\t\t\t}\n\t\t],\n\t\tchances: 3,\n\t\tminRightAnswers: 2\n\t};\n});\n\nmat106.controller('Act4Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"conejo\",\n\t\t\t\talt: \"conejo\",\n\t\t\t\tanswer: false,\n\t\t\t\tw: 30, h: 0, t: 25, l: 3\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"elefante\",\n\t\t\t\talt: \"elefante\",\n\t\t\t\tw: 30, h: 0, t: 36, l: 37\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"rinoceronte\",\n\t\t\t\talt: \"rinoceronte\",\n\t\t\t\tw: 35, h: 0, t: 56, l: 57\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"tigre\",\n\t\t\t\talt: \"tigre\",\n\t\t\t\tw: 30, h: 0, t: 65, l: 19\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"perro\",\n\t\t\t\talt: \"perro\",\n\t\t\t\tanswer: false,\n\t\t\t\tw: 30, h: 0, t: 18, l: 63\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"gato\",\n\t\t\t\talt: \"gato\",\n\t\t\t\tanswer: false,\n\t\t\t\tw: 30, h: 0, t: 4, l: 37\n\t\t\t}\n\t\t],\n\t\tchances: 3,\n\t\tminRightAnswers: 2,\n\t};\n});\n","var appManager = AppManager();\nvar mat107 = angular.module('mat107', ['activities']);\n\nappManager.configModule(mat107, {\n\tresources: '../resources/01/mat/07',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia matemáticas lección N° 7”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: '¡Muy bien!, has aprendido mucho',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Vamos a repasar'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle: 'Actividad 5',\n\t\t},\n\t]\n});\n\nmat107.controller('Con1Ctrl', function ($scope) {\n\t$scope.time = [0.2, 2, 1.5];\n});\n\nmat107.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tgroups: [\n\t\t\t{\n\t\t\tsample: { class: 'red-circle' },\n\t\t\titems: [\n\t\t\t\t{ class: 'red-circle', answer: true },\n\t\t\t\t{ class: 'blue-triangle' },\n\t\t\t\t{ class: 'green-square' }\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tsample: { class: 'yellow-rectangle' },\n\t\t\titems: [\n\t\t\t\t{ class: 'yellow-rectangle', answer: true },\n\t\t\t\t{ class: 'green-square' },\n\t\t\t\t{ class: 'blue-triangle' }\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tsample: { class: 'green-square' },\n\t\t\titems: [\n\t\t\t\t{ class: 'green-square', answer: true },\n\t\t\t\t{ class: 'red-circle' },\n\t\t\t\t{ class: 'yellow-rectangle' }\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tsample: { class: 'blue-triangle' },\n\t\t\titems: [\n\t\t\t\t{ class: 'blue-triangle', answer: true },\n\t\t\t\t{ class: 'green-square' },\n\t\t\t\t{ class: 'red-circle' }\n\t\t\t]\n\t\t},\n\t\t],\n\t\tchances: 4,\n\t\tminRightAnswers: 3\n\t};\n\n});\n\nmat107.controller('Act2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tsound: 'conjunto',\n\t\titems: [\n\t\t\t{\n\t\t\tsrc: \"eme\",\n\t\t\talt: \"eme minúscula gris\",\n\t\t\tanswer: false,\n\t\t\tw: 30, h: 0, t: 0, l: 0\n\t\t},\n\t\t{\n\t\t\tsrc: \"cinco\",\n\t\t\talt: \"cinco azul\",\n\t\t\tw: 30, h: 0, t: 65, l: 35\n\t\t},\n\t\t{\n\t\t\tsrc: \"nueve\",\n\t\t\talt: \"nueve rojo\",\n\t\t\tw: 30, h: 0, t: 17, l: 6\n\t\t},\n\t\t{\n\t\t\tsrc: \"siete\",\n\t\t\talt: \"siete amarillo\",\n\t\t\tw: 30, h: 0, t: 15, l: 64\n\t\t},\n\t\t{\n\t\t\tsrc: \"seis\",\n\t\t\talt: \"seis violeta\",\n\t\t\tw: 30, h: 0, t: 47, l: 65\n\t\t},\n\t\t{\n\t\t\tsrc: \"ocho\",\n\t\t\talt: \"ocho morado\",\n\t\t\tw: 30, h: 0, t: 47, l: 6\n\t\t},\n\t\t{\n\t\t\tsrc: \"cuatro\",\n\t\t\talt: \"cuatro naranja\",\n\t\t\tw: 30, h: 0, t: 0, l: 34\n\t\t},\n\t\t{\n\t\t\tsrc: \"i\",\n\t\t\talt: \"i minúscula verde\",\n\t\t\tanswer: false,\n\t\t\tw: 30, h: 0, t: 0, l: 0\n\t\t},\n\t\t],\n\t\tchances: 6,\n\t\tminRightAnswers: 4\n\t};\n});\n\nmat107.controller('Act3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"avion\",\n\t\t\t\talt: \"avión\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"carro\",\n\t\t\t\talt: \"carro\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"moto\",\n\t\t\t\talt: \"moto\"\n\t\t\t}\n\t\t],\n\t\tsequence: [0, 1, 2], // Secuencia de elementos en base al index en el array\n\t\tspaces: 3, // Espacios a llenar\n\t\tminRightAnswers: 2\n\t};\n});\n\nmat107.controller('Act4Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tnumber: 1,\n\t\t\t\tsrc: \"flor\",\n\t\t\t\talt: \"flor de color fucsia\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 2,\n\t\t\t\tsrc: \"hoja\",\n\t\t\t\talt: \"hoja de color verde\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 3,\n\t\t\t\tsrc: \"naranja\",\n\t\t\t\talt: \"naranja\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 4,\n\t\t\t\tsrc: \"manzana\",\n\t\t\t\talt: \"manzana roja\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 5,\n\t\t\t\tsrc: \"estrella\",\n\t\t\t\talt: \"estrella amarilla\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 6,\n\t\t\t\tsrc: \"corazon\",\n\t\t\t\talt: \"corazón\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 7,\n\t\t\t\tsrc: \"pera\",\n\t\t\t\talt: \"pera verde\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 8,\n\t\t\t\tsrc: \"fresa\",\n\t\t\t\talt: \"fresa roja\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumber: 9,\n\t\t\t\tsrc: \"sol\",\n\t\t\t\talt: \"sol de color amarillo y naranjado\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 5\n\t};\n});\n\nmat107.controller('Act5Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\n\t\t\t\tsrc: \"sofa\",\n\t\t\t\talt: \"sofa de color fucsia\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"cama\",\n\t\t\t\talt: \"cama\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"computador\",\n\t\t\t\talt: \"computador\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"nevera\",\n\t\t\t\talt: \"nevera\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"tenedor\",\n\t\t\t\talt: \"tenedor\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"sarten\",\n\t\t\t\talt: \"sartén\"\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 4\n\t};\n});\n","var appManager = AppManager();\nvar nat101 = angular.module('nat101', ['activities']);\n\nappManager.configModule(nat101, {\n\tresources: '../resources/01/nat/01',\n\tcompetences1: 'Describo características de seres vivos y objetos inertes, establezco semejanzas y diferencias entre ellos',\n\tcompetences2: 'Identifico seres vivos de mi entorno, siendo capaz de establecer diferencias y semejanzas',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia naturales lección N° 1”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: '¡Felicitaciones amiguito,  ahora reconoces las plantas y los animales!',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Lección 1: Las plantas y los animales'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t},\n\t]\n});\n\nnat101.controller('Con1Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"plantas\",\n\t\t\talt: \"Árbol rodeado por flores y pasto\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"animales\",\n\t\t\talt: \"Vaca y caballo comiendo pasto\"\n\t\t}\n\t]\n});\n\nnat101.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"palmas.png\",\n\t\t\t\talt: \"palmera\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"conejo.png\",\n\t\t\t\talt: \"conejo\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"rosa.png\",\n\t\t\t\talt: \"rosa\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"arbol.png\",\n\t\t\t\talt: \"árbol\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"mariposa.png\",\n\t\t\t\talt: \"mariposa\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"gallina.png\",\n\t\t\t\talt: \"gallina\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3\n\t};\n});\n\nnat101.controller('Act2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"palmas.png\",\n\t\t\t\talt: \"palmera\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"conejo.png\",\n\t\t\t\talt: \"conejo\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"rosa.png\",\n\t\t\t\talt: \"rosa\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"arbol.png\",\n\t\t\t\talt: \"árbol\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"mariposa.png\",\n\t\t\t\talt: \"mariposa\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"gallina.png\",\n\t\t\t\talt: \"gallina\",\n\t\t\t\tanswer: false\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3\n\t};\n});\n\nnat101.controller('Act3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tcanvas: 'animales-y-plantas',\n\t\ttargets: [\n\t\t\t{ w: 32, h: 46, t: 13, l: 68 }, // arbol\n\t\t\t{ w: 23, h: 23, t: 6, l: 37 }, // ave arriba \n\t\t\t{ w: 23, h: 23, t: 21, l: 46 }, // ave abajo\n\t\t\t{ w: 26, h: 37, t: 61, l: 68 }, // flores\n\t\t\t{ w: 25, h: 30, t: 45, l: 48 }, // mariposa\n\t\t\t{ w: 25, h: 50, t: 0, l: 13 }, // palmera atrás\n\t\t\t{ w: 27, h: 81, t: 19, l: 0 }, // palmera adelante\n\t\t\t{ w: 32, h: 50, t: 50, l: 14 }, // ardilla\n\t\t],\n\t\tminRightAnswers: 5\n\t};\n});\n\nnat101.controller('Act4Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"mariposa.png\",\n\t\t\t\talt: \"mariposa\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"araucaria.png\",\n\t\t\t\talt: \"árbol\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"perro.png\",\n\t\t\t\talt: \"perro\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"naranjo.png\",\n\t\t\t\talt: \"naranjo\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"ardilla.png\",\n\t\t\t\talt: \"ardilla\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"rosa.png\",\n\t\t\t\talt: \"rosa\",\n\t\t\t}\n\t\t],\n\t\tpriority: true,\n\t\tminRightAnswers: 2\n\t};\n});\n","var appManager = AppManager();\nvar nat102 = angular.module('nat102', ['activities']);\n\nappManager.configModule(nat102, {\n\tresources: '../resources/01/nat/02',\n\tcompetences1: 'Identifico y describo la flora, la fauna, el agua y el suelo de mi entorno',\n\tcompetences2: 'Identifica en su entorno la flora y la fauna, dándole importancia a los elementos naturales',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia naturales lección N° 2”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: '¡Felicitaciones amiguito,  ahora ya sabes más sobre las plantas!',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Las plantas'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Las plantas'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-3', \n\t\t\ttemplateUrl: 'con3', \n\t\t\tcontroller: 'Con3Ctrl',\n\t\t\ttitle: 'Las plantas'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-4', \n\t\t\ttemplateUrl: 'con4', \n\t\t\tcontroller: 'Con4Ctrl',\n\t\t\ttitle: 'Las plantas'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle: 'Actividad 5',\n\t\t},\n\t]\n});\n\nnat102.controller('Con1Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"agua\",\n\t\t\talt: \"Paisaje donde se muestra un río rodeado de vegetación\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"suelo\",\n\t\t\talt: \"imagen donde se muestra el suelo y una parte de pasto cubriéndolo por encima\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"luz\",\n\t\t\talt: \"imagen que muestra el sol y sus rayos de luz cayendo Sobre un árbol florecido\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"aire\",\n\t\t\talt: \"imagen donde se muestra el cielo y el aire en movimiento rozando un árbol\"\n\t\t}\n\t]\n});\n\nnat102.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tcanvas: 'planta-funciones',\n\t\talt: 'Planta completa, donde se muestra todas las partes de una planta, las hojas, las raíces, el tallo, el fruto, las ramas y las flores',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttitle: 'Hoja',\n\t\t\t\tresource: \"hoja\",\n\t\t\t\ttext: 'Es la parte de la planta que se encarga de la respiración',\n\t\t\t\tposition: { w: 7, t: 0, l: 22 } // Ems\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Flor',\n\t\t\t\tresource: \"flor\",\n\t\t\t\ttext: 'Este órgano tiene como función participar en la reproducción de la planta',\n\t\t\t\tposition: { w: 10.6, t: 5.4, l: 18.4 } // Ems\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Fruto',\n\t\t\t\tresource: \"fruto\",\n\t\t\t\ttext: 'Es el órgano encargado de contener y proteger las semillas',\n\t\t\t\tposition: { w: 18.2, t: 8.7, l: 8.2 } // Ems\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Tallo',\n\t\t\t\tresource: \"tallo\",\n\t\t\t\ttext: 'Tiene como función sostener todos los órganos de la planta',\n\t\t\t\tposition: { w: 16, t: 12, l: 13 } // Ems\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Raíz',\n\t\t\t\tresource: \"raiz\",\n\t\t\t\ttext: 'Es la parte de la planta encargada de obtener los nutrientes del suelo',\n\t\t\t\tposition: { w: 11, t: 18, l: 18 } // Ems\n\t\t\t},\n\t\t]\n\n\t};\n});\n\nnat102.controller('Con3Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"arbol\",\n\t\t\talt: \"Árbol de naranjas, rodeado por semillas germinando\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"naranja\",\n\t\t\talt: \"naranja\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"semilla\",\n\t\t\talt: \"semilla de naranja\"\n\t\t},\n\t]\n});\n\nnat102.controller('Con4Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\ttitle: \"Hierbas\",\n\t\t\t\tsrc: \"hierbas\",\n\t\t\t\talt: \"Hierbas\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Arbustos\",\n\t\t\t\tsrc: \"arbusto\",\n\t\t\t\talt: \"Arbusto de tamaño pequeño, cuyo tronco se ramifica desde la base\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Árboles\",\n\t\t\t\tsrc: \"arbol-II\",\n\t\t\t\talt: \"Árbol de gran altura, cuyo tronco se comienza a ramificar muy arriba de la base\"\n\t\t\t},\n\t\t]\n\t};\n});\n\nnat102.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"dulces\",\n\t\t\t\talt: \"dulces\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"luz1\",\n\t\t\t\talt: \"luz\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"agua-II\",\n\t\t\t\talt: \"agua\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"suelo\",\n\t\t\t\talt: \"suelo\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"cama\",\n\t\t\t\talt: \"cama\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"aire1\",\n\t\t\t\talt: \"aire\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 4\n\t};\n});\n\nnat102.controller('Act2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"banano.png\",\n\t\t\t\talt: \"banano\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pinia.png\",\n\t\t\t\talt: \"piña\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"uvas.png\",\n\t\t\t\talt: \"uvas\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"naranja.png\",\n\t\t\t\talt: \"naranja\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"manzana.png\",\n\t\t\t\talt: \"manzana\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"sandia.png\",\n\t\t\t\talt: \"sandía\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t],\n\t\tchances: 4,\n\t\tminRightAnswers: 3,\n\t\titemsPerRow: 3\n\t};\n});\n\nnat102.controller('Act3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tcanvas: 'planta',\n\t\ttargets: [\n\t\t\t{ \n\t\t\t\ttext: \"Flor\",\n\t\t\t\tw: 15, h: 15, t: 28, l: 33 \n\t\t\t},\n\t\t\t{ \n\t\t\t\ttext: \"Hoja\",\n\t\t\t\tw: 15, h: 15, t: 29, l: 12 \n\t\t\t},\n\t\t\t{ \n\t\t\t\ttext: \"Fruto\",\n\t\t\t\tw: 15, h: 15, t: 32, l: 65 \n\t\t\t},\n\t\t\t{ \n\t\t\t\ttext: \"Tallo\",\n\t\t\t\tw: 15, h: 15, t: 48, l: 44 \n\t\t\t},\n\t\t\t{ \n\t\t\t\ttext: \"Raíz\",\n\t\t\t\tw: 15, h: 15, t: 69, l: 57 \n\t\t\t},\n\t\t\t{ \n\t\t\t\ttext: \"Rama\",\n\t\t\t\tw: 15, h: 15, t: 24, l: 50 \n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 4\n\t};\n});\n\nnat102.controller('Act4Ctrl', function ($scope) {\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"hoja\",\n\t\t\t\talt: \"hoja\",\n\t\t\t\ttitle: \"Respiración\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"fruto\",\n\t\t\t\talt: \"fruto\",\n\t\t\t\ttitle: \"Protección de las semillas\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"tallo\",\n\t\t\t\talt: \"tallo\",\n\t\t\t\ttitle: \"Sostener todos los órganos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"raices\",\n\t\t\t\talt: \"raíces\",\n\t\t\t\ttitle: \"Obtener los nutrientes\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"flor\",\n\t\t\t\talt: \"flor\",\n\t\t\t\ttitle: \"Reproducción\"\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 3,\n\t\trandomItems: true,\n\t\trandomTargets: true,\n\t\tpadding: false\n\t};\n});\n\nnat102.controller('Act5Ctrl', function ($scope) {\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"mesa\",\n\t\t\t\talt: \"Mesa\",\n\t\t\t\ttitle: \"Construir Objetos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"frutas\",\n\t\t\t\talt: \"conjunto de frutas: sandía, piña, manzana, naranja y racimo de uvas\",\n\t\t\t\ttitle: \"Alimentación\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"bebida\",\n\t\t\t\talt: \"Pocillo que contiene una bebida preparada con manzanilla\",\n\t\t\t\ttitle: \"Aliviar un dolor\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"florero\",\n\t\t\t\talt: \"Florero que contiene varias flores de diferentes colores y formas\",\n\t\t\t\ttitle: \"Decorar nuestra casa\"\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 3,\n\t\trandomItems: true,\n\t\trandomTargets: true,\n\t\tborder: false\n\t};\n});\n\n","var appManager = AppManager();\nvar nat103 = angular.module('nat103', ['activities']);\n\nappManager.configModule(nat103, {\n\tresources: '../resources/01/nat/03',\n\tcompetences1: 'Identifico y describo la flora, la fauna, el agua y el suelo de mi entorno',\n\tcompetences2: 'Identifica en su entorno la flora y la fauna dándole importancia a los elementos naturales',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia naturales lección N° 3”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: '¡Felicitaciones amiguito,  ahora ya sabes más sobre los animales!',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: function () {},\n\t\t\ttitle: 'Los animales'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Los animales'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-3', \n\t\t\ttemplateUrl: 'con3', \n\t\t\tcontroller: 'Con3Ctrl',\n\t\t\ttitle: 'Los animales'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4-1', \n\t\t\ttemplateUrl: 'act4_1', \n\t\t\tcontroller: 'Act4_1Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4-2', \n\t\t\ttemplateUrl: 'act4_2', \n\t\t\tcontroller: 'Act4_2Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4-3', \n\t\t\ttemplateUrl: 'act4_3', \n\t\t\tcontroller: 'Act4_3Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle: 'Actividad 5',\n\t\t},\n\t]\n});\n\nnat103.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"oviparos\",\n\t\t\talt: \"Gallina con pollitos saliendo de los huevos\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"viviparos\",\n\t\t\talt: \"Mujer en embarazo con su hijo al lado\"\n\t\t},\n\t]\n});\n\nnat103.controller('Con3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\ttitle: \"Acuáticos\",\n\t\t\t\tsrc: \"acuaticos\",\n\t\t\t\talt: \"Pez y tortuga nadando y un cangrejo caminando en el fondo del mar\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Aéreos\",\n\t\t\t\tsrc: \"aereos\",\n\t\t\t\talt: \"Un búho y un pájaro posados sobre las ramas de un árbol y dos garzas volando\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Terrestres\",\n\t\t\t\tsrc: \"terrestres\",\n\t\t\t\talt: \"Una jirafa, un león y un mico en la selva\"\n\t\t\t},\n\t\t]\n\t};\n});\n\nnat103.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tcanvas: 'huevo',\n\t\tcanvasAlt: 'figura en forma de huevo',\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"cerdo\",\n\t\t\t\talt: \"cerdo\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"sapo\",\n\t\t\t\talt: \"rana\",\n\t\t\t\tw: 30, h: 0, t: 36, l: 16,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"ave\",\n\t\t\t\talt: \"pájaro\",\n\t\t\t\tw: 44, h: 0, t: 1, l: 27,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"tortuga\",\n\t\t\t\talt: \"tortuga\",\n\t\t\t\tw: 35, h: 0, t: 32, l: 47,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"gallina\",\n\t\t\t\talt: \"gallina\",\n\t\t\t\tw: 40, h: 0, t: 56, l: 30,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"caballo\",\n\t\t\t\talt: \"caballo\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t],\n\t\tchances: 4,\n\t\tminRightAnswers: 3\n\t};\n});\n\nnat103.controller('Act2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tcanvas: 'circulo',\n\t\tcanvasAlt: 'figura en forma de círculo',\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"perro\",\n\t\t\t\talt: \"perro\",\n\t\t\t\tw: 45, h: 0, t: 0, l: 25,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"bebe\",\n\t\t\t\talt: \"bebé\",\n\t\t\t\tw: 45, h: 0, t: 30, l: 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"ave\",\n\t\t\t\talt: \"pájaro\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"gallina\",\n\t\t\t\talt: \"gallina\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"cerdo\",\n\t\t\t\talt: \"cerdo\",\n\t\t\t\tw: 45, h: 0, t: 55, l: 26,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"gato\",\n\t\t\t\talt: \"gato\",\n\t\t\t\tw: 45, h: 0, t: 28, l: 56,\n\t\t\t},\n\t\t],\n\t\tchances: 4,\n\t\tminRightAnswers: 3\n\t};\n});\n\nnat103.controller('Act3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tgroups: [\n\t\t\t{\n\t\t\t\ttitle: 'Selva',\n\t\t\t\tresource: 'selva',\n\t\t\t\talt: \"Selva donde se muestran muchas plantas\",\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: \"tigre\",\n\t\t\t\t\t\talt: \"tigre\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: \"mico\",\n\t\t\t\t\t\talt: \"mico\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: \"guacamaya\",\n\t\t\t\t\t\talt: \"guacamaya\"\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Finca',\n\t\t\t\tresource: 'finca',\n\t\t\t\talt: \"finca\",\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: \"vaca\",\n\t\t\t\t\t\talt: \"vaca\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: \"cerdo\",\n\t\t\t\t\t\talt: \"cerdo\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: \"perro\",\n\t\t\t\t\t\talt: \"perro\"\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 4,\n\t\tchances: 6\n\t};\n});\n\nnat103.controller('Act4_1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tcanvas: 'circulo',\n\t\tcanvasAlt: 'figura en forma de círculo',\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"perro\",\n\t\t\t\talt: \"perro\",\n\t\t\t\tw: 45, h: 0, t: 7, l: 27,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"ave\",\n\t\t\t\talt: \"pájaro\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"mariposa\",\n\t\t\t\talt: \"mariposa\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pez\",\n\t\t\t\talt: \"pez\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pato\",\n\t\t\t\talt: \"pato\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"gato\",\n\t\t\t\talt: \"gato\",\n\t\t\t\tw: 45, h: 0, t: 46, l: 28,\n\t\t\t},\n\t\t],\n\t\tchances: 2,\n\t\tminRightAnswers: 2\n\t};\n});\n\nnat103.controller('Act4_2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tcanvas: 'nube',\n\t\tcanvasAlt: 'figura en forma de nube',\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"perro\",\n\t\t\t\talt: \"perro\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"ave\",\n\t\t\t\talt: \"pájaro\",\n\t\t\t\tw: 45, h: 0, t: 34, l: 49,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"mariposa\",\n\t\t\t\talt: \"mariposa\",\n\t\t\t\tw: 45, h: 0, t: 29, l: 8,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pez\",\n\t\t\t\talt: \"pez\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pato\",\n\t\t\t\talt: \"pato\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"gato\",\n\t\t\t\talt: \"gato\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t],\n\t\tchances: 2,\n\t\tminRightAnswers: 2\n\t};\n});\n\nnat103.controller('Act4_3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tcanvas: 'gota-de-agua',\n\t\tcanvasAlt: 'figura en forma de gota de agua',\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"perro\",\n\t\t\t\talt: \"perro\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"ave\",\n\t\t\t\talt: \"pájaro\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"mariposa\",\n\t\t\t\talt: \"mariposa\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pez\",\n\t\t\t\talt: \"pez\",\n\t\t\t\tw: 45, h: 0, t: 54, l: 28,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pato\",\n\t\t\t\talt: \"pato\",\n\t\t\t\tw: 45, h: 0, t: 17, l: 28,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"gato\",\n\t\t\t\talt: \"gato\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t],\n\t\tchances: 2,\n\t\tminRightAnswers: 2\n\t};\n});\n\nnat103.controller('Act5Ctrl', function ($scope) {\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc1: \"vaca\",\n\t\t\t\talt1: \"vaca\",\n\t\t\t\tsrc2: \"leche\",\n\t\t\t\talt2: \"vaso y caja con leche\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"oveja\",\n\t\t\t\talt1: \"oveja\",\n\t\t\t\tsrc2: \"lana\",\n\t\t\t\talt2: \"lana\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"caballo-II\",\n\t\t\t\talt1: \"caballo\",\n\t\t\t\tsrc2: \"montar-a-caballo\",\n\t\t\t\talt2: \"señor montando a caballo\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"perro-II\",\n\t\t\t\talt1: \"perro\",\n\t\t\t\tsrc2: \"senor-con-perro\",\n\t\t\t\talt2: \"señor cargando un perro\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"gallina\",\n\t\t\t\talt1: \"gallina\",\n\t\t\t\tsrc2: \"huevo-II\",\n\t\t\t\talt2: \"huevo\"\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 3,\n\t\trandomItems: true,\n\t\trandomTargets: true\n\t};\n});\n","var appManager = AppManager();\nvar nat104 = angular.module('nat104', ['activities']);\n\nappManager.configModule(nat104, {\n\tresources: '../resources/01/nat/04',\n\tcompetences1: 'Identifico y describo la flora, la fauna, el agua y el suelo de mi entorno',\n\tcompetences2: 'Identifica en su entorno la flora y la fauna dándole importancia a los elementos naturales',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia naturales lección N° 4”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: '¡Felicitaciones amiguito,  ahora ya sabes más sobre la tierra, la luna y el sol!',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Mi planeta tierra'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Mi planeta tierra'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-3', \n\t\t\ttemplateUrl: 'con3', \n\t\t\tcontroller: 'Con3Ctrl',\n\t\t\ttitle: 'Mi planeta tierra'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle: 'Actividad 5',\n\t\t},\n\t]\n});\n\nnat104.controller('Con1Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"tierra\",\n\t\t\talt: \"planeta tierra\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"sol\",\n\t\t\talt: \"sol\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"luna\",\n\t\t\talt: \"luna\"\n\t\t}\n\t]\n});\n\nnat104.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"luna-nueva\",\n\t\t\talt: \"Cielo con estrellas donde  la luna no aparece\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"media-luna\",\n\t\t\talt: \"Cielo con estrellas donde sólo se muestra una parte de la luna\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"luna-llena\",\n\t\t\talt: \"Cielo con estrellas donde aparece la luna Completa, con su forma circular\"\n\t\t}\n\t]\n});\n\nnat104.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"luna-nueva\",\n\t\t\talt: \"Cielo con estrellas donde  la luna no aparece\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"media-luna\",\n\t\t\talt: \"Cielo con estrellas donde sólo se muestra una parte de la luna\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"luna-llena\",\n\t\t\talt: \"Cielo con estrellas donde aparece la luna Completa, con su forma circular\"\n\t\t}\n\t]\n});\n\nnat104.controller('Con3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tcanvas: 'planetas',\n\t\tcanvasAlt: 'Imagen donde se muestra el sol y los nueve planetas girando alrededor de él',\n\t\ttargets: [\n\t\t\t{ w: 10, h: 54, t: 26, l: 21, src: \"mercurio\" },\n\t\t\t{ w: 9, h: 61, t: 26, l: 31, src: \"venus\" },\n\t\t\t{ w: 9, h: 61, t: 22, l: 40, src: \"tierra\" },\n\t\t\t{ w: 8, h: 61, t: 26, l: 49, src: \"marte\" },\n\t\t\t{ w: 8, h: 56, t: 22, l: 57, src: \"jupiter\" },\n\t\t\t{ w: 11, h: 79, t: 12, l: 65, src: \"saturno\" },\n\t\t\t{ w: 7, h: 58, t: 33, l: 76, src: \"urano\" },\n\t\t\t{ w: 9, h: 60, t: 20, l: 83, src: \"neptuno\" },\n\t\t\t{ w: 8, h: 57, t: 34, l: 92, src: \"pluton\" },\n\t\t]\n\t};\n});\n\nnat104.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\t// Cada respuesta debe tener un Id único, que es usado para definir las respuestas de cada item\n\t\tanswers: [\n\t\t\t// Día\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tsrc: \"sol-II\",\n\t\t\t\talt: \"sol\"\n\t\t\t},\n\t\t\t// Noche\n\t\t\t{\n\t\t\t\tid: 2,\n\t\t\t\tsrc: \"luna-II\",\n\t\t\t\talt: \"luna\"\n\t\t\t},\n\t\t],\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"oficio\",\n\t\t\t\talt: \"Niña trapeando\",\n\t\t\t\tanswers: [1, 2]\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"banarse\",\n\t\t\t\talt: \"Niño bañándose\",\n\t\t\t\tanswers: [1, 2]\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"jugar\",\n\t\t\t\talt: \"Niño y niña Jugando con un balón\",\n\t\t\t\tanswers: [1, 2]\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"cepillarse-los-dientes\",\n\t\t\t\talt: \"Niña cepillándose los dientes\",\n\t\t\t\tanswers: [1, 2]\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"estudiar\",\n\t\t\t\talt: \"Niño estudiando\",\n\t\t\t\tanswers: [1, 2]\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"dormir\",\n\t\t\t\talt: \"Niño durmiendo en su cama\",\n\t\t\t\tanswers: [2]\n\t\t\t},\n\t\t],\n\t\tchances: 6,\n\t\tminRightAnswers: 4\t\n\t};\n});\n\nnat104.controller('Act2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"bebe\",\n\t\t\t\talt: \"bebé\",\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"arbol\",\n\t\t\t\talt: \"árbol\",\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"piedra\",\n\t\t\t\talt: \"tres piedras\",\n\t\t\t\tanswer: false\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pajaro\",\n\t\t\t\talt: \"pájaro\",\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3\n\t};\n});\n\nnat104.controller('Act3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tresource: \"media-luna\",\n\t\t\t\talt: \"Cielo con estrellas donde sólo se muestra una parte de la luna\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"luna-llena\",\n\t\t\t\talt: \"Cielo con estrellas donde aparece la luna completa, con su forma circular\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"luna-nueva\",\n\t\t\t\talt: \"Cielo con estrellas donde  la luna no aparece\"\n\t\t\t}\n\t\t],\n\t\tchances: 3,\n\t\tminRightAnswers: 2\n\t};\n});\n\nnat104.controller('Act4Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tcanvas: 'sin-planetas',\n\t\tcanvasAlt: 'Imagen del espacio donde aparecen el sol y las orbitas donde se ubican los planetas',\n\t\tsample: 'planetas',\n\t\tsampleAlt: 'Imagen donde se muestra el sol y los nueve planetas girando alrededor de él',\n\t\ttargets: [\n\t\t\t{ \n\t\t\t\tsrc: \"mercurio\",\n\t\t\t\ttargetPos: { w: 10, h: 100, t: 0, l: 21 },\n\t\t\t\tinnerPos: { w: 175, h: 54, t: 52, l: -30 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"venus\",\n\t\t\t\ttargetPos: { w: 8, h: 100, t: 0, l: 31 },\n\t\t\t\tinnerPos: { w: 228, h: 61, t: 62.4, l: -55 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"tierra-III\",\n\t\t\t\talt: \"tierra\",\n\t\t\t\ttargetPos: { w: 8, h: 100, t: 0, l: 39 },\n\t\t\t\tinnerPos: { w: 203, h: 62, t: 62.3, l: -41 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"marte\",\n\t\t\t\ttargetPos: { w: 8, h: 100, t: 0, l: 47 },\n\t\t\t\tinnerPos: { w: 215, h: 61, t: 63, l: -44 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"jupiter\",\n\t\t\t\talt: \"júpiter\",\n\t\t\t\ttargetPos: { w: 9, h: 100, t: 0, l: 55 },\n\t\t\t\tinnerPos: { w: 200, h: 56, t: 50, l: -35 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"saturno\",\n\t\t\t\ttargetPos: { w: 9, h: 100, t: 0, l: 64 },\n\t\t\t\tinnerPos: { w: 181, h: 79, t: 38, l: -35 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"urano\",\n\t\t\t\ttargetPos: { w: 9, h: 100, t: 0, l: 73 },\n\t\t\t\tinnerPos: { w: 204, h: 58, t: 51, l: -42 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"neptuno\",\n\t\t\t\ttargetPos: { w: 10, h: 100, t: 0, l: 82 },\n\t\t\t\tinnerPos: { w: 175, h: 59, t: 45, l: -42 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"pluton\",\n\t\t\t\talt: \"plutón\",\n\t\t\t\ttargetPos: { w: 8, h: 100, t: 0, l: 92 },\n\t\t\t\tinnerPos: { w: 236, h: 57, t: 59, l: -77 }\n\t\t\t}\n\t\t],\n\t\trightAnswerCallback: function (item) {\n\t\t\t$('#audio-' + item.src)[0].play();\n\t\t},\n\t\tminRightAnswers: 5,\n\t\titemsContainerHeight: '112px'\n\t};\n});\n\nnat104.controller('Act5Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tcanvas: 'sin-planetas',\n\t\tcanvasAlt: 'Imagen del espacio donde aparecen el sol y las orbitas donde se ubican los planetas',\n\t\ttargets: [\n\t\t\t{ \n\t\t\t\tsrc: \"mercurio\",\n\t\t\t\ttargetPos: { w: 10, h: 100, t: 0, l: 21 },\n\t\t\t\tinnerPos: { w: 175, h: 54, t: 52, l: -30 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"venus\",\n\t\t\t\ttargetPos: { w: 8, h: 100, t: 0, l: 31 },\n\t\t\t\tinnerPos: { w: 228, h: 61, t: 62.4, l: -55 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"tierra-III\",\n\t\t\t\talt: \"tierra\",\n\t\t\t\ttargetPos: { w: 8, h: 100, t: 0, l: 39 },\n\t\t\t\tinnerPos: { w: 203, h: 62, t: 62.3, l: -41 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"marte\",\n\t\t\t\ttargetPos: { w: 8, h: 100, t: 0, l: 47 },\n\t\t\t\tinnerPos: { w: 215, h: 61, t: 63, l: -44 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"jupiter\",\n\t\t\t\talt: \"júpiter\",\n\t\t\t\ttargetPos: { w: 9, h: 100, t: 0, l: 55 },\n\t\t\t\tinnerPos: { w: 200, h: 56, t: 50, l: -35 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"saturno\",\n\t\t\t\ttargetPos: { w: 9, h: 100, t: 0, l: 64 },\n\t\t\t\tinnerPos: { w: 181, h: 79, t: 38, l: -35 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"urano\",\n\t\t\t\ttargetPos: { w: 9, h: 100, t: 0, l: 73 },\n\t\t\t\tinnerPos: { w: 204, h: 58, t: 51, l: -42 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"neptuno\",\n\t\t\t\ttargetPos: { w: 10, h: 100, t: 0, l: 82 },\n\t\t\t\tinnerPos: { w: 175, h: 59, t: 45, l: -42 }\n\t\t\t},\n\t\t\t{ \n\t\t\t\tsrc: \"pluton\",\n\t\t\t\talt: \"plutón\",\n\t\t\t\ttargetPos: { w: 8, h: 100, t: 0, l: 92 },\n\t\t\t\tinnerPos: { w: 236, h: 57, t: 59, l: -77 }\n\t\t\t}\n\t\t],\n\t\trightAnswerCallback: function (item) {\n\t\t\t$('#audio-' + item.src)[0].play();\n\t\t},\n\t\tminRightAnswers: 5,\n\t\titemsContainerHeight: '112px'\n\t};\n});\n\n","var appManager = AppManager();\nvar nat105 = angular.module('nat105', ['activities']);\n\nappManager.configModule(nat105, {\n\tresources: '../resources/01/nat/05',\n\tcompetences1: 'Propongo y verifico diversas formas de medir sólidos y líquidos',\n\tcompetences2: 'Propone y verifica las diferentes formas que existen para medir las propiedades de los elementos',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia naturales lección N° 5”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: '¡Felicitaciones amiguito,  ahora ya sabes más sobre las propiedades de los objetos!',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Las propiedades de los objetos'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Las propiedades de los objetos'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-3', \n\t\t\ttemplateUrl: 'con3', \n\t\t\tcontroller: 'Con3Ctrl',\n\t\t\ttitle: 'Las propiedades de los objetos'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-4', \n\t\t\ttemplateUrl: 'con4', \n\t\t\tcontroller: 'Con4Ctrl',\n\t\t\ttitle: 'Las propiedades de los objetos'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-5', \n\t\t\ttemplateUrl: 'con5', \n\t\t\tcontroller: 'Con5Ctrl',\n\t\t\ttitle: 'Las propiedades de los objetos'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1-1', \n\t\t\ttemplateUrl: 'act1_1', \n\t\t\tcontroller: 'Act1_1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1-2', \n\t\t\ttemplateUrl: 'act1_2', \n\t\t\tcontroller: 'Act1_2Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1-3', \n\t\t\ttemplateUrl: 'act1_3', \n\t\t\tcontroller: 'Act1_3Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t}\n\t]\n});\n\nnat105.controller('Con1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\ttitle: \"Rectángulo\",\n\t\t\t\tcustomClass: \"figure rectangle\",\n\t\t\t\tsrc: \"rectangulo\",\n\t\t\t\talt: \"Cuadro de flores con forma de rectángulo\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Círculo\",\n\t\t\t\tcustomClass: \"figure circle\",\n\t\t\t\tsrc: \"circulo\",\n\t\t\t\talt: \"Reloj de pared con forma de círculo\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Cuadrado\",\n\t\t\t\tcustomClass: \"figure square\",\n\t\t\t\tsrc: \"cuadrado\",\n\t\t\t\talt: \"Hojas de colores con forma de cuadro\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Triángulo\",\n\t\t\t\tcustomClass: \"figure triangle\",\n\t\t\t\tsrc: \"triangulo\",\n\t\t\t\talt: \"Regla en forma de triángulo\"\n\t\t\t}\n\t\t]\n\t};\n});\n\nnat105.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"nevera\",\n\t\t\ttext: \"Nevera\",\n\t\t\taudio: \"grande\",\n\t\t\talt: \"Nevera\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"computador-II\",\n\t\t\ttext: \"Computador portátil\",\n\t\t\taudio: \"pequeno\",\n\t\t\talt: \"computador portátil\"\n\t\t},\n\t]\n});\n\nnat105.controller('Con3Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"hoja\",\n\t\t\ttext: \"Hoja de papel\",\n\t\t\taudio: \"liso\",\n\t\t\talt: \"hoja de papel\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"madera-II\",\n\t\t\ttext: \"Tabla de madera\",\n\t\t\taudio: \"aspero\",\n\t\t\talt: \"tabla de madera\"\n\t\t}\n\t]\n});\n\nnat105.controller('Con4Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"ladrillo\",\n\t\t\ttext: \"Ladrillo\",\n\t\t\taudio: \"pesado\",\n\t\t\talt: \"ladrillo\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"pluma\",\n\t\t\ttext: \"Pluma\",\n\t\t\taudio: \"liviano\",\n\t\t\talt: \"pluma\"\n\t\t},\n\t]\n});\n\nnat105.controller('Con5Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"piedra\",\n\t\t\ttext: \"Piedra\",\n\t\t\taudio: \"duro\",\n\t\t\talt: \"piedra\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"pan\",\n\t\t\ttext: \"Pan tajado\",\n\t\t\taudio: \"blando\",\n\t\t\talt: \"pan tajado\"\n\t\t},\n\t]\n});\n\nnat105.controller('Act1_1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\t// Importante: no cambiar las posiciones. Las figuras se identifican con el index\n\t\tpos: [\n\t\t\t// triángulo naranja\n\t\t\t{ x: 745, y: 10, rot: -90 },\n\t\t\t// triángulo verde\n\t\t\t{ x: 30, y: 10, rot: -90 },\n\t\t\t// Romboide morado\n\t\t\t{ x: 493, y: 10, rot: 135 },\n\t\t\t// triángulo amarillo\n\t\t\t{ x: 620, y: 10, rot: 0 },\n\t\t\t// cuadro rojo\n\t\t\t{ x: 260, y: 10, rot: 0 },\n\t\t\t// triángulo azul 1\n\t\t\t{ x: 160, y: 10, rot: 90 },\n\t\t\t// triángulo azul 2\n\t\t\t{ x: 380, y: 10, rot: 0 }\n\t\t],\n\t\tfigure: [\n\t\t\t// triángulo naranja\n\t\t\t{ x: 105, y: 0, rot: -90 },\n\t\t\t// triángulo verde\n\t\t\t{ x: 65, y: 100, rot: -90 },\n\t\t\t// Romboide morado\n\t\t\t{ x: 6, y: 14, rot: 135 },\n\t\t\t// triángulo amarillo\n\t\t\t{ x: 0, y: 85, rot: 0 },\n\t\t\t// cuadro rojo\n\t\t\t{ x: 41, y: -57, rot: 0 },\n\t\t\t// triángulo azul 1\n\t\t\t{ x: 140, y: 100, rot: 90 },\n\t\t\t// triángulo azul 2\n\t\t\t{ x: 115, y: 75, rot: 0 }\n\t\t],\n\t\tcolor: '#009500',\n\t\tname: 'Casa',\n\t\tchances: 8\n\t};\n});\n\nnat105.controller('Act1_2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\t// Importante: no cambiar las posiciones. Las figuras se identifican con el index\n\t\tpos: [\n\t\t\t// triángulo naranja\n\t\t\t{ x: 745, y: -30, rot: -135 },\n\t\t\t// triángulo verde\n\t\t\t{ x: 30, y: 25, rot: 45 },\n\t\t\t// Romboide morado\n\t\t\t{ x: 493, y: -5, rot: 90 },\n\t\t\t// triángulo amarillo\n\t\t\t{ x: 620, y: -5, rot: 90 },\n\t\t\t// cuadro rojo\n\t\t\t{ x: 245, y: 10, rot: 45 },\n\t\t\t// triángulo azul 1\n\t\t\t{ x: 125, y: 10, rot: 90 },\n\t\t\t// triángulo azul 2\n\t\t\t{ x: 380, y: 10, rot: 0 }\n\t\t],\n\t\tfigure: [\n\t\t\t// triángulo naranja\n\t\t\t{ x: 19, y: 43, rot: -135 },\n\t\t\t// triángulo verde\n\t\t\t{ x: 140, y: 64, rot: 45 },\n\t\t\t// Romboide morado\n\t\t\t{ x: -41, y: 83, rot: 90 },\n\t\t\t// triángulo amarillo\n\t\t\t{ x: 140, y: 135, rot: 90 },\n\t\t\t// cuadro rojo\n\t\t\t{ x: 150, y: -68, rot: 45 },\n\t\t\t// triángulo azul 1\n\t\t\t{ x: 9, y: 150, rot: 90 },\n\t\t\t// triángulo azul 2\n\t\t\t{ x: 200, y: -93, rot: 0 }\n\t\t],\n\t\tcolor: '#009500',\n\t\tname: 'Perro',\n\t\tchances: 10\n\t};\n});\n\nnat105.controller('Act1_3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\t// Importante: no cambiar las posiciones. Las figuras se identifican con el index\n\t\tpos: [\n\t\t\t// triángulo naranja\n\t\t\t{ x: 745, y: 30, rot: 135 },\n\t\t\t// triángulo verde\n\t\t\t{ x: 30, y: 10, rot: 90 },\n\t\t\t// Romboide morado\n\t\t\t{ x: 513, y: 5, rot: 90, scale: { x: -1, y: 1 } },\n\t\t\t// triángulo amarillo\n\t\t\t{ x: 640, y: 5, rot: -45 },\n\t\t\t// cuadro rojo\n\t\t\t{ x: 290, y: 10, rot: 45 },\n\t\t\t// triángulo azul 1\n\t\t\t{ x: 190, y: 10, rot: -90 },\n\t\t\t// triángulo azul 2\n\t\t\t{ x: 420, y: 10, rot: -45 }\n\t\t],\n\t\tfigure: [\n\t\t\t// triángulo naranja\n\t\t\t{ x: 65, y: 160, rot: 135 },\n\t\t\t// triángulo verde\n\t\t\t{ x: 130, y: 104, rot: 90 },\n\t\t\t// Romboide morado\n\t\t\t{ x: 36, y: -51, rot: 90, scale: { x: -1, y: 1 } },\n\t\t\t// triángulo amarillo\n\t\t\t{ x: 9, y: 125, rot: -45 },\n\t\t\t// cuadro rojo\n\t\t\t{ x: 11, y: 23, rot: 45 },\n\t\t\t// triángulo azul 1\n\t\t\t{ x: -15, y: 73, rot: -90 },\n\t\t\t// triángulo azul 2\n\t\t\t{ x: -7, y: -73, rot: -45 }\n\t\t],\n\t\tcolor: '#009500',\n\t\tname: 'Cisne',\n\t\tchances: 10\n\t};\n});\n\nnat105.controller('Act2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tgroups: [\n\t\t\t{\n\t\t\t\ttitle: 'Baúl',\n\t\t\t\tresource: \"baul\",\n\t\t\t\talt: \"baúl\",\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: \"reloj\",\n\t\t\t\t\t\talt: \"reloj de mano\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: \"anillo\",\n\t\t\t\t\t\talt: \"anillo\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: \"gorra\",\n\t\t\t\t\t\talt: \"gorra\"\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Casa',\n\t\t\t\tresource: \"casa\",\n\t\t\t\talt: \"casa\",\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: \"televisor\",\n\t\t\t\t\t\talt: \"televisor\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: \"estufa\",\n\t\t\t\t\t\talt: \"estufa\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: \"nevera\",\n\t\t\t\t\t\talt: \"nevera\"\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 4,\n\t\tchances: 6\n\t};\n});\n\nnat105.controller('Act3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tgroupImg: \"camion\",\n\t\tgroupAlt: \"camión\",\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"sofa.png\",\n\t\t\t\talt: \"Mueble de dos puestos\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"ladrillos.png\",\n\t\t\t\talt: \"Tres ladrillos, uno encima del otro\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"peluche.png\",\n\t\t\t\talt: \"Oso de peluche\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"cojines-rosa.png\",\n\t\t\t\talt: \"Dos cojines\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"nevera.png\",\n\t\t\t\talt: \"nevera\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"cemento.png\",\n\t\t\t\talt: \"Cuatro bultos de cemento\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\tchances: 4\n\t};\n});\n\nnat105.controller('Act4Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tgroups: [\n\t\t\t{\n\t\t\t\ttitle: \"Liso\",\n\t\t\t\tnumInputs: 3\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Áspero\",\n\t\t\t\tnumInputs: 3\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Duro\",\n\t\t\t\tnumInputs: 3\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Blando\",\n\t\t\t\tnumInputs: 3\n\t\t\t}\n\t\t]\n\t};\n});\n","var appManager = AppManager();\nvar nat106 = angular.module('nat106', ['activities']);\n\nappManager.configModule(nat106, {\n\tresources: '../resources/01/nat/06',\n\tcompetences1: 'Identifico diferentes estados físicos de la materia (el agua, por ejemplo) y verifico causas para su cambio de estado.',\n\tcompetences2: 'Identifica los diferentes estados físicos de la materia descubriendo su causa.',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia naturales lección N° 6”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados.',\n\tfarewell: '¡Felicitaciones amiguito,  ahora ya sabes más sobre la materia y sus estados!',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Lección 6: La materia'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1 | Lección 6'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle: 'Actividad 5',\n\t\t}\n\t]\n});\n\nnat106.controller('Con1Ctrl', function ($scope) {\n\t$scope.data = {\n    items: [\n      {\n        title: \"Líquido\",\n        number: \"1\",\n        img: \"jugo.png\",\n    \timgAlt: \"Vaso con jugo en su interior\",\n        text: \"Los líquidos no tienen forma definida, sino que se adaptan a la forma del recipiente que los Contiene. Algunos ejemplos son: el jugo, el agua, la gaseosa y la sopa\",\n        imgstyle: \"border-radius: 50%;border: solid #009500;\"\n      },\n      {\n        title: \"Sólido\",\n        number: \"2\",\n        img: \"ladrillos.png\",\n    \timgAlt: \"tres ladrillos , uno encima del otro\",\n        text: \"Los sólidos tienen forma definida, se caracterizan por ser duros y resistentes. Algunos ejemplos son: los ladrillos, la madera y las piedras.\",\n        imgstyle: \"border-radius: 50%;border: solid #009500;\"\n      },\n      {\n        title: \"Gaseoso\",\n        number: \"3\",\n        img: \"globos.png\",\n    \timgAlt: \"Cinco globos de colores\",\n        text: \"La materia en estado gaseoso no tiene forma definida, ella tiende a escaparse del recipiente que la contiene. Algunos ejemplos son: el aire en los globos y el gas en las pipetas.\",\n        imgstyle: \"border-radius: 50%;border: solid #009500;\"\n      }\n    ]\n  }\n});\n\nnat106.controller('Act1Ctrl', function ($scope) {\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc1: \"jugo2\",\n\t\t\t\talt1: \"Gaseosa de naranja\",\n\t\t\t\tsrc2: \"botella\",\n\t\t\t\talt2: \"Envase de gaseosa\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"agua\",\n\t\t\t\talt1: \"agua\",\n\t\t\t\tsrc2: \"vaso\",\n\t\t\t\talt2: \"Vaso con agua\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"leche\",\n\t\t\t\talt1: \"Leche\",\n\t\t\t\tsrc2: \"tetero\",\n\t\t\t\talt2: \"Tetero\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"pintura\",\n\t\t\t\talt1: \"pintura color rojo\",\n\t\t\t\tsrc2: \"bote\",\n\t\t\t\talt2: \"tarro de pintura\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\t\n\t};\n});\n\nnat106.controller('Act2Ctrl', function ($scope) {\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc1: \"mesa\",\n\t\t\t\talt1: \"Mesa\",\n\t\t\t\tsrc2: \"mesa\",\n\t\t\t\talt2: \"Mesa\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"pina\",\n\t\t\t\talt1: \"Piña\",\n\t\t\t\tsrc2: \"pina\",\n\t\t\t\talt2: \"Piña\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"mueble\",\n\t\t\t\talt1: \"Mueble\",\n\t\t\t\tsrc2: \"mueble\",\n\t\t\t\talt2: \"Mueble\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"lapiz\",\n\t\t\t\talt1: \"Lapiz\",\n\t\t\t\tsrc2: \"lapiz\",\n\t\t\t\talt2: \"Lapiz\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"nevera\",\n\t\t\t\talt1: \"Nevera\",\n\t\t\t\tsrc2: \"nevera\",\n\t\t\t\talt2: \"Nevera\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"libro\",\n\t\t\t\talt1: \"Libro\",\n\t\t\t\tsrc2: \"libro\",\n\t\t\t\talt2: \"Libro\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t};\n});\n\nnat106.controller('Act3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: 'estufa',\n\t\t\t\talt: 'Tres papeleras empleadas para el  reciclaje',\n\t\t\t\ttitle:\"Estufa\",\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'equipo',\n\t\t\t\talt: 'una mujer sembrando una planta',\n\t\t\t\ttitle:\"Equipo de sonido\",\n\t\t\t\tanswer: false\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'carro',\n\t\t\t\talt: 'Una lata de gaseosa sobre la arena de la playa',\n\t\t\t\ttitle:\"Carro\",\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'candela',\n\t\t\t\talt: 'una señora depositando la basura en la basurera',\n\t\t\t\ttitle:\"Candela\",\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'calentador',\n\t\t\t\talt: 'una señora depositando la basura en la basurera',\n\t\t\t\ttitle:\"Calentador\",\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'silla',\n\t\t\t\talt: 'Varias bolsas de basura arrojadas sobre la calle',\n\t\t\t\ttitle:\"Silla\",\n\t\t\t\tanswer: false\t\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\tchances: 4,\n\t\titemsfloat: true\n\t};\n});\n\nnat106.controller('Act4Ctrl', function ($scope) {\n\t$scope.data = {\n    chancesPerItem: 1,\n    extension: '.png',\n    itemsPerRow: 3,\n    descriptionTop: true,\n    randomItems: true,\n    minRightAnswers: 3,\n    data: [\n      {\n        resource: \"manzana\",\n        alt: \"Manzana\",\n        correctAnswer: \"Sólido\"\n      },\n      {\n        resource: \"botelladeagua\",\n        alt: \"Botella con agua\",\n        correctAnswer: \"Líquido\"\n      },\n      {\n        resource: \"vapor\",\n        alt: \"olla con vapor saliendo de su interior\",\n        correctAnswer: \"Gaseoso\"\n      },  \n    ]\n  };\n\n});\n\nnat106.controller('Act5Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tgroups: [\n\t\t\t{\n\t\t\t\ttitle: \"Sólido\",\n\t\t\t\tnumInputs: 3\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Líquido\",\n\t\t\t\tnumInputs: 3\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Gaseoso\",\n\t\t\t\tnumInputs: 3\n\t\t\t}\n\t\t\t\n\t\t]\n\t};\n});\n","var appManager = AppManager();\nvar nat107 = angular.module('nat107', ['activities']);\n\nappManager.configModule(nat107, {\n\tresources: '../resources/01/nat/07',\n\tcompetences1: 'Identifico diferentes estados físicos de la materia (el agua, por ejemplo) y verifico causas para su cambio de estado.',\n\tcompetences2: 'Identifica los diferentes estados físicos de la materia descubriendo su causa.',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia naturales lección N° 7”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados.',\n\tfarewell: '¡Felicitaciones amiguito,  ahora ya sabes más sobre el agua, la materia y sus estados!',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Lección 7: El agua'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Lección 7: El agua'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-3', \n\t\t\ttemplateUrl: 'con3', \n\t\t\tcontroller: 'Con3Ctrl',\n\t\t\ttitle: 'Lección 7: El agua'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1 | Lección 7'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2 | Lección 7'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3 | Lección 7',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4 | Lección 7',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle: 'Actividad 5 | Lección 7',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-6', \n\t\t\ttemplateUrl: 'act6', \n\t\t\tcontroller: 'Act6Ctrl',\n\t\t\ttitle: 'Actividad 6 | Lección 7',\n\t\t}\n\t]\n});\n\nnat107.controller('Con1Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{\n\t\t\tresource: 'rio',\n\t\t},\n\t\t{\n\t\t\tresource: 'mar',\n\t\t},\n\t\t{\n\t\t\tresource: 'lago',\n\t\t}\n\t];\n});\n\nnat107.controller('Con2Ctrl', function ($scope) {\n  $scope.$root.isNextEnabled = false; // Activamos el siguiente link\n\n  $scope.isCompleted = false\n\t$scope.itemclick = [];\n\n\n  $scope.$root.verify = function (item) { \n  \t\n  \tif($scope.itemclick.indexOf(item) === -1){\n\n  \t\t$scope.itemclick += item\n\t}\n           \n  \tif($scope.itemclick.length >= 3){\n  \t\t$scope.$root.isNextEnabled = true; // Activamos el siguiente link\n  \t}\n\n  };\n\n});\n\nnat107.controller('Con3Ctrl', function ($scope) {\n  $scope.$root.isNextEnabled = false; // Activamos el siguiente link\n\n  $scope.isCompleted = false\n\t$scope.itemclick = [];\n\n\n  $scope.$root.verify = function (item) { \n  \t\n  \tif($scope.itemclick.indexOf(item) === -1){\n\n  \t\t$scope.itemclick += item\n\t}\n           \n  \tif($scope.itemclick.length >= 4){\n  \t\t$scope.$root.isNextEnabled = true; // Activamos el siguiente link\n  \t}\n\n  };\n\n});\n\nnat107.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: 'vaso',\n\t\t\t\talt: 'Tres papeleras empleadas para el  reciclaje',\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'edificios',\n\t\t\t\talt: 'una mujer sembrando una planta',\n\t\t\t\tanswer: false\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'cubo2',\n\t\t\t\talt: 'Una lata de gaseosa sobre la arena de la playa',\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'paisaje',\n\t\t\t\talt: 'una señora depositando la basura en la basurera',\n\t\t\t\tanswer: false\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'lluvia',\n\t\t\t\talt: 'una señora depositando la basura en la basurera',\n\t\t\t\ttitle:\"Calentador\",\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'rio',\n\t\t\t\talt: 'Varias bolsas de basura arrojadas sobre la calle',\n\t\t\t\tanswer: true\t\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\tchances: 4,\n\t\titemsfloat: true\n\t};\n});\n\nnat107.controller('Act2Ctrl', function ($scope) {\n\t$scope.data = {\n    chancesPerItem: 1,\n    extension: '.png',\n    itemsPerRow: 3,\n    randomItems: true,\n    hideDescription: true,\n    minRightAnswers: 2,\n    data: [\n      {\n        resource: \"lago\",\n        alt: \"Lago rodeado por plantas y dos patos nadando sobre él\",\n        correctAnswer: \"líquido\"\n      },\n      {\n        resource: \"cubos\",\n        alt: \"Tres cubos de hielo\",\n        correctAnswer: \"sólido\"\n      },\n      {\n        resource: \"gaseoso\",\n        alt: \"Humo saliendo de una olla\",\n        correctAnswer: \"gaseoso\"\n      },  \n    ]\n  };\n});\n\nnat107.controller('Act3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tgroupImg: \"congelador\",\n\t\tgroupAlt: \"Nevera abierta\",\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"cono.png\",\n\t\t\t\talt: \"Helado\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"paleta.png\",\n\t\t\t\talt: \"paleta\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"manzana.png\",\n\t\t\t\talt: \"manzana\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pan.png\",\n\t\t\t\talt: \"Pan tajado\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"cubos.png\",\n\t\t\t\talt: \"tres cubos de hielo\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"bolis.png\",\n\t\t\t\talt: \"bolis\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\tchances: 4\n\t};\n});\n\nnat107.controller('Act4Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tgroupImg: \"fogon2\",\n\t\tgroupAlt: \"Olla sobre un fogón\",\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"chocolate.png\",\n\t\t\t\talt: \"Barras de chocolate\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"manzana.png\",\n\t\t\t\talt: \"manzana\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"vela.png\",\n\t\t\t\talt: \"vela\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"cubos.png\",\n\t\t\t\talt: \"tres cubos de hielo\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"paleta.png\",\n\t\t\t\talt: \"paleta\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"tabla.png\",\n\t\t\t\talt: \"tabla de madera\",\n\t\t\t\tanswer: false\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\tchances: 4\n\t};\n});\n\nnat107.controller('Act5Ctrl', function ($scope) {\n\t$scope.items = [\n\t\t\t{ \t\t\t\t\n\t\t\t\timg: 'llave.png',\n\t\t\t\taltimg: 'Llave del agua abierta',\n\t\t\t\tw: 300, h: 470, t:2\t, l:0,\n\t\t\t\toptions: [\n\t\t          { text: \"Cerrar la llave cuando no la utilicemos.\", answer: true },\n\t\t          { text: \"Dejar la llave abierta.\"},\n\t\t        ]\n\t\t\t},\n\t\t\t{ \t\n\t\t\t\timg: 'banarse.png',\n\t\t\t\taltimg: 'Niño bañándose',\n\t\t\t\tw: 300, h: 470, t:2\t, l:35,\n\t\t\t\toptions: [\n\t\t          { text: \"Tomar un baño corto.\", answer: true },\n\t\t          { text: \"Tomar un baño largo con la ducha abierta.\"},\n\t\t        ]\n\t\t\t},\n\t\t\t{ \t\t\t\t\n\t\t\t\timg: 'cepillarse.png',\n\t\t\t\taltimg: 'Niña cepillándose los dientes',\n\t\t\t\tw: 300, h: 470, t:2\t, l:70,\n\t\t\t\toptions: [\n\t\t          { text: \"Cerrar la llave del agua mientras te cepillas.\", answer: true },\n\t\t          { text: \"Deja abierta la llave del agua mientras te cepillas.\"},\n\t\t        ]\n\t\t\t}\n\t\t],\n\n\t\t$scope.options = {\n\t\t\titems: $scope.items,\n\t\t\tcanvasStyle: 'width: 100%;height: 500px;',\n\t\t\tchances: 1,\n\t\t\toptionsrandom: true,\n\t\t\tminRightAnswers: 2,\n\t\t\titemsPerRow : 3,\n\t\t\tselectindividual: true\n\t\t};\n});\n\nnat107.controller('Act6Ctrl', function ($scope) {\n\t$scope.items = [\n\t\t\t{ \t\t\t\t\n\t\t\t\timg: 'cubos.png',\n\t\t\t\ttitle:'¿Si dejas varias horas por fuera del congelador, algunos cubos de hielo a qué estado pasarán?',\n\t\t\t\taltimg: 'Llave del agua abierta',\n\t\t\t\tw: 300, h: 520, t:2\t, l:0,\n\t\t\t\toptions: [\n\t\t          { text: \"Sólido\" },\n\t\t          { text: \"Líquido\", answer: true},\n\t\t        ]\n\t\t\t},\n\t\t\t{ \t\n\t\t\t\timg: 'fogon2.png',\n\t\t\t\ttitle: '¿Si dejas varias horas en el fogón una olla con agua, a qué estado pasará el agua?',\n\t\t\t\taltimg: 'Niño bañándose',\n\t\t\t\tw: 300, h: 520, t:2\t, l:35,\n\t\t\t\toptions: [\n\t\t          { text: \"Gaseoso\", answer: true },\n\t\t          { text: \"Líquido\"},\n\t\t        ]\n\t\t\t},\n\t\t\t{ \t\t\t\t\n\t\t\t\timg: 'jugo.png',\n\t\t\t\ttitle: '¿Si dejas en el congelador de un día para otro un vaso con jugo, a qué estado pasará el jugo?',\n\t\t\t\taltimg: 'Niña cepillándose los dientes',\n\t\t\t\tw: 300, h: 520, t:2\t, l:70,\n\t\t\t\toptions: [\n\t\t          { text: \"Líquido\"},\n\t\t          { text: \"Sólido\", answer: true },\n\t\t        ]\n\t\t\t}\n\t\t],\n\n\t\t$scope.options = {\n\t\t\titems: $scope.items,\n\t\t\tcanvasStyle: 'width: 100%;height: 570px;',\n\t\t\tchances: 1,\n\t\t\toptionsrandom: true,\n\t\t\tminRightAnswers: 2,\n\t\t\titemsPerRow : 3,\n\t\t\tselectindividual: true\n\t\t};\n});\n","var appManager = AppManager();\nvar soc101 = angular.module('soc101', ['activities']);\n\nappManager.configModule(soc101, {\n\tresources: '../resources/01/soc/01',\n\tcompetences1:'Reconozco y respeto diferentes puntos de vista',\n\tcompetences2:'Ubicarse en el entorno o medio en el que vive, expresando cómo lo puede cuidar y conservar',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia sociales lección N° 1”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: 'Muy bien amiguito, ahora ya sabes como cuidar y conservar tu entorno',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: function () {},\n\t\t\ttitle: 'Lección 1: Ayudo a cuidar y conservar mi entorno'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Lección 1: Ayudo a cuidar y conservar mi entorno'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-3', \n\t\t\ttemplateUrl: 'con3', \n\t\t\tcontroller: 'Con3Ctrl',\n\t\t\ttitle: 'Lección 1: Ayudo a cuidar y conservar mi entorno'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-4', \n\t\t\ttemplateUrl: 'con4', \n\t\t\tcontroller: 'Con4Ctrl',\n\t\t\ttitle: 'Lección 1: Ayudo a cuidar y conservar mi entorno'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-5', \n\t\t\ttemplateUrl: 'con5', \n\t\t\tcontroller: 'Con5Ctrl',\n\t\t\ttitle: 'Lección 1: Ayudo a cuidar y conservar mi entorno'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4-1', \n\t\t\ttemplateUrl: 'act4_1', \n\t\t\tcontroller: 'Act4_1Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4-2', \n\t\t\ttemplateUrl: 'act4_2', \n\t\t\tcontroller: 'Act4_2Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t}\n\t]\n});\n\nsoc101.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = [\n\n\t\t{ \n\t\t\tresource: \"limpiar\",\n\t\t\talt: \"Niña sacudiendo el televisor\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"organizar\" ,\n\t\t\talt: \"Niño organizando su escritorio\" \n\t\t}\n\t]\n});\n\nsoc101.controller('Con3Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"llave\",\n\t\t\talt: \"Llave de agua, con un chorro de agua saliendo por ella\",\n\t\t\talt2: \"Llave de agua cerrada\"\n\t\t}\n\t]\n});\n\nsoc101.controller('Con4Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"televisor\",\n\t\t\talt: \"Televisor encendido\",\n\t\t\talt2: \"televisor apagado\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"bombillo\",\n\t\t\talt: \"bombillo encendido\",\n\t\t\talt2: \"bombillo apagado\"\n\t\t}\n\t]\n});\n\nsoc101.controller('Con5Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"basura1\",\n\t\t\talt: \"Niño recogiendo la basura del piso y arrojándola en la papelera\"\n\t\t}\n\t]\n});\n\nsoc101.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: 'reciclar',\n\t\t\t\talt: 'Tres papeleras empleadas para el  reciclaje',\n\t\t\t\ttitle: \"Cardoso, R. (2007). Recycle 1 [Fotografía]. Obtenido de: http://www.sxc.hu/photo/736425\",\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'plantar',\n\t\t\t\talt: 'una mujer sembrando una planta',\n\t\t\t\ttitle: \"Roveri, R. (2005). Planting [Fotografía]. Obtenido de: http://www.sxc.hu/photo/428778\",\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'lata',\n\t\t\t\talt: 'Una lata de gaseosa sobre la arena de la playa',\n\t\t\t\ttitle: \"Cristian G. (2008). Can u see it? [Fotografía]. Obtenido de: http://www.sxc.hu/photo/967434\",\n\t\t\t\tanswer: false\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'basura2',\n\t\t\t\talt: 'una señora depositando la basura en la basurera',\n\t\t\t\ttitle: \"Gjenero S. (2008). Keep it clean [Fotografía]. Obtenido de: http://www.sxc.hu/photo/1109269\",\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'chimenea',\n\t\t\t\talt: 'una señora depositando la basura en la basurera',\n\t\t\t\ttitle: \"Richert C. & Richert M. (2012). Industrial smokestack [Fotografía]. Obtenido de: http://www.sxc.hu/photo/1401832\",\n\t\t\t\tanswer: false\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'basura3',\n\t\t\t\talt: 'Varias bolsas de basura arrojadas sobre la calle',\n\t\t\t\ttitle: \"Lis J. (2005). Garbage 2 [Fotografía]. Obtenido de: http://www.sxc.hu/browse.phtml?f=view&id=348617\",\n\t\t\t\tanswer: false\t\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3\n\t};\n});\n\nsoc101.controller('Act2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: 'tender-cama',\n\t\t\t\talt: 'Niño tendiendo su cama',\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'recoger-juguetes',\n\t\t\t\talt: 'Niña recogiendo y guardando sus juguetes, después de jugar',\n\t\t\t\tanswer: true\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'desordenar',\n\t\t\t\talt: 'Niño desordenando su escritorio',\n\t\t\t\tanswer: false\t\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 2\n\t};\n});\n\nsoc101.controller('Act3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tgroups: [\n\t\t\t{\n\t\t\t\ttitle: 'Basura',\n\t\t\t\tresource: 'basura',\n\t\t\t\talt: \"Caneca de la basura\",\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: 'manzana',\n\t\t\t\t\t\talt: \"Desperdicio de una manzana\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: 'caja_vacia',\n\t\t\t\t\t\talt: \"Caja y envase vacíos\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Escritorio',\n\t\t\t\tresource: 'escritorio',\n\t\t\t\talt: \"escritorio\",\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: 'computador',\n\t\t\t\t\t\talt: \"Computador\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: 'lapiz',\n\t\t\t\t\t\talt: \"Lápiz\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: 'libro',\n\t\t\t\t\t\talt: \"Un libro de pasta naranjada\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\tchances: 5\n\n\t};\n});\n\nsoc101.controller('Act4_1Ctrl', function ($scope) {\n\t// Obtenemos el audio deseado\n\tvar source = '<audio id=\"audio-contaminacion\" preload=\"auto\">' +\n\t\t\t\t\t\"<source src=\\\"\" + $scope.resources + \"/contaminacion.mp3\\\" type=\\\"audio/mpeg\\\">\" +\n\t\t\t\t'</audio>';\n\n\t$('#main-container').append(source);\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: 'reciclar.jpg',\n\t\t\t\talt: 'Tres papeleras empleadas para el  reciclaje',\n\t\t\t\ttitle: \"Cardoso, R. (2007). Recycle 1 [Fotografía]. Obtenido de: http://www.sxc.hu/photo/736425\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'plantar.jpg',\n\t\t\t\talt: 'Una mujer sembrando una planta',\n\t\t\t\ttitle: \"Roveri, R. (2005). Planting [Fotografía]. Obtenido de: http://www.sxc.hu/photo/428778\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'chimenea.jpg',\n\t\t\t\talt: 'La chimenea de una fábrica arrojando humo al aire libre',\n\t\t\t\ttitle: \"Richert C. & Richert M. (2012). Industrial smokestack [Fotografía]. Obtenido de: http://www.sxc.hu/photo/1401832\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'cigarrillos.jpg',\n\t\t\t\talt: 'Varias colillas de cigarrillo',\n\t\t\t\ttitle: \"Jac L. (2005). Cigarettes [Fotografía]. Obtenido de: http://www.sxc.hu/photo/330326\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'botella.jpg',\n\t\t\t\talt: 'Una botella plástica arrojada sobre la manga',\n\t\t\t\ttitle: \"Kiser K. (2004). Litter Bug 4 [Fotografía]. Obtenido de: http://www.sxc.hu/photo/115166\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'papelera.jpg',\n\t\t\t\talt: 'Una papelera',\n\t\t\t\ttitle: \"Pebley G. (2008). File_13 [Fotografía]. Obtenido de: http://www.sxc.hu/photo/1020163\",\n\t\t\t\tanswer: false\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3,\n\t\trightAnswerCallback: function (item) {\n\t\t\t// Reproducimos el audio\n\t\t\t$('#audio-contaminacion')[0].play();\t\n\t\t}\n\t};\n});\n\nsoc101.controller('Act4_2Ctrl', function ($scope) {\n\n\t// Obtenemos el audio deseado\n\tvar source = '<audio id=\"audio-proteccion\" preload=\"auto\">' +\n\t\t\t\t\t\"<source src=\\\"\" + $scope.resources + \"/proteccion.mp3\\\" type=\\\"audio/mpeg\\\">\" +\n\t\t\t\t'</audio>';\n\n\t$('#main-container').append(source);\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: 'reciclar.jpg',\n\t\t\t\talt: 'Tres papeleras empleadas para el  reciclaje',\n\t\t\t\ttitle: \"Cardoso, R. (2007). Recycle 1 [Fotografía]. Obtenido de: http://www.sxc.hu/photo/736425\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'plantar.jpg',\n\t\t\t\talt: 'Una mujer sembrando una planta',\n\t\t\t\ttitle: \"Roveri, R. (2005). Planting [Fotografía]. Obtenido de: http://www.sxc.hu/photo/428778\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'chimenea.jpg',\n\t\t\t\talt: 'La chimenea de una fábrica arrojando humo al aire libre',\n\t\t\t\ttitle: \"Richert C. & Richert M. (2012). Industrial smokestack [Fotografía]. Obtenido de: http://www.sxc.hu/photo/1401832\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'cigarrillos.jpg',\n\t\t\t\talt: 'Varias colillas de cigarrillo',\n\t\t\t\ttitle: \"Jac L. (2005). Cigarettes [Fotografía]. Obtenido de: http://www.sxc.hu/photo/330326\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'botella.jpg',\n\t\t\t\talt: 'Una botella plástica arrojada sobre la manga',\n\t\t\t\ttitle: \"Kiser K. (2004). Litter Bug 4 [Fotografía]. Obtenido de: http://www.sxc.hu/photo/115166\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: 'papelera.jpg',\n\t\t\t\talt: 'Una papelera',\n\t\t\t\ttitle: \"Pebley G. (2008). File_13 [Fotografía]. Obtenido de: http://www.sxc.hu/photo/1020163\",\n\t\t\t\tanswer: true\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3,\n\t\trightAnswerCallback: function (item) {\n\t\t\t// Reproducimos el audio\n\t\t\t$('#audio-proteccion')[0].play();\t\n\t\t}\n\t};\n});\n","var appManager = AppManager();\nvar soc102 = angular.module('soc102', ['activities']);\n\nappManager.configModule(soc102, {\n\tresources: '../resources/01/soc/02',\n\tfarewell: 'Muy bien amiguito ahora ya sabes como tener una buena convivencia',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia sociales lección N° 2”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tcompetences1: 'Reconozco y respeto diferentes puntos de vista',\n\tcompetences2: 'Describir su entorno familiar e identificar normas, autoridades y sus funciones, para desarrollar valores cívicos y hábitos de convivencia',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: function () {},\n\t\t\ttitle: 'Las normas de convivencia'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Las normas de convivencia'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-3', \n\t\t\ttemplateUrl: 'con3', \n\t\t\tcontroller: 'Con3Ctrl',\n\t\t\ttitle: 'Las normas de convivencia'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-4', \n\t\t\ttemplateUrl: 'con4', \n\t\t\tcontroller: 'Con4Ctrl',\n\t\t\ttitle: 'Las normas de convivencia'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-5', \n\t\t\ttemplateUrl: 'con5', \n\t\t\tcontroller: 'Con5Ctrl',\n\t\t\ttitle: 'Las normas de convivencia'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t}\n\t]\n});\n\nsoc102.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"saludar\",\n\t\t\talt: \"Niña moviendo su mano, saludando\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"despedirse\",\n\t\t\talt: \"Una niña despidiéndose de un niño\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"dar-las-gracias\",\n\t\t\talt: \"Un niño con su mano derecha en el pecho, en señal de agradecimiento\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"pedir-el-favor\",\n\t\t\talt: \"Una niña hablando con un niño, pidiéndole un favor\"\n\t\t}\n\t]\n});\n\nsoc102.controller('Con3Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"escuchar\",\n\t\t\talt: \"Una niña con una mano detrás de su oreja en señal de escucha\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"pedir-permiso\",\n\t\t\talt: \"Un niño hablando con una niña pidiéndole permiso para tomar su juguete\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"pedir-perdon\",\n\t\t\talt: \"Un niño con su mano derecha en el pecho y con cara triste, pidiendo perdón\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"no-gritar\",\n\t\t\talt: \"Un niño con su boca abierta, gritando fuertemente\"\n\t\t}\n\t];\n});\n\nsoc102.controller('Con4Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"no-pegar\",\n\t\t\talt: \"Un niño pegándole una patada a otro\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"no-escupir\",\n\t\t\talt: \"Un niño escupiendo a otro\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"no-robar\",\n\t\t\talt: \"Un señor tomando sin permiso la billetera del bolso de una señora\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"adultos\",\n\t\t\talt: \"Una mujer y un hombre mayores\"\n\t\t}\n\t];\n});\n\nsoc102.controller('Con5Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"arrojar-basuras\",\n\t\t\ttext: \"No arrojar basuras al piso\",\n\t\t\talt: \"Un niño arrojando la basura a la papelera\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"escuchar-musica\",\n\t\t\ttext: \"Escuchar música a bajo volumen\",\n\t\t\talt: \"Una niña escuchando música\"\n\t\t}\n\t];\n});\n\nsoc102.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tresource: \"no-gritar\",\n\t\t\t\talt: \"Un niño con su boca abierta, gritando fuertemente\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"saludar\",\n\t\t\t\talt: \"Niña moviendo su mano, saludando\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"compartir\",\n\t\t\t\talt: \"Niña compartiendo un dulce con un niño\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"dar-la-mano\",\n\t\t\t\talt: \"Niño y niña dándose la mano en señal de agrado\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"escuchar\",\n\t\t\t\talt: \"Una niña con una mano detrás de su oreja en señal de escucha\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"no-pegar\",\n\t\t\t\talt: \"Un niño pegándole una patada a otro\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 4\t\n\t};\n});\n\nsoc102.controller('Act2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"orden.png\",\n\t\t\t\talt: \"Dos niños compartiendo felices y en armonía en su salón de clases\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"desorden.png\",\n\t\t\t\talt: \"Dos niños peleando y ocasionando desorden en su salón de clases\",\n\t\t\t\tanswer: false\n\t\t\t}\n\t\t],\n\t\tchances: 1,\n\t\tminRightAnswers: 1,\n\t\titemsPerRow: 2\n\t};\n});\n\nsoc102.controller('Act3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tresource: \"pedir-el-favor\",\n\t\t\t\talt: \"Una niña hablando con un niño, pidiéndole un favor\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"saludar\",\n\t\t\t\talt: \"Niña moviendo su mano, saludando\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"compartir\",\n\t\t\t\talt: \"Niña compartiendo un dulce con un niño\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"dar-la-mano\",\n\t\t\t\talt: \"Niño y niña dándose la mano en señal de agradecimiento\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3\n\t};\n});\n\nsoc102.controller('Act4Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"arrojar-basuras-2.png\",\n\t\t\t\talt: \"Un niño arrojando la basura a la papelera\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"compartir-2.png\",\n\t\t\t\talt: \"Niña compartiendo un dulce con un niño\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"dar-la-mano-2.png\",\n\t\t\t\talt: \"Niño y niña dándose la mano en señal de agradecimiento\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"no-gritar-2.png\",\n\t\t\t\talt: \"No gritar\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"no-robar-2.png\",\n\t\t\t\talt: \"No tomar las cosas ajenas, sin pedir permiso\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"saludar-2.png\",\n\t\t\t\talt: \"Niña moviendo su mano, saludando\",\n\t\t\t\tanswer: true\n\t\t\t}\n\t\t],\n\t\tchances: 3,\n\t\tminRightAnswers: 3\n\t};\n});\n","var appManager = AppManager();\nvar soc103 = angular.module('soc103', ['activities']);\n\nappManager.configModule(soc103, {\n\tresources: '../resources/01/soc/03',\n\tcompetences1:'Reconozco y describo las características físicas de las principales formas del paisaje',\n\tcompetences2:'Identifica las principales características y formas del paisaje',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia sociales lección N° 3”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados.',\n\tfarewell: 'Felicitaciones, ya conoces la diferencia entre paisajes naturales y artificiales',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: function(){},\n\t\t\ttitle: 'El paisaje y sus elementos'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'El paisaje y sus elementos'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-3', \n\t\t\ttemplateUrl: 'con3', \n\t\t\tcontroller: 'Con3Ctrl',\n\t\t\ttitle: 'El paisaje y sus elementos'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-4', \n\t\t\ttemplateUrl: 'con4', \n\t\t\tcontroller: 'Con4Ctrl',\n\t\t\ttitle: 'El paisaje y sus elementos'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-5', \n\t\t\ttemplateUrl: 'con5', \n\t\t\tcontroller: 'Con5Ctrl',\n\t\t\ttitle: 'El paisaje y sus elementos'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3',\n\t\t\t\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t\t\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle: 'Actividad 5',\n\t\t\t\n\t\t}\n\t]\n});\n\nsoc103.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"montanias\",\n\t\t\talt: \"Paisaje conformado por dos montañas grandes, el cielo y el sol\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"arboles\",\n\t\t\talt: \"Paisaje conformado por el cielo, cuatro árboles y pasto\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"animales\",\n\t\t\talt: \"Elefante, cebra, tigre y rinoceronte caminando por el campo\"\n\t\t}\n\t]\n});\n\nsoc103.controller('Con3Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"rio\",\n\t\t\talt: \"Paisaje conformado por un río rodeado de mucha vegetación\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"mar\",\n\t\t\talt: \"Paisaje conformado por el cielo, el mar, la arena de la playa y las palmeras\"\n\t\t}\n\t]\n});\n\nsoc103.controller('Con4Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"edificios\",\n\t\t\talt: \"Paisaje conformado por tres edificios altos, varios árboles y una carretera\",\n\t\t},\n\t\t{ \n\t\t\tresource: \"casas\",\n\t\t\talt: \"Paisaje conformado por el cielo, el pasto y dos casas\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"carros\",\n\t\t\talt: \"Paisaje donde se muestra dos carros desplazándose por una carretera\"\n\t\t}\n\t]\n});\n\nsoc103.controller('Con5Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"carreteras\",\n\t\t\talt: \"Paisaje conformado por una larga carretera, rodeada por árboles y un carro desplazándose por ella\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"puente\",\n\t\t\talt: \"Paisaje donde se muestra  un puente muy largo que va por encima de un río y que comunica con una ciudad\"\n\t\t}\n\t]\n});\n\nsoc103.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"arcoiris\",\n\t\t\t\talt: \"Arco iris\" ,\n\t\t\t\tz: 2, t: -11, l: -26, w: 53\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"arbol-I\",\n\t\t\t\talt: \"árbol de forma redondeada\" ,\n\t\t\t\tz: 2, t: 5, l: -22, w: 88\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"arbol-II\",\n\t\t\t\talt: \"Árbol de forma triangular\" ,\n\t\t\t\tz: 2, t: 4, l: 44, w: 56\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"sol\",\n\t\t\t\talt: \"sol\" ,\n\t\t\t\tz: 2, t: -9, l: 45, w: 30\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"mariposa\",\n\t\t\t\talt: \"Mariposa\" ,\n\t\t\t\tz: 2, t: 48, l: 28, w: 45\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"base-montaje-elementos-nat\",\n\t\t\t\talt: \"río rodeado por vegetación\" ,\n\t\t\t\tz: 1 , t: 0, l: 0, w: 100\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 6,\n\t\tchances: 6\n\t};\n});\n\nsoc103.controller('Act2Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"edificio\",\n\t\t\t\talt: \"Edificio de varios pisos\" ,\n\t\t\t\tz: 2, t: 2, l: 29, w: 54\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"casa\",\n\t\t\t\talt: \"casa\" ,\n\t\t\t\tz: 2, t: 22, l: -2, w: 44\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"arbol-I\",\n\t\t\t\talt: \"árbol\" ,\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"base-montaje-elementos-artif\",\n\t\t\t\talt: \"Carretera rodeada por vegetación y edificios\" ,\n\t\t\t\tz: 1, t: 0, l: 0, w: 100\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"camioneta\",\n\t\t\t\talt: \"Camioneta de color rojo\" ,\n\t\t\t\tz: 2, t: 41, l: 21, w: 51\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"base-montaje-elementos-nat\",\n\t\t\t\talt: \"Río rodeado por vegetación\" ,\n\t\t\t\tanswer: false\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\tchances: 4\n\t};\n});\n\nsoc103.controller('Act3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tcanvas: 'seleccion-artificial',\n\t\ttargets: [\n\t\t\t{ w: 46, h: 71, t: 29, l: 54 },\n\t\t\t{ w: 25, h: 25, t: 8, l: 0 },\n\t\t\t{ w: 20, h: 23, t: 10, l: 34 },\n\t\t\t{ w: 23, h: 23, t: 77, l: 17 },\n\t\t\t{ w: 25, h: 28, t: 44, l: 0 },\n\t\t\t{ w: 19, h: 18, t: 34, l: 33 }\n\t\t],\n\t\tminRightAnswers: 4\n\t};\n});\n\nsoc103.controller('Act4Ctrl', function ($scope) {\n\t$scope.data = {\n\t\timage: 'rompecabezas-ciudad',\n\t\trows: 2, cols: 2,\n\t\tchances: 4,\n\t\tminRightAnswers: 4\n\t};\n});\n\nsoc103.controller('Act5Ctrl', function ($scope) {\n\t$scope.data = {\n\t\timage: 'rompecabezas-campo',\n\t\trows: 2, cols: 2,\n\t\tchances: 4,\n\t\tminRightAnswers: 4\n\t};\n});\n","var appManager = AppManager();\nvar soc104 = angular.module('soc104', ['activities']);\n\nappManager.configModule(soc104, {\n\tresources: '../resources/01/soc/04',\n\tcompetences1:'Reconozco, describo y comparo las actividades económicas de algunas personas en mi entorno y el efecto de su trabajo en la comunidad',\n\tcompetences2:'Identifico algunas profesiones y oficios propios de mi entorno social y cultural',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia sociales lección N° 4”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: '¡Felicitaciones!, ya conoces la diferencia entre profesiones y oficios',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Las profesiones y los oficios'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Las profesiones y los oficios'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-3', \n\t\t\ttemplateUrl: 'con3', \n\t\t\tcontroller: 'Con3Ctrl',\n\t\t\ttitle: 'Las profesiones y los oficios'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-4', \n\t\t\ttemplateUrl: 'con4', \n\t\t\tcontroller: 'Con4Ctrl',\n\t\t\ttitle: 'Las profesiones y los oficios'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle: 'Actividad 5',\n\t\t}\n\t]\n});\n\nsoc104.controller('Con1Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"medico\",\n\t\t\talt: \"Médico con un tarro de medicinas en su mano\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"profesor\",\n\t\t\talt: \"Profesor enseñando las vocales en el tablero\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"enfermera\",\n\t\t\talt: \"Enfermera con una pastilla en su mano\"\n\t\t}\n\t]\n});\n\nsoc104.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"odontologo\",\n\t\t\talt: \"Odontóloga con aparato odontológico en su mano\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"sacerdote\",\n\t\t\talt: \"Sacerdote\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"arquitecto\",\n\t\t\talt: \"Arquitecto con casco, sujetando en su mano varios planos\"\n\t\t}\n\t]\n});\n\nsoc104.controller('Con3Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"conductor\",\n\t\t\talt: \"Señor manejando un taxi\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"bombero\",\n\t\t\talt: \"Bombero con extintor a un lado\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"panadero\",\n\t\t\talt: \"Panadero con un rodillo en sus manos\"\n\t\t}\n\t]\n});\n\nsoc104.controller('Con4Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"tendero\",\n\t\t\talt: \"Tendero ofreciendo sus productos\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"carpintero\",\n\t\t\talt: \"Carpintero con un serrucho y un martillo en sus manos\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"carnicero\",\n\t\t\talt: \"Carnicero con delantal y un trozo de carne en una de sus manos\"\n\t\t}\n\t]\n});\n\nsoc104.controller('Act1Ctrl', function ($scope) {\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc1: \"profesor\",\n\t\t\t\talt1: \"Profesor enseñando las vocales en el tablero\",\n\t\t\t\tsrc2: \"tablero\",\n\t\t\t\talt2: \"Tablero\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"cocinero\",\n\t\t\t\talt1: \"Chef con un pollo asado en sus manos\",\n\t\t\t\tsrc2: \"ollas\",\n\t\t\t\talt2: \"Cucharón, olla y sartén\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"bombero\",\n\t\t\t\talt1: \"Bombero con extintor a un lado\",\n\t\t\t\tsrc2: \"extintor\",\n\t\t\t\talt2: \"Extintor\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"medico\",\n\t\t\t\talt1: \"Médico con un tarro de medicinas en su mano\",\n\t\t\t\tsrc2: \"herramienta1\",\n\t\t\t\talt2: \"Aparato usado por los médicos para oír los sonidos internos del cuerpo humano\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\trandomItems: true,\n\t\trandomTargets: true\n\t};\n});\n\nsoc104.controller('Act2Ctrl', function ($scope) {\n\t// Obtenemos el audio deseado\n\tvar source = '<audio id=\"audio-oficio\" preload=\"auto\">' +\n\t\t\t\t\t\"<source src=\\\"\" + $scope.resources + \"/oficio.mp3\\\" type=\\\"audio/mpeg\\\">\" +\n\t\t\t\t'</audio>';\n\n\t$('#main-container').append(source);\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"arquitecto.png\",\n\t\t\t\talt: \"Arquitecto con casco, sujetando en su mano varios planos\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"panadero.png\",\n\t\t\t\talt: \"Panadero con un rodillo en sus manos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"cirujano.png\",\n\t\t\t\talt: \"Médico con una jeringa en su mano\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"odontologo.png\",\n\t\t\t\talt: \"Odontóloga con aparato odontológico en su mano\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pintor.png\",\n\t\t\t\talt: \"Pintor con una brocha en su mano\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"conductor.png\",\n\t\t\t\talt: \"Conductor manejando un taxi\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3,\n\t\trightAnswerCallback: function (item) {\n\t\t\t// Reproducimos el audio\n\t\t\t$('#audio-oficio')[0].play();\t\n\t\t}\n\t};\n});\n\nsoc104.controller('Act3Ctrl', function ($scope) {\n\t// Obtenemos el audio deseado\n\tvar source = '<audio id=\"audio-profesion\" preload=\"auto\">' +\n\t\t\t\t\t\"<source src=\\\"\" + $scope.resources + \"/profesion.mp3\\\" type=\\\"audio/mpeg\\\">\" +\n\t\t\t\t'</audio>';\n\n\t$('#main-container').append(source);\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"arquitecto.png\",\n\t\t\t\talt: \"Arquitecto con casco, sujetando en su mano varios planos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"panadero.png\",\n\t\t\t\talt: \"Panadero con un rodillo en sus manos\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"cirujano.png\",\n\t\t\t\talt: \"Médico con una jeringa en su mano\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"odontologo.png\",\n\t\t\t\talt: \"Odontóloga con aparato odontológico en su mano\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pintor.png\",\n\t\t\t\talt: \"Pintor con una brocha en su mano\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"conductor.png\",\n\t\t\t\talt: \"Conductor manejando un taxi\",\n\t\t\t\tanswer: false\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3,\n\t\trightAnswerCallback: function (item) {\n\t\t\t// Reproducimos el audio\n\t\t\t$('#audio-profesion')[0].play();\t\n\t\t}\n\t};\n});\n\nsoc104.controller('Act4Ctrl', function ($scope) {\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"panadero.png\",\n\t\t\t\talt: \"Panadero con un rodillo en sus manos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"enfermera.png\",\n\t\t\t\talt: \"Enfermera con una pastilla en su mano\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"tendero.png\",\n\t\t\t\talt: \"Tendero ofreciendo sus productos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"profesor.png\",\n\t\t\t\talt: \"Profesor enseñando las vocales en el tablero\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"pintor.png\",\n\t\t\t\talt: \"Pintor con una brocha en su mano\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"carpintero.png\",\n\t\t\t\talt: \"Carpintero con un serrucho y un martillo en sus manos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"medico.png\",\n\t\t\t\talt: \"Médico con un tarro de medicinas en su mano\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 4,\n\t\titemsPerRow: 4,\n\t\tpriority: true\n\t};\n\n});\n\nsoc104.controller('Act5Ctrl', function ($scope) {\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"medico.png\",\n\t\t\t\talt: \"Médico con un tarro de medicinas en su mano\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"arquitecto.png\",\n\t\t\t\talt: \"Arquitecto con casco, sujetando en su mano varios planos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"profesor.png\",\n\t\t\t\talt: \"Profesor enseñando las vocales en el tablero\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"bombero.png\",\n\t\t\t\talt: \"Bombero con extintor a un lado\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"policia.png\",\n\t\t\t\talt: \"Policía\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"cocinero.png\",\n\t\t\t\talt: \"Chef con un pollo asado en sus manos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"odontologo.png\",\n\t\t\t\talt: \"Odontóloga con aparato odontológico en su mano\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\titemsPerRow: 4,\n\t\tpriority: true\n\t};\n\n});\n\n","var appManager = AppManager();\nvar soc105 = angular.module('soc105', ['activities']);\n\nappManager.configModule(soc105, {\n\tresources: '../resources/01/soc/05',\n\tcompetences1:'Identifico los principales recursos naturales (renovables y no renovables)',\n\tcompetences2:'Reconoce los recursos renovables y no renovables y los asocia con su medio físico',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia sociales lección N° 5”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: 'Muy bien, ahora a cuidar los recursos naturales',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Recursos renovables y no renovables'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Recursos renovables y no renovables'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-3', \n\t\t\ttemplateUrl: 'con3', \n\t\t\tcontroller: 'Con3Ctrl',\n\t\t\ttitle: 'Recursos renovables y no renovables'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4', \n\t\t\ttemplateUrl: 'act4', \n\t\t\tcontroller: 'Act4Ctrl',\n\t\t\ttitle: 'Actividad 4',\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-5', \n\t\t\ttemplateUrl: 'act5', \n\t\t\tcontroller: 'Act5Ctrl',\n\t\t\ttitle: 'Actividad 5',\n\t\t}\n\t]\n});\n\nsoc105.controller('Con1Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"plantas\",\n\t\t\talt: \"Paisaje que presenta dos árboles, pasto y flores\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"animales\",\n\t\t\talt: \"imagen con un perro, un gato y una mariposa\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"suelo\",\n\t\t\talt: \"imagen donde se muestra el suelo y una parte de pasto cubriéndolo por encima\"\n\t\t}\n\t]\n});\n\nsoc105.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"agua\",\n\t\t\talt: \"Paisaje donde se muestra un río rodeado de vegetación\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"aire\",\n\t\t\talt: \"imagen donde se muestra el cielo y el aire en movimiento\"\n\t\t}\n\t]\n});\n\nsoc105.controller('Con3Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"oro\",\n\t\t\talt: \"Tres lingotes de oro\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"petroleo\",\n\t\t\talt: \"una gota de petróleo\"\n\t\t},\n\t\t{ \n\t\t\tresource: \"carbon\",\n\t\t\talt: \"Dos trozos de carbón\"\n\t\t}\n\t]\n});\n\nsoc105.controller('Act1Ctrl', function ($scope) {\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"agua.png\",\n\t\t\t\talt: \"Paisaje donde se muestra un río rodeado de vegetación\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"aire.png\",\n\t\t\t\talt: \"imagen donde se muestra el cielo y el aire en movimiento\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"oro-II.png\",\n\t\t\t\talt: \"tres lingotes de oro\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"petroleo-II.png\",\n\t\t\t\talt: \"una gota de petróleo\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"animales-II.png\",\n\t\t\t\talt: \"un gato\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"plantas-II.png\",\n\t\t\t\talt: \"paisaje con un árbol florecido y pasto a su alrededor\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"suelo.png\",\n\t\t\t\talt: \"imagen donde se muestra el suelo y una parte de pasto cubriéndolo por encima\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"carbon-II.png\",\n\t\t\t\talt: \"dos trozos de carbón\",\n\t\t\t\tanswer: false\n\t\t\t}\n\t\t],\n\t\tchances: 5,\n\t\tminRightAnswers: 3,\n\t\titemsPerRow: 4\n\t};\n\n});\n\nsoc105.controller('Act2Ctrl', function ($scope) {\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"agua.png\",\n\t\t\t\talt: \"Paisaje donde se muestra un río rodeado de vegetación\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"aire.png\",\n\t\t\t\talt: \"imagen donde se muestra el cielo y el aire en movimiento\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"oro-II.png\",\n\t\t\t\talt: \"tres lingotes de oro\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"petroleo-II.png\",\n\t\t\t\talt: \"una gota de petróleo\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"animales-II.png\",\n\t\t\t\talt: \"un gato\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"plantas-II.png\",\n\t\t\t\talt: \"paisaje con un árbol florecido y pasto a su alrededor\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"suelo.png\",\n\t\t\t\talt: \"imagen donde se muestra el suelo y una parte de pasto cubriéndolo por encima\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"carbon-II.png\",\n\t\t\t\talt: \"dos trozos de carbón\"\n\t\t\t}\n\t\t],\n\t\tchances: 3,\n\t\tminRightAnswers: 2,\n\t\titemsPerRow: 4\n\t};\n\n});\n\nsoc105.controller('Act3Ctrl', function ($scope) {\n\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc1: \"agua-III\",\n\t\t\t\talt1: \"Una gota de agua\",\n\t\t\t\tsrc2: \"beber-agua\",\n\t\t\t\talt2: \"un señor tomando un vaso con agua\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"arbol\",\n\t\t\t\talt1: \"un árbol\",\n\t\t\t\tsrc2: \"frutas\",\n\t\t\t\talt2: \"tres frutas: una manzana, una pera y una naranja\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"oro\",\n\t\t\t\talt1: \"tres lingotes de oro\",\n\t\t\t\tsrc2: \"anillos\",\n\t\t\t\talt2: \"dos anillos de oro\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"petroleo\",\n\t\t\t\talt1: \"una gota de petróleo\",\n\t\t\t\tsrc2: \"carro\",\n\t\t\t\talt2: \"Un señor manejando un carro\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\trandomItems: true,\n\t\trandomTargets: true\n\t};\n});\n\nsoc105.controller('Act4Ctrl', function ($scope) {\n\t$scope.data = {\n\t\tcanvas: 'actividad',\n\t\ttargets: [\n\t\t\t{ w: 30, h: 41, t: 0, l: 70 },\n\t\t\t{ w: 100, h: 28, t: 0, l: 0 },\n\t\t\t{ w: 19, h: 25, t: 21, l: 51 },\n\t\t\t{ w: 33, h: 45, t: 17, l: 0 },\n\t\t\t{ w: 44, h: 38, t: 41, l: 12 },\n\t\t\t{ w: 29, h: 28, t: 72, l: 71 }\n\t\t],\n\t\tminRightAnswers: 4\n\t};\n\n});\n\nsoc105.controller('Act5Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"canilla\",\n\t\t\t\talt: \"Llave de agua abierta\",\n\t\t\t\toptions: [\n\t\t\t\t\t{  text: \"Cerrar la llave cuando no la utilicemos\", answer: true  },\n\t\t\t\t\t{  text: \"Mantener la llave abierta\", answer: false  }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"sembrar\",\n\t\t\t\talt: \"niña sembrando una planta en el jardín\",\n\t\t\t\toptions: [\n\t\t\t\t\t{  text: \"Dañar las plantas\", answer: false  },\n\t\t\t\t\t{  text: \"Sembrar plantas\", answer: true  }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"bombillo\",\n\t\t\t\talt: \"Bombillo\",\n\t\t\t\toptions: [\n\t\t\t\t\t{  text: \"Apagar las luces que no necesitemos\", answer: true  },\n\t\t\t\t\t{  text: \"Prender todas las luces de la casa\", answer: false  }\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2\n\t};\n\n});\n","var appManager = AppManager();\nvar soc106 = angular.module('soc106', ['activities']);\n\nappManager.configModule(soc106, {\n\tresources: '../resources/01/soc/06',\n\tcompetences1:'Cuido mi cuerpo y mis relaciones con los demás',\n\tcompetences2:'Realiza acciones de autocuidado con su cuerpo aplicándolas en su vida diaria',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia sociales lección N° 6”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: 'Muy bien, ahora ya sabes como cuidar tu cuerpo',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: 'Con1Ctrl',\n\t\t\ttitle: 'Cuido mi cuerpo'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-2', \n\t\t\ttemplateUrl: 'con2', \n\t\t\tcontroller: 'Con2Ctrl',\n\t\t\ttitle: 'Cuido mi cuerpo'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-3', \n\t\t\ttemplateUrl: 'con3', \n\t\t\tcontroller: 'Con3Ctrl',\n\t\t\ttitle: 'Cuido mi cuerpo'\n\t\t},\n\t\t{ \n\t\t\tname: '/conceptualizacion-4', \n\t\t\ttemplateUrl: 'con4', \n\t\t\tcontroller: 'Con4Ctrl',\n\t\t\ttitle: 'Cuido mi cuerpo'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3', \n\t\t\ttemplateUrl: 'act3', \n\t\t\tcontroller: 'Act3Ctrl',\n\t\t\ttitle: 'Actividad 3'\n\t\t},\n\t]\n});\n\nsoc106.controller('Con1Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"banarse\",\n\t\t\talt: \"Niño bañándose\"\n\t\t}\n\t]\n});\n\nsoc106.controller('Con2Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"lavar-dientes\",\n\t\t\talt: \"Niña lavándose los dientes\"\n\t\t}\n\t]\n});\n\nsoc106.controller('Con3Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"jugar\",\n\t\t\talt: \"Niño en silla de ruedas y niña jugando con un balón\"\n\t\t}\n\t]\n});\n\nsoc106.controller('Con4Ctrl', function ($scope) {\n\t$scope.data = [\n\t\t{ \n\t\t\tresource: \"dormir\",\n\t\t\talt: \"Niño acostado en su cama durmiendo\"\n\t\t}\n\t]\n});\n\nsoc106.controller('Act1Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tsrc: \"lavar-dientes\",\n\t\t\t\talt: \"Niña lavándose los dientes\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"banarse\",\n\t\t\t\talt: \"Niño bañándose\",\n\t\t\t\tanswer: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"nina-comiendo\",\n\t\t\t\talt: \"Niña comiendo con las manos sucias\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"lavarse-las-manos\",\n\t\t\t\talt: \"Niño lavándose las manos en el lavamanos\",\n\t\t\t\tanswer: true\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3\n\t};\n});\n\nsoc106.controller('Act2Ctrl', function ($scope) {\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc1: \"manos\",\n\t\t\t\talt1: \"Manos\",\n\t\t\t\tsrc2: \"lavarse-las-manos\",\n\t\t\t\talt2: \"Niño lavándose las manos en el lavamanos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"dientes\",\n\t\t\t\talt1: \"boca abierta donde se pueden ver los dientes y la lengua\",\n\t\t\t\tsrc2: \"lavar-dientes\",\n\t\t\t\talt2: \"Niña lavándose los dientes\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"pie\",\n\t\t\t\talt1: \"pie\",\n\t\t\t\tsrc2: \"cortar-unas\",\n\t\t\t\talt2: \"Mujer cortándose las uñas de los pies con el cortauñas\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 2,\n\t\trandomItems: true,\n\t\trandomTargets: true,\n\t\trightAnswerCallback: function (item) {\n\t\t\t// Buscamos el elemento de audio y lo reproducimos\t\n\t\t\t$('#audio-' + item.src2)[0].play();\n\t\t}\n\t};\n});\n\nsoc106.controller('Act3Ctrl', function ($scope) {\n\t$scope.data = {\n\t\titems: [\n\t\t\t{\n\t\t\t\tresource: \"peinarse\",\n\t\t\t\talt: \"Niña peinándose el cabello con una peinilla\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"lavarse-las-manos\",\n\t\t\t\talt: \"Niño lavándose las manos en el lavamanos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"lavar-dientes\",\n\t\t\t\talt: \"Niña lavándose los dientes\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tresource: \"banarse\",\n\t\t\t\talt: \"Niño bañándose\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3\n\t};\n});\n","var appManager = AppManager();\nvar soc107 = angular.module('soc107', ['activities']);\n\nappManager.configModule(soc107, {\n\tresources: '../resources/01/soc/07',\n\tcompetences1:'Identifico los principales recursos naturales (renovables y no renovables)',\n\tcompetences2:'Reconoce los recursos renovables y no renovables y los asocia con su medio físico',\n\tevidences: 'Ingresar al curso “Primaria incluyente”, seleccionar la herramienta actividades, hacer clic sobre el nombre “Actividades de evidencia sociales lección N° 7”, descargar y realizar la actividad propuesta, y enviarla al facilitador por esta misma herramienta en los tiempos programados',\n\tfarewell: '¡Felicitaciones!, has aprendido mucho',\n\troutes: [\n\t\t{ \n\t\t\tname: '/conceptualizacion-1', \n\t\t\ttemplateUrl: 'con1', \n\t\t\tcontroller: function(){},\n\t\t\ttitle: 'Vamos a repasar'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-1', \n\t\t\ttemplateUrl: 'act1', \n\t\t\tcontroller: 'Act1Ctrl',\n\t\t\ttitle: 'Actividad 1'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-2', \n\t\t\ttemplateUrl: 'act2', \n\t\t\tcontroller: 'Act2Ctrl',\n\t\t\ttitle: 'Actividad 2'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3-1', \n\t\t\ttemplateUrl: 'act3_1', \n\t\t\tcontroller: 'Act3_1Ctrl',\n\t\t\ttitle: 'Actividad 3'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-3-2', \n\t\t\ttemplateUrl: 'act3_2', \n\t\t\tcontroller: 'Act3_2Ctrl',\n\t\t\ttitle: 'Actividad 3'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4-1', \n\t\t\ttemplateUrl: 'act4_1', \n\t\t\tcontroller: 'Act4_1Ctrl',\n\t\t\ttitle: 'Actividad 4'\n\t\t},\n\t\t{ \n\t\t\tname: '/actividad-4-2', \n\t\t\ttemplateUrl: 'act4_2', \n\t\t\tcontroller: 'Act4_2Ctrl',\n\t\t\ttitle: 'Actividad 4'\n\t\t}\n\t]\n});\n\nsoc107.controller('Act1Ctrl', function ($scope) {\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc1: \"policia\",\n\t\t\t\talt1: \"Policía \",\n\t\t\t\tsrc2: \"ladron\",\n\t\t\t\talt2: \"Ladrón con una bolsa en su mano donde lleva los objetos que se robó\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"hospital\",\n\t\t\t\talt1: \"hospital\",\n\t\t\t\tsrc2: \"enfermo\",\n\t\t\t\talt2: \"Niño enfermo recibiendo la fórmula médica de manos de su médico\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"bombero\",\n\t\t\t\talt1: \"Bombero con extintor a un lado\",\n\t\t\t\tsrc2: \"incendio\",\n\t\t\t\talt2: \"Casa incendiándose\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"colegio\",\n\t\t\t\talt1: \"colegio\",\n\t\t\t\tsrc2: \"estudiar\",\n\t\t\t\talt2: \"Niño con un libro en su mano, estudiando\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\trandomItems: true,\n\t\trandomTargets: true\n\t};\n});\n\nsoc107.controller('Act2Ctrl', function ($scope) {\n\t$scope.options = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc1: \"manos\",\n\t\t\t\talt1: \"Manos\",\n\t\t\t\tsrc2: \"lavarse-las-manos\",\n\t\t\t\talt2: \"Niño lavándose las manos en el lavamanos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"dientes\",\n\t\t\t\talt1: \"boca abierta donde se pueden ver los dientes y la lengua\",\n\t\t\t\tsrc2: \"lavar-dientes\",\n\t\t\t\talt2: \"Niña lavándose los dientes\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"cabello\",\n\t\t\t\talt1: \"Niña mostrando su cabello\",\n\t\t\t\tsrc2: \"peinarse\",\n\t\t\t\talt2: \"Niña peinándose su cabello con una peinilla\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc1: \"pie\",\n\t\t\t\talt1: \"pie\",\n\t\t\t\tsrc2: \"cortar-unas\",\n\t\t\t\talt2: \"Mujer cortándose las uñas de los pies con el cortauñas\"\n\t\t\t}\n\t\t],\n\t\tminRightAnswers: 3,\n\t\trandomItems: true,\n\t\trandomTargets: true,\n\t\trightAnswerCallback: function (item) {\n\t\t\t// Buscamos el elemento de audio y lo reproducimos\t\n\t\t\t$('#audio-' + item.src2)[0].play();\n\t\t}\n\t};\n});\n\nsoc107.controller('Act3_1Ctrl', function ($scope) {\n\t// Obtenemos el audio deseado\n\tvar source = '<audio id=\"audio-contaminacion\" preload=\"auto\">' +\n\t\t\t\t\t\"<source src=\\\"\" + $scope.resources + \"/contaminacion.mp3\\\" type=\\\"audio/mpeg\\\">\" +\n\t\t\t\t'</audio>';\n\n\t$('#main-container').append(source);\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"humo.png\",\n\t\t\t\talt: \"Industria arrojando humo al aire libre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"sembrar.png\",\n\t\t\t\talt: \"Niña sembrando una planta\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"basurera.png\",\n\t\t\t\talt: \"Joven arrojando la basura dentro de una caneca\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"reciclar.png\",\n\t\t\t\talt: \"Tres canecas, una para depositar el vidrio y el cartón, otra para depositar los residuos ordinarios y la tercera para depositar el material plástico\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"fumar.png\",\n\t\t\t\talt: \"Cenicero con tres colillas de cigarrillo\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"basura.png\",\n\t\t\t\talt: \"Basura arrojada por fuera de la caneca\"\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3,\n\t\trightAnswerCallback: function (item) {\n\t\t\t// Reproducimos el audio\n\t\t\t$('#audio-contaminacion')[0].play();\t\n\t\t}\n\t};\n});\n\nsoc107.controller('Act3_2Ctrl', function ($scope) {\n\t// Obtenemos el audio deseado\n\tvar source = '<audio id=\"audio-proteccion\" preload=\"auto\">' +\n\t\t\t\t\t\"<source src=\\\"\" + $scope.resources + \"/proteccion.mp3\\\" type=\\\"audio/mpeg\\\">\" +\n\t\t\t\t'</audio>';\n\n\t$('#main-container').append(source);\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"humo.png\",\n\t\t\t\talt: \"Industria arrojando humo al aire libre\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"sembrar.png\",\n\t\t\t\talt: \"Niña sembrando una planta\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"basurera.png\",\n\t\t\t\talt: \"Joven arrojando la basura dentro de una caneca\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"reciclar.png\",\n\t\t\t\talt: \"Tres canecas, una para depositar el vidrio y el cartón, otra para depositar los residuos ordinarios y la tercera para depositar el material plástico\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"fumar.png\",\n\t\t\t\talt: \"Cenicero con tres colillas de cigarrillo\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"basura.png\",\n\t\t\t\talt: \"Basura arrojada por fuera de la caneca\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3,\n\t\trightAnswerCallback: function (item) {\n\t\t\t// Reproducimos el audio\n\t\t\t$('#audio-proteccion')[0].play();\t\n\t\t}\n\t};\n});\n\nsoc107.controller('Act4_1Ctrl', function ($scope) {\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"tractor.png\",\n\t\t\t\talt: \"Tractor\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"animales.png\",\n\t\t\t\talt: \"Tres vacas caminando por el campo\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"edificio.png\",\n\t\t\t\talt: \"Edificio\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"plantas-de-banano.png\",\n\t\t\t\talt: \"Cultivo de banano\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"semaforo.png\",\n\t\t\t\talt: \"Semáforo\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"metroplus.png\",\n\t\t\t\talt: \"Bus de Metroplús\"\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3\n\t};\n});\n\nsoc107.controller('Act4_2Ctrl', function ($scope) {\n\n\t$scope.data = {\n\t\tdata: [\n\t\t\t{\n\t\t\t\tsrc: \"tractor.png\",\n\t\t\t\talt: \"Tractor\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"animales.png\",\n\t\t\t\talt: \"Tres vacas caminando por el campo\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"edificio.png\",\n\t\t\t\talt: \"Edificio\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"plantas-de-banano.png\",\n\t\t\t\talt: \"Cultivo de banano\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"semaforo.png\",\n\t\t\t\talt: \"Semáforo\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tsrc: \"metroplus.png\",\n\t\t\t\talt: \"Bus de Metroplús\",\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t],\n\t\tminRightAnswers: 2,\n\t\tchances: 3\n\t};\n});\n","// Binding for flash messages\nko.bindingHandlers.flash = {\n    init: function(element) {\n        $(element).hide();\n    },\n    update: function(element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value) {\n            $(element).stop().hide().text(value).fadeIn(function() {\n                clearTimeout($(element).data(\"timeout\"));\n                $(element).data(\"timeout\", setTimeout(function() {\n                    $(element).fadeOut();\n                    valueAccessor()(null);\n                }, 1000));\n            });\n        }\n    },\n    timeout: null\n};"]}